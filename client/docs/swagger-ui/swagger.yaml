swagger: '2.0'
info:
  title: Injective Chain - Legacy REST and gRPC Gateway docs
  description: 'A REST interface for state queries, legacy transactions'
  version: 1.0.0
paths:
  /injective/peggy/v1beta/batch/confirms:
    get:
      operationId: BatchConfirms
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              confirms:
                type: array
                items:
                  type: object
                  properties:
                    nonce:
                      type: string
                      format: uint64
                    token_contract:
                      type: string
                    eth_signer:
                      type: string
                    validator:
                      type: string
                    signature:
                      type: string
                  title: >-
                    MsgConfirmBatch

                    When validators observe a MsgRequestBatch they form a batch
                    by ordering

                    transactions currently in the txqueue in order of highest to
                    lowest fee,

                    cutting off when the batch either reaches a hardcoded
                    maximum size (to be

                    decided, probably around 100) or when transactions stop
                    being profitable

                    (TODO determine this without nondeterminism) This message
                    includes the batch

                    as well as an Ethereum signature over this batch by the
                    validator

                    -------------
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: nonce
          in: query
          required: false
          type: string
          format: uint64
        - name: contract_address
          in: query
          required: false
          type: string
      tags:
        - Query
  /injective/peggy/v1beta/batch/outgoingtx:
    get:
      operationId: OutgoingTxBatches
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              batches:
                type: array
                items:
                  type: object
                  properties:
                    batch_nonce:
                      type: string
                      format: uint64
                    transactions:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uint64
                          sender:
                            type: string
                          dest_address:
                            type: string
                          erc20_token:
                            type: object
                            properties:
                              amount:
                                type: string
                              contract:
                                type: string
                            title: >-
                              ERC20Token unique identifier for an Ethereum ERC20
                              token.

                              CONTRACT:

                              The contract address on ETH of the token (note:
                              developers should look up

                              the token symbol using the address on ETH to
                              display for UI)
                          erc20_fee:
                            type: object
                            properties:
                              amount:
                                type: string
                              contract:
                                type: string
                            title: >-
                              ERC20Token unique identifier for an Ethereum ERC20
                              token.

                              CONTRACT:

                              The contract address on ETH of the token (note:
                              developers should look up

                              the token symbol using the address on ETH to
                              display for UI)
                        title: >-
                          OutgoingTransferTx represents an individual send from
                          Peggy to ETH
                    token_contract:
                      type: string
                  title: >-
                    OutgoingTxBatch represents a batch of transactions going
                    from Peggy to ETH
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  '/injective/peggy/v1beta/batch/{address}':
    get:
      operationId: LastPendingBatchRequestByAddr
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              batch:
                type: object
                properties:
                  batch_nonce:
                    type: string
                    format: uint64
                  transactions:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uint64
                        sender:
                          type: string
                        dest_address:
                          type: string
                        erc20_token:
                          type: object
                          properties:
                            amount:
                              type: string
                            contract:
                              type: string
                          title: >-
                            ERC20Token unique identifier for an Ethereum ERC20
                            token.

                            CONTRACT:

                            The contract address on ETH of the token (note:
                            developers should look up

                            the token symbol using the address on ETH to display
                            for UI)
                        erc20_fee:
                          type: object
                          properties:
                            amount:
                              type: string
                            contract:
                              type: string
                          title: >-
                            ERC20Token unique identifier for an Ethereum ERC20
                            token.

                            CONTRACT:

                            The contract address on ETH of the token (note:
                            developers should look up

                            the token symbol using the address on ETH to display
                            for UI)
                      title: >-
                        OutgoingTransferTx represents an individual send from
                        Peggy to ETH
                  token_contract:
                    type: string
                title: >-
                  OutgoingTxBatch represents a batch of transactions going from
                  Peggy to ETH
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: address
          in: path
          required: true
          type: string
      tags:
        - Query
  '/injective/peggy/v1beta/batch/{nonce}':
    get:
      operationId: BatchRequestByNonce
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              batch:
                type: object
                properties:
                  batch_nonce:
                    type: string
                    format: uint64
                  transactions:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uint64
                        sender:
                          type: string
                        dest_address:
                          type: string
                        erc20_token:
                          type: object
                          properties:
                            amount:
                              type: string
                            contract:
                              type: string
                          title: >-
                            ERC20Token unique identifier for an Ethereum ERC20
                            token.

                            CONTRACT:

                            The contract address on ETH of the token (note:
                            developers should look up

                            the token symbol using the address on ETH to display
                            for UI)
                        erc20_fee:
                          type: object
                          properties:
                            amount:
                              type: string
                            contract:
                              type: string
                          title: >-
                            ERC20Token unique identifier for an Ethereum ERC20
                            token.

                            CONTRACT:

                            The contract address on ETH of the token (note:
                            developers should look up

                            the token symbol using the address on ETH to display
                            for UI)
                      title: >-
                        OutgoingTransferTx represents an individual send from
                        Peggy to ETH
                  token_contract:
                    type: string
                title: >-
                  OutgoingTxBatch represents a batch of transactions going from
                  Peggy to ETH
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: nonce
          in: path
          required: true
          type: string
          format: uint64
        - name: contract_address
          in: query
          required: false
          type: string
      tags:
        - Query
  '/injective/peggy/v1beta/confirms/{nonce}':
    get:
      operationId: ValsetConfirmsByNonce
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              confirms:
                type: array
                items:
                  type: object
                  properties:
                    nonce:
                      type: string
                      format: uint64
                    validator:
                      type: string
                    eth_address:
                      type: string
                    signature:
                      type: string
                  description: >-
                    MsgValsetConfirm

                    this is the message sent by the validators when they wish to
                    submit their

                    signatures over the validator set at a given block height. A
                    validator must

                    first call MsgSetEthAddress to set their Ethereum address to
                    be used for

                    signing. Then someone (anyone) must make a ValsetRequest the
                    request is

                    essentially a messaging mechanism to determine which block
                    all validators

                    should submit signatures over. Finally validators sign the
                    validator set,

                    powers, and Ethereum addresses of the entire validator set
                    at the height of a

                    ValsetRequest and submit that signature with this message.


                    If a sufficient number of validators (66% of voting power)
                    (A) have set

                    Ethereum addresses and (B) submit ValsetConfirm messages
                    with their

                    signatures it is then possible for anyone to view these
                    signatures in the

                    chain store and submit them to Ethereum to update the
                    validator set

                    -------------
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: nonce
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  '/injective/peggy/v1beta/oracle/eventnonce/{address}':
    get:
      operationId: LastEventNonceByAddr
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              event_nonce:
                type: string
                format: uint64
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: address
          in: path
          required: true
          type: string
      tags:
        - Query
  /injective/peggy/v1beta/params:
    get:
      summary: Deployments queries deployments
      operationId: PeggyParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                type: object
                properties:
                  peggy_id:
                    type: string
                  contract_source_hash:
                    type: string
                  start_threshold:
                    type: string
                    format: uint64
                  ethereum_address:
                    type: string
                  bridge_chain_id:
                    type: string
                    format: uint64
                  inj_contract_address:
                    type: string
                description: >-
                  Params represent the peggy genesis and store parameters

                  PEGGYID: 

                  a random 32 byte value to prevent signature reuse

                  CONTRACTHASH: 

                  the code hash of a known good version of the Peggy contract

                  solidity code. It will be used to verify exactly which version
                  of the

                  bridge will be deployed.

                  STARTTHRESHOLD:

                  the percentage of total voting power that must be online

                  and participating in Peggy operations before a bridge can
                  start operating

                  BRIDGECONTRACTADDRESS: 

                  is address of the bridge contract on the Ethereum side

                  BRIDGECHAINID:

                  the unique identifier of the Ethereum chain

                  INJADDRESS:

                  is address of INJ erc-20 contract on Ethereum side.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /injective/peggy/v1beta/unbatched/outgoingtx:
    get:
      operationId: UnbatchedTxPool
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              outgoingTxs:
                type: array
                items:
                  type: object
                  properties:
                    sender:
                      type: string
                    dest_addr:
                      type: string
                    amount:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    bridge_fee:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                  title: |-
                    OutgoingTx is a withdrawal on the bridged contract
                    TODO: can this type be replaced by outgoing transfer tx
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: address
          in: query
          required: false
          type: string
      tags:
        - Query
  /injective/peggy/v1beta/valset:
    get:
      operationId: ValsetRequest
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              valset:
                type: object
                properties:
                  nonce:
                    type: string
                    format: uint64
                  members:
                    type: array
                    items:
                      type: object
                      properties:
                        power:
                          type: string
                          format: uint64
                        ethereum_address:
                          type: string
                      title: >-
                        BridgeValidator represents a validator's ETH address and
                        its power
                title: >-
                  Valset is the Ethereum Bridge Multsig Set, each peggy
                  validator also

                  maintains an ETH key to sign messages, these are used to check
                  signatures on

                  ETH because of the significant gas savings
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: nonce
          in: query
          required: false
          type: string
          format: uint64
      tags:
        - Query
  /injective/peggy/v1beta/valset/confirm:
    get:
      operationId: ValsetConfirm
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              confirm:
                type: object
                properties:
                  nonce:
                    type: string
                    format: uint64
                  validator:
                    type: string
                  eth_address:
                    type: string
                  signature:
                    type: string
                description: >-
                  MsgValsetConfirm

                  this is the message sent by the validators when they wish to
                  submit their

                  signatures over the validator set at a given block height. A
                  validator must

                  first call MsgSetEthAddress to set their Ethereum address to
                  be used for

                  signing. Then someone (anyone) must make a ValsetRequest the
                  request is

                  essentially a messaging mechanism to determine which block all
                  validators

                  should submit signatures over. Finally validators sign the
                  validator set,

                  powers, and Ethereum addresses of the entire validator set at
                  the height of a

                  ValsetRequest and submit that signature with this message.


                  If a sufficient number of validators (66% of voting power) (A)
                  have set

                  Ethereum addresses and (B) submit ValsetConfirm messages with
                  their

                  signatures it is then possible for anyone to view these
                  signatures in the

                  chain store and submit them to Ethereum to update the
                  validator set

                  -------------
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: nonce
          in: query
          required: false
          type: string
          format: uint64
        - name: address
          in: query
          required: false
          type: string
      tags:
        - Query
  /injective/peggy/v1beta/valset/current:
    get:
      operationId: CurrentValset
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              valset:
                type: object
                properties:
                  nonce:
                    type: string
                    format: uint64
                  members:
                    type: array
                    items:
                      type: object
                      properties:
                        power:
                          type: string
                          format: uint64
                        ethereum_address:
                          type: string
                      title: >-
                        BridgeValidator represents a validator's ETH address and
                        its power
                title: >-
                  Valset is the Ethereum Bridge Multsig Set, each peggy
                  validator also

                  maintains an ETH key to sign messages, these are used to check
                  signatures on

                  ETH because of the significant gas savings
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /injective/peggy/v1beta/valset/last:
    get:
      operationId: LastPendingValsetRequestByAddr
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              valset:
                type: object
                properties:
                  nonce:
                    type: string
                    format: uint64
                  members:
                    type: array
                    items:
                      type: object
                      properties:
                        power:
                          type: string
                          format: uint64
                        ethereum_address:
                          type: string
                      title: >-
                        BridgeValidator represents a validator's ETH address and
                        its power
                title: >-
                  Valset is the Ethereum Bridge Multsig Set, each peggy
                  validator also

                  maintains an ETH key to sign messages, these are used to check
                  signatures on

                  ETH because of the significant gas savings
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: address
          in: query
          required: false
          type: string
      tags:
        - Query
  /injective/peggy/v1beta/valset/requests:
    get:
      operationId: LastValsetRequests
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              valsets:
                type: array
                items:
                  type: object
                  properties:
                    nonce:
                      type: string
                      format: uint64
                    members:
                      type: array
                      items:
                        type: object
                        properties:
                          power:
                            type: string
                            format: uint64
                          ethereum_address:
                            type: string
                        title: >-
                          BridgeValidator represents a validator's ETH address
                          and its power
                  title: >-
                    Valset is the Ethereum Bridge Multsig Set, each peggy
                    validator also

                    maintains an ETH key to sign messages, these are used to
                    check signatures on

                    ETH because of the significant gas savings
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /injective/erc20bridge/v1beta1/bridges:
    get:
      summary: Retrieves registered bridges
      operationId: Bridges
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      title: bridge name
                    erc20_address:
                      type: string
                      title: address of ERC20 contract token
                    cosmos_denom:
                      type: string
                      title: cosmos-native denominator to mapped to ERC20
                    enabled:
                      type: boolean
                      title: shows token mapping bridge enable status
                  description: >-
                    TokenMapping defines a mapping for cosmos denom and erc20
                    address.
            description: >-
              QueryBridgesResponse is the response type for the Query/Storage
              RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /injective/erc20bridge/v1beta1/hubparams:
    get:
      summary: Retrieves hub params
      operationId: HubParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  hub_address:
                    type: string
            description: >-
              QueryHubParamsResponse is the response type for the Query/Storage
              RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /injective/exchange/v1beta1/derivativeOrderbook:
    get:
      summary: Retrieves a derivative market orderbook
      operationId: QueryDerivativeOrderbook
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              shorts:
                type: array
                items:
                  type: object
                  properties:
                    p:
                      type: string
                      title: price
                    q:
                      type: string
                      title: quantity
                  title: An orderbook price level
                title: The shorts price levels
              longs:
                type: array
                items:
                  type: object
                  properties:
                    p:
                      type: string
                      title: price
                    q:
                      type: string
                      title: quantity
                  title: An orderbook price level
                title: The longs price levels
            description: |-
              QueryDerivativeOrderbookResponse defines the response type for
              Query/derivativeOrderbook RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: market_id
          description: The marketIDs of the orderbook to obtain.
          in: query
          required: false
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/derivativeOrderbookDepthAvgWeightedPrice:
    get:
      summary: >-
        Retrieves a batch list of average weighted prices for a given derivative
        market, direction and quantity
      operationId: QueryDerivativeOrderbookDepthAvgWeightedPrice
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              avg_weighted_price:
                type: string
                title: >-
                  The average weighted price for the given amount of market
                  depth
            description: >-
              QueryDerivativeOrderbookDepthAvgWeightedPriceResponse defines the
              response type for

              Query/derivativeOrderbookDepthAvgWeightedPrice RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: quote_request.exchange_address
          description: The exchange address for the orders.
          in: query
          required: false
          type: string
        - name: quote_request.market_id
          description: The desired marketID of the derivative orders to fill.
          in: query
          required: false
          type: string
        - name: quote_request.quantity
          description: The desired quantity of derivative orders to fill.
          in: query
          required: false
          type: string
        - name: quote_request.isLong
          description: >-
            True if the desired direction of the derivative orders quotes you
            want is long.
          in: query
          required: false
          type: boolean
        - name: quote_request.maker_address
          description: >-
            Optional maker address of trader requesting the quote (to filter out
            the

            trader's own orders).
          in: query
          required: false
          type: string
        - name: quote_request.filter_price_bound
          description: >-
            Optional price bound. If isLong, filters out orders whose price is
            less than the price bound

            If !isLong, filters out orders whose price is greater than the price
            bound.
          in: query
          required: false
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/derivativeOrderbookDepthBatchAvgWeightedPrice:
    get:
      summary: >-
        Retrieves a batch list of average weighted prices for a given derivative
        market, direction and quantity
      operationId: QueryDerivativeOrderbookDepthBatchAvgWeightedPrice
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              avg_weighted_price:
                type: array
                items:
                  type: string
                title: >-
                  The average weighted price for the given amount of market
                  depth
            description: >-
              QueryDerivativeOrderbookDepthBatchAvgWeightedPriceResponse defines
              the response type for

              Query/derivativeOrdersBatchQuote RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /injective/exchange/v1beta1/derivativeOrders:
    get:
      summary: Retrieves a list of derivative orders matching the filtering rules.
      operationId: QueryDerivativeOrders
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              records:
                type: array
                items:
                  type: object
                  properties:
                    order:
                      type: object
                      properties:
                        chain_id:
                          type: string
                          format: int64
                          description: Specify chain ID.
                        exchange_address:
                          type: string
                          description: Exchange v3 contract address.
                        maker_address:
                          type: string
                          description: Address that created the order.
                        taker_address:
                          type: string
                          description: >-
                            Address that is allowed to fill the order. If set to
                            0, any address is

                            allowed to fill the order.
                        fee_recipient_address:
                          type: string
                          description: Address that will receive fees when order is filled.
                        sender_address:
                          type: string
                          description: >-
                            Address that is allowed to call Exchange contract
                            methods that affect this

                            order. If set to 0, any address is allowed to call
                            these methods.
                        maker_asset_amount:
                          type: string
                          description: >-
                            Amount of makerAsset being offered by maker. Must be
                            greater than 0.
                        taker_asset_amount:
                          type: string
                          description: >-
                            Amount of takerAsset being bid on by maker. Must be
                            greater than 0.
                        maker_fee:
                          type: string
                          description: >-
                            Amount of ZRX paid to feeRecipient by maker when
                            order is filled. If set to

                            0, no transfer of ZRX from maker to feeRecipient
                            will be attempted.
                        taker_fee:
                          type: string
                          description: >-
                            Amount of ZRX paid to feeRecipient by taker when
                            order is filled. If set to

                            0, no transfer of ZRX from taker to feeRecipient
                            will be attempted.
                        expiration_time_seconds:
                          type: string
                          description: Timestamp in seconds at which order expires.
                        salt:
                          type: string
                          description: >-
                            Arbitrary number to facilitate uniqueness of the
                            order's hash.
                        maker_asset_data:
                          type: string
                          description: >-
                            ABIv2 encoded data that can be decoded by a
                            specified proxy contract when

                            transferring makerAsset.
                        taker_asset_data:
                          type: string
                          description: >-
                            ABIv2 encoded data that can be decoded by a
                            specified proxy contract when

                            transferring takerAsset.
                        maker_fee_asset_data:
                          type: string
                          description: >-
                            ABIv2 encoded data that can be decoded by a
                            specified proxy contract when

                            transferring makerFee.
                        taker_fee_asset_data:
                          type: string
                          description: >-
                            ABIv2 encoded data that can be decoded by a
                            specified proxy contract when

                            transferring takerFee.
                        signature:
                          type: string
                          description: Order signature.
                      description: A valid signed 0x order based on the schema.
                    trade_pair_hash:
                      type: string
                    filled_amount:
                      type: string
                    status:
                      type: string
                      format: int64
                    index_price_requirement:
                      type: string
                    subaccount_i_d:
                      type: string
                    order_type:
                      type: string
                      format: uint64
                    trigger_price:
                      type: string
                  description: A valid signed 0x order with Metadata.
                description: An array of matched orders.
            description: |-
              QueryDerivativeOrdersResponse defines the response type for
              Query/DerivativeOrders RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: filters.contract_price_bound
          description: for derivatives.
          in: query
          required: false
          type: string
        - name: filters.market_id
          in: query
          required: false
          type: string
        - name: filters.is_long
          in: query
          required: false
          type: boolean
        - name: filters.not_expired
          description: for normal orders.
          in: query
          required: false
          type: boolean
        - name: filters.maker_asset_address
          in: query
          required: false
          type: string
        - name: filters.taker_asset_address
          in: query
          required: false
          type: string
        - name: filters.exchange_address
          in: query
          required: false
          type: string
        - name: filters.sender_address
          in: query
          required: false
          type: string
        - name: filters.maker_asset_data
          in: query
          required: false
          type: string
        - name: filters.taker_asset_data
          in: query
          required: false
          type: string
        - name: filters.maker_asset_amount
          in: query
          required: false
          type: string
        - name: filters.taker_asset_amount
          in: query
          required: false
          type: string
        - name: filters.maker_address
          in: query
          required: false
          type: string
        - name: filters.not_maker_address
          in: query
          required: false
          type: string
        - name: filters.taker_address
          in: query
          required: false
          type: string
        - name: filters.trader_address
          in: query
          required: false
          type: string
        - name: filters.fee_recipient_address
          in: query
          required: false
          type: string
        - name: filters.maker_fee_asset_data
          description: Filters orders with the specified makerFeeAssetData.
          in: query
          required: false
          type: string
        - name: filters.taker_fee_asset_data
          description: Filters orders with the specified takerFeeAssetData.
          in: query
          required: false
          type: string
        - name: filters.subaccount_nonce
          description: Filters orders with the specified subaccount nonce.
          in: query
          required: false
          type: string
        - name: filters.direction
          description: Filters orders to match a direction "long" or "short".
          in: query
          required: false
          type: string
        - name: filters.price_lt_or_eq
          description: >-
            Filter out orders whose price is not less than or equal to the
            filter bound.
          in: query
          required: false
          type: string
        - name: filters.price_gt_or_eq
          description: >-
            Filter out orders whose price is not greater than or equal to the
            filter

            bound.
          in: query
          required: false
          type: string
        - name: filters.index_price
          description: Filters orders to satisfy the indexPriceMinMarginRequirement.
          in: query
          required: false
          type: string
        - name: filters.subaccount_i_d
          description: Filters orders to match the subaccountID.
          in: query
          required: false
          type: string
        - name: status
          description: Filter by status of the order.
          in: query
          required: false
          type: string
        - name: collection
          description: Filter by collection of the order.
          in: query
          required: false
          type: string
        - name: trade_pair_hash
          description: Filter by trade pair hash.
          in: query
          required: false
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/derivativeOrdersBatchQuote:
    get:
      summary: >-
        Retrieves a batch list of orders matching a given market, direction and
        quantity
      operationId: QueryDerivativeOrdersBatchQuote
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              order_quotes:
                type: array
                items:
                  type: object
                  properties:
                    market_id:
                      type: string
                    quotes:
                      type: array
                      items:
                        type: object
                        properties:
                          order:
                            type: object
                            properties:
                              chain_id:
                                type: string
                                format: int64
                                description: Specify chain ID.
                              exchange_address:
                                type: string
                                description: Exchange v3 contract address.
                              maker_address:
                                type: string
                                description: Address that created the order.
                              taker_address:
                                type: string
                                description: >-
                                  Address that is allowed to fill the order. If
                                  set to 0, any address is

                                  allowed to fill the order.
                              fee_recipient_address:
                                type: string
                                description: >-
                                  Address that will receive fees when order is
                                  filled.
                              sender_address:
                                type: string
                                description: >-
                                  Address that is allowed to call Exchange
                                  contract methods that affect this

                                  order. If set to 0, any address is allowed to
                                  call these methods.
                              maker_asset_amount:
                                type: string
                                description: >-
                                  Amount of makerAsset being offered by maker.
                                  Must be greater than 0.
                              taker_asset_amount:
                                type: string
                                description: >-
                                  Amount of takerAsset being bid on by maker.
                                  Must be greater than 0.
                              maker_fee:
                                type: string
                                description: >-
                                  Amount of ZRX paid to feeRecipient by maker
                                  when order is filled. If set to

                                  0, no transfer of ZRX from maker to
                                  feeRecipient will be attempted.
                              taker_fee:
                                type: string
                                description: >-
                                  Amount of ZRX paid to feeRecipient by taker
                                  when order is filled. If set to

                                  0, no transfer of ZRX from taker to
                                  feeRecipient will be attempted.
                              expiration_time_seconds:
                                type: string
                                description: Timestamp in seconds at which order expires.
                              salt:
                                type: string
                                description: >-
                                  Arbitrary number to facilitate uniqueness of
                                  the order's hash.
                              maker_asset_data:
                                type: string
                                description: >-
                                  ABIv2 encoded data that can be decoded by a
                                  specified proxy contract when

                                  transferring makerAsset.
                              taker_asset_data:
                                type: string
                                description: >-
                                  ABIv2 encoded data that can be decoded by a
                                  specified proxy contract when

                                  transferring takerAsset.
                              maker_fee_asset_data:
                                type: string
                                description: >-
                                  ABIv2 encoded data that can be decoded by a
                                  specified proxy contract when

                                  transferring makerFee.
                              taker_fee_asset_data:
                                type: string
                                description: >-
                                  ABIv2 encoded data that can be decoded by a
                                  specified proxy contract when

                                  transferring takerFee.
                              signature:
                                type: string
                                description: Order signature.
                            description: A valid signed 0x order based on the schema.
                          fillable_amount:
                            type: string
                        title: An order quote with fillable data
                  title: An orderquote info for a given market
                title: The derivative orders quote batch for the taker
            description: >-
              QueryDerivativeOrdersQuoteBatchResponse defines the response type
              for

              Query/derivativeOrdersBatchQuote RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /injective/exchange/v1beta1/derivativeOrdersQuote:
    get:
      summary: >-
        Retrieves a list of orders matching a given market, direction and
        quantity
      operationId: QueryDerivativeOrdersQuote
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              quotes:
                type: array
                items:
                  type: object
                  properties:
                    order:
                      type: object
                      properties:
                        chain_id:
                          type: string
                          format: int64
                          description: Specify chain ID.
                        exchange_address:
                          type: string
                          description: Exchange v3 contract address.
                        maker_address:
                          type: string
                          description: Address that created the order.
                        taker_address:
                          type: string
                          description: >-
                            Address that is allowed to fill the order. If set to
                            0, any address is

                            allowed to fill the order.
                        fee_recipient_address:
                          type: string
                          description: Address that will receive fees when order is filled.
                        sender_address:
                          type: string
                          description: >-
                            Address that is allowed to call Exchange contract
                            methods that affect this

                            order. If set to 0, any address is allowed to call
                            these methods.
                        maker_asset_amount:
                          type: string
                          description: >-
                            Amount of makerAsset being offered by maker. Must be
                            greater than 0.
                        taker_asset_amount:
                          type: string
                          description: >-
                            Amount of takerAsset being bid on by maker. Must be
                            greater than 0.
                        maker_fee:
                          type: string
                          description: >-
                            Amount of ZRX paid to feeRecipient by maker when
                            order is filled. If set to

                            0, no transfer of ZRX from maker to feeRecipient
                            will be attempted.
                        taker_fee:
                          type: string
                          description: >-
                            Amount of ZRX paid to feeRecipient by taker when
                            order is filled. If set to

                            0, no transfer of ZRX from taker to feeRecipient
                            will be attempted.
                        expiration_time_seconds:
                          type: string
                          description: Timestamp in seconds at which order expires.
                        salt:
                          type: string
                          description: >-
                            Arbitrary number to facilitate uniqueness of the
                            order's hash.
                        maker_asset_data:
                          type: string
                          description: >-
                            ABIv2 encoded data that can be decoded by a
                            specified proxy contract when

                            transferring makerAsset.
                        taker_asset_data:
                          type: string
                          description: >-
                            ABIv2 encoded data that can be decoded by a
                            specified proxy contract when

                            transferring takerAsset.
                        maker_fee_asset_data:
                          type: string
                          description: >-
                            ABIv2 encoded data that can be decoded by a
                            specified proxy contract when

                            transferring makerFee.
                        taker_fee_asset_data:
                          type: string
                          description: >-
                            ABIv2 encoded data that can be decoded by a
                            specified proxy contract when

                            transferring takerFee.
                        signature:
                          type: string
                          description: Order signature.
                      description: A valid signed 0x order based on the schema.
                    fillable_amount:
                      type: string
                  title: An order quote with fillable data
                title: The derivative orders quotes for the taker
            description: |-
              QueryDerivativeOrdersQuoteResponse defines the response type for
              Query/derivativeOrdersQuote RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: exchange_address
          description: The exchange address for the orders.
          in: query
          required: false
          type: string
        - name: market_id
          description: The desired marketID of the derivative orders to fill.
          in: query
          required: false
          type: string
        - name: quantity
          description: The desired quantity of derivative orders to fill.
          in: query
          required: false
          type: string
        - name: isLong
          description: >-
            True if the desired direction of the derivative orders quotes you
            want is long.
          in: query
          required: false
          type: boolean
        - name: maker_address
          description: >-
            Optional maker address of trader requesting the quote (to filter out
            the

            trader's own orders).
          in: query
          required: false
          type: string
        - name: filter_price_bound
          description: >-
            Optional price bound. If isLong, filters out orders whose price is
            less than the price bound

            If !isLong, filters out orders whose price is greater than the price
            bound.
          in: query
          required: false
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/exchangeParams:
    get:
      summary: Retrieves exchange params
      operationId: QueryExchangeParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                type: object
                properties:
                  exchange_address:
                    type: string
                  coordinator_address:
                    type: string
                  default_spot_maker_fee:
                    type: string
                    title: >-
                      default_spot_maker_fee defines the default exchange trade
                      fee for makers on a spot market
                  default_spot_taker_fee:
                    type: string
                    title: >-
                      default_spot_taker_fee defines the default exchange trade
                      fee for takers on a new spot market
                  default_derivative_maker_fee:
                    type: string
                    title: >-
                      default_derivative_maker_fee defines the default exchange
                      trade fee for makers on a new derivative market
                  default_derivative_taker_fee:
                    type: string
                    title: >-
                      default_derivative_taker_fee defines the default exchange
                      trade fee for takers on a new derivative market
                  default_initial_margin_ratio:
                    type: string
                    title: >-
                      default_initial_margin_ratio defines the default initial
                      margin ratio on a new derivative market
                  default_maintenance_margin_ratio:
                    type: string
                    title: >-
                      default_maintenance_margin_ratio defines the default
                      maintenance margin ratio on a new derivative market
                  default_funding_interval:
                    type: integer
                    format: int64
                    title: >-
                      default_funding_interval defines the default funding
                      interval on a derivative market
                  funding_multiple:
                    type: integer
                    format: int64
                    title: >-
                      funding_multiple defines the timestamp multiple that the
                      funding timestamp should be a multiple of
            description: >-
              QueryExchangeParamsRequest is the response type for the
              Query/ExchangeParams RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /injective/exchange/v1beta1/marginInfo:
    get:
      summary: Retrieves a subaccount's margin info for a given base currency
      operationId: QueryMarginInfo
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              margin_info:
                type: object
                properties:
                  margin_hold:
                    type: string
                  total_deposits:
                    type: string
                title: An subaccount's margin info for a given base currency
            description: |-
              QueryMarginInfoResponse defines the response type for
              Query/marginInfo RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: maker_address
          description: The maker_address of the trader.
          in: query
          required: false
          type: string
        - name: taker_fee
          description: The subaccount nonce of the trader.
          in: query
          required: false
          type: string
        - name: subaccount_i_d
          in: query
          required: false
          type: string
        - name: base_currency
          in: query
          required: false
          type: string
        - name: exchange_address
          in: query
          required: false
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/market:
    get:
      summary: Retrieves a derivative market by its ID or ticker.
      operationId: QueryDerivativeMarket
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              market:
                type: object
                properties:
                  ticker:
                    type: string
                    description: Ticker for the derivative contract.
                  oracle:
                    type: string
                    title: Address of the oracle for the derivative contract
                  base_currency:
                    type: string
                    title: Address of the base currency for the derivative contract
                  nonce:
                    type: string
                    title: >-
                      Random number to faciltate uniqueness of the derivative
                      market ID
                  market_id:
                    type: string
                    description: Unique market ID.
                  enabled:
                    type: boolean
                    description: >-
                      If false, then the pair is suspended and trades cannot be
                      made.
                  exchange_address:
                    type: string
                    title: exchange address
                  price_factor:
                    type: string
                    title: price factor
                  index_price:
                    type: string
                    title: index price
                  initial_margin_ratio:
                    type: string
                    title: InitialMarginRatioPermyriad
                  maintenance_margin_ratio:
                    type: string
                    title: MaintenanceMarginRatioPermyriad
                  maker_tx_fee:
                    type: string
                    title: MakerTxFeePermyriad
                  taker_tx_fee:
                    type: string
                    title: TakerTxFeePermyriad
                  next_funding_timestamp:
                    type: string
                    title: NextFundingTimestamp in seconds
                  funding_interval:
                    type: string
                    title: FundingInterval in seconds
                  cumulative_funding:
                    type: string
                    title: Cumulative Funding in seconds
                description: >-
                  An object describing a derivative market in the Injective
                  Futures Protocol.
            description: |-
              QueryDerivativeMarketResponse defines the request type for
              Query/DerivativeMarket RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: market_id
          in: query
          required: false
          type: string
        - name: ticker
          in: query
          required: false
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/markets:
    get:
      summary: Retrieves a list of derivative markets.
      operationId: QueryDerivativeMarkets
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              markets:
                type: array
                items:
                  type: object
                  properties:
                    ticker:
                      type: string
                      description: Ticker for the derivative contract.
                    oracle:
                      type: string
                      title: Address of the oracle for the derivative contract
                    base_currency:
                      type: string
                      title: Address of the base currency for the derivative contract
                    nonce:
                      type: string
                      title: >-
                        Random number to faciltate uniqueness of the derivative
                        market ID
                    market_id:
                      type: string
                      description: Unique market ID.
                    enabled:
                      type: boolean
                      description: >-
                        If false, then the pair is suspended and trades cannot
                        be made.
                    exchange_address:
                      type: string
                      title: exchange address
                    price_factor:
                      type: string
                      title: price factor
                    index_price:
                      type: string
                      title: index price
                    initial_margin_ratio:
                      type: string
                      title: InitialMarginRatioPermyriad
                    maintenance_margin_ratio:
                      type: string
                      title: MaintenanceMarginRatioPermyriad
                    maker_tx_fee:
                      type: string
                      title: MakerTxFeePermyriad
                    taker_tx_fee:
                      type: string
                      title: TakerTxFeePermyriad
                    next_funding_timestamp:
                      type: string
                      title: NextFundingTimestamp in seconds
                    funding_interval:
                      type: string
                      title: FundingInterval in seconds
                    cumulative_funding:
                      type: string
                      title: Cumulative Funding in seconds
                  description: >-
                    An object describing a derivative market in the Injective
                    Futures Protocol.
                title: Array of found derivative markets
            description: |-
              QueryDerivativeMarketsResponse defines the response type for
              Query/DerivativeMarkets RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: exchange_address
          in: query
          required: false
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/positionInfo:
    get:
      summary: Retrieves a subaccount's margin info for a given base currency
      operationId: QueryPositionInfo
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              position_info:
                type: object
                properties:
                  isLong:
                    type: boolean
                  bankruptcy_price:
                    type: string
                  quantity:
                    type: string
                  positionHoldQuantity:
                    type: string
                  cumulativeFundingEntry:
                    type: string
                  margin:
                    type: string
                  entryPrice:
                    type: string
            description: |-
              QueryMarginInfoResponse defines the response type for
              Query/marginInfo RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: maker_address
          description: The maker_address of the trader.
          in: query
          required: false
          type: string
        - name: taker_fee
          description: The subaccount nonce of the trader.
          in: query
          required: false
          type: string
        - name: subaccount_i_d
          in: query
          required: false
          type: string
        - name: market_id
          in: query
          required: false
          type: string
        - name: exchange_address
          in: query
          required: false
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/spotMarket:
    get:
      summary: Retrieves a trade pair by name or hash.
      operationId: QuerySpotMarket
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              market:
                type: object
                properties:
                  ticker:
                    type: string
                    description: >-
                      A name of the pair in format AAA/BBB, where AAA is base
                      asset, BBB is quote asset.
                  base_asset:
                    type: string
                    description: Address of the base asset.
                  quote_asset:
                    type: string
                    description: Address of the quote asset.
                  maker_tx_fee:
                    type: string
                    title: MakerTxFeePermyriad
                  taker_tx_fee:
                    type: string
                    title: TakerTxFeePermyriad
                  market_id:
                    type: string
                    description: Unique market ID.
                  enabled:
                    type: boolean
                    description: >-
                      If false, then the market is suspended and trades cannot
                      be made.
                  exchange_address:
                    type: string
                    title: exchange address
                description: An object describing trade pair of two assets.
            description: |-
              QuerySpotMarketResponse defines the request type for
              Query/SpotMarket RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: ticker
          in: query
          required: false
          type: string
        - name: exchange_address
          in: query
          required: false
          type: string
        - name: market_id
          in: query
          required: false
          type: string
        - name: base_asset
          in: query
          required: false
          type: string
        - name: quote_asset
          in: query
          required: false
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/spotMarkets:
    get:
      summary: Retrieves a list of trade pairs.
      operationId: QuerySpotMarkets
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              records:
                type: array
                items:
                  type: object
                  properties:
                    ticker:
                      type: string
                      description: >-
                        A name of the pair in format AAA/BBB, where AAA is base
                        asset, BBB is quote asset.
                    base_asset:
                      type: string
                      description: Address of the base asset.
                    quote_asset:
                      type: string
                      description: Address of the quote asset.
                    maker_tx_fee:
                      type: string
                      title: MakerTxFeePermyriad
                    taker_tx_fee:
                      type: string
                      title: TakerTxFeePermyriad
                    market_id:
                      type: string
                      description: Unique market ID.
                    enabled:
                      type: boolean
                      description: >-
                        If false, then the market is suspended and trades cannot
                        be made.
                    exchange_address:
                      type: string
                      title: exchange address
                  description: An object describing trade pair of two assets.
                title: Array of found trade pairs
            description: |-
              QuerySpotMarketsResponse defines the response type for
              Query/SpotMarkets RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /injective/exchange/v1beta1/spotOrders:
    get:
      summary: Retrieves a list of 0x orders matching the filtering rules.
      operationId: QuerySpotOrders
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              records:
                type: array
                items:
                  type: object
                  properties:
                    order:
                      type: object
                      properties:
                        chain_id:
                          type: string
                          format: int64
                          description: Specify chain ID.
                        exchange_address:
                          type: string
                          description: Exchange v3 contract address.
                        maker_address:
                          type: string
                          description: Address that created the order.
                        taker_address:
                          type: string
                          description: >-
                            Address that is allowed to fill the order. If set to
                            0, any address is

                            allowed to fill the order.
                        fee_recipient_address:
                          type: string
                          description: Address that will receive fees when order is filled.
                        sender_address:
                          type: string
                          description: >-
                            Address that is allowed to call Exchange contract
                            methods that affect this

                            order. If set to 0, any address is allowed to call
                            these methods.
                        maker_asset_amount:
                          type: string
                          description: >-
                            Amount of makerAsset being offered by maker. Must be
                            greater than 0.
                        taker_asset_amount:
                          type: string
                          description: >-
                            Amount of takerAsset being bid on by maker. Must be
                            greater than 0.
                        maker_fee:
                          type: string
                          description: >-
                            Amount of ZRX paid to feeRecipient by maker when
                            order is filled. If set to

                            0, no transfer of ZRX from maker to feeRecipient
                            will be attempted.
                        taker_fee:
                          type: string
                          description: >-
                            Amount of ZRX paid to feeRecipient by taker when
                            order is filled. If set to

                            0, no transfer of ZRX from taker to feeRecipient
                            will be attempted.
                        expiration_time_seconds:
                          type: string
                          description: Timestamp in seconds at which order expires.
                        salt:
                          type: string
                          description: >-
                            Arbitrary number to facilitate uniqueness of the
                            order's hash.
                        maker_asset_data:
                          type: string
                          description: >-
                            ABIv2 encoded data that can be decoded by a
                            specified proxy contract when

                            transferring makerAsset.
                        taker_asset_data:
                          type: string
                          description: >-
                            ABIv2 encoded data that can be decoded by a
                            specified proxy contract when

                            transferring takerAsset.
                        maker_fee_asset_data:
                          type: string
                          description: >-
                            ABIv2 encoded data that can be decoded by a
                            specified proxy contract when

                            transferring makerFee.
                        taker_fee_asset_data:
                          type: string
                          description: >-
                            ABIv2 encoded data that can be decoded by a
                            specified proxy contract when

                            transferring takerFee.
                        signature:
                          type: string
                          description: Order signature.
                      description: A valid signed 0x order based on the schema.
                    trade_pair_hash:
                      type: string
                    filled_amount:
                      type: string
                    status:
                      type: string
                      format: int64
                    index_price_requirement:
                      type: string
                    subaccount_i_d:
                      type: string
                    order_type:
                      type: string
                      format: uint64
                    trigger_price:
                      type: string
                  description: A valid signed 0x order with Metadata.
                description: An array of matched orders.
            description: |-
              QuerySpotOrdersResponse defines the request type for
              Query/SpotOrders RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: filters.contract_price_bound
          description: for derivatives.
          in: query
          required: false
          type: string
        - name: filters.market_id
          in: query
          required: false
          type: string
        - name: filters.is_long
          in: query
          required: false
          type: boolean
        - name: filters.not_expired
          description: for normal orders.
          in: query
          required: false
          type: boolean
        - name: filters.maker_asset_address
          in: query
          required: false
          type: string
        - name: filters.taker_asset_address
          in: query
          required: false
          type: string
        - name: filters.exchange_address
          in: query
          required: false
          type: string
        - name: filters.sender_address
          in: query
          required: false
          type: string
        - name: filters.maker_asset_data
          in: query
          required: false
          type: string
        - name: filters.taker_asset_data
          in: query
          required: false
          type: string
        - name: filters.maker_asset_amount
          in: query
          required: false
          type: string
        - name: filters.taker_asset_amount
          in: query
          required: false
          type: string
        - name: filters.maker_address
          in: query
          required: false
          type: string
        - name: filters.not_maker_address
          in: query
          required: false
          type: string
        - name: filters.taker_address
          in: query
          required: false
          type: string
        - name: filters.trader_address
          in: query
          required: false
          type: string
        - name: filters.fee_recipient_address
          in: query
          required: false
          type: string
        - name: filters.maker_fee_asset_data
          description: Filters orders with the specified makerFeeAssetData.
          in: query
          required: false
          type: string
        - name: filters.taker_fee_asset_data
          description: Filters orders with the specified takerFeeAssetData.
          in: query
          required: false
          type: string
        - name: filters.subaccount_nonce
          description: Filters orders with the specified subaccount nonce.
          in: query
          required: false
          type: string
        - name: filters.direction
          description: Filters orders to match a direction "long" or "short".
          in: query
          required: false
          type: string
        - name: filters.price_lt_or_eq
          description: >-
            Filter out orders whose price is not less than or equal to the
            filter bound.
          in: query
          required: false
          type: string
        - name: filters.price_gt_or_eq
          description: >-
            Filter out orders whose price is not greater than or equal to the
            filter

            bound.
          in: query
          required: false
          type: string
        - name: filters.index_price
          description: Filters orders to satisfy the indexPriceMinMarginRequirement.
          in: query
          required: false
          type: string
        - name: filters.subaccount_i_d
          description: Filters orders to match the subaccountID.
          in: query
          required: false
          type: string
        - name: status
          description: Filter by status of the order.
          in: query
          required: false
          type: string
        - name: collection
          description: Filter by collection of the order.
          in: query
          required: false
          type: string
        - name: trade_pair_hash
          description: Filter by trade pair hash.
          in: query
          required: false
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/subaccountMarginHold:
    get:
      summary: >-
        Retrieves a list of orders matching a given market, direction and
        quantity
      operationId: QuerySubaccountMarginHold
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              margin_hold:
                type: string
                title: The derivative orders quotes for the taker
            description: |-
              QuerySubaccountMarginHoldResponse defines the response type for
              Query/subaccountMarginHold RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: maker_address
          description: The maker_address of the trader.
          in: query
          required: false
          type: string
        - name: taker_fee
          description: The subaccount nonce of the trader.
          in: query
          required: false
          type: string
        - name: base_currency
          description: The baseCurrency address to check.
          in: query
          required: false
          type: string
        - name: subaccount_i_d
          description: The subaccountID to check.
          in: query
          required: false
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/subaccountMarketDerivativeOrders:
    get:
      summary: |-
        Retrieves a list of derivative orders for a provided subaccount and
        marketID.
      operationId: QuerySubaccountMarketDerivativeOrders
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              records:
                type: array
                items:
                  type: object
                  properties:
                    order:
                      type: object
                      properties:
                        chain_id:
                          type: string
                          format: int64
                          description: Specify chain ID.
                        exchange_address:
                          type: string
                          description: Exchange v3 contract address.
                        maker_address:
                          type: string
                          description: Address that created the order.
                        taker_address:
                          type: string
                          description: >-
                            Address that is allowed to fill the order. If set to
                            0, any address is

                            allowed to fill the order.
                        fee_recipient_address:
                          type: string
                          description: Address that will receive fees when order is filled.
                        sender_address:
                          type: string
                          description: >-
                            Address that is allowed to call Exchange contract
                            methods that affect this

                            order. If set to 0, any address is allowed to call
                            these methods.
                        maker_asset_amount:
                          type: string
                          description: >-
                            Amount of makerAsset being offered by maker. Must be
                            greater than 0.
                        taker_asset_amount:
                          type: string
                          description: >-
                            Amount of takerAsset being bid on by maker. Must be
                            greater than 0.
                        maker_fee:
                          type: string
                          description: >-
                            Amount of ZRX paid to feeRecipient by maker when
                            order is filled. If set to

                            0, no transfer of ZRX from maker to feeRecipient
                            will be attempted.
                        taker_fee:
                          type: string
                          description: >-
                            Amount of ZRX paid to feeRecipient by taker when
                            order is filled. If set to

                            0, no transfer of ZRX from taker to feeRecipient
                            will be attempted.
                        expiration_time_seconds:
                          type: string
                          description: Timestamp in seconds at which order expires.
                        salt:
                          type: string
                          description: >-
                            Arbitrary number to facilitate uniqueness of the
                            order's hash.
                        maker_asset_data:
                          type: string
                          description: >-
                            ABIv2 encoded data that can be decoded by a
                            specified proxy contract when

                            transferring makerAsset.
                        taker_asset_data:
                          type: string
                          description: >-
                            ABIv2 encoded data that can be decoded by a
                            specified proxy contract when

                            transferring takerAsset.
                        maker_fee_asset_data:
                          type: string
                          description: >-
                            ABIv2 encoded data that can be decoded by a
                            specified proxy contract when

                            transferring makerFee.
                        taker_fee_asset_data:
                          type: string
                          description: >-
                            ABIv2 encoded data that can be decoded by a
                            specified proxy contract when

                            transferring takerFee.
                        signature:
                          type: string
                          description: Order signature.
                      description: A valid signed 0x order based on the schema.
                    trade_pair_hash:
                      type: string
                    filled_amount:
                      type: string
                    status:
                      type: string
                      format: int64
                    index_price_requirement:
                      type: string
                    subaccount_i_d:
                      type: string
                    order_type:
                      type: string
                      format: uint64
                    trigger_price:
                      type: string
                  description: A valid signed 0x order with Metadata.
            description: >-
              QuerySubaccountDerivativeOrdersResponse defines the response type
              for

              Query/SubaccountDerivativeOrders RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: market_id
          in: query
          required: false
          type: string
        - name: maker_address
          in: query
          required: false
          type: string
        - name: taker_fee
          in: query
          required: false
          type: string
        - name: subaccount_i_d
          in: query
          required: false
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/subaccountMarketDerivativeOrdersBatch:
    get:
      summary: |-
        Retrieves a list of derivative orders for a provided subaccount and
        marketID for a batch of markets
      operationId: QuerySubaccountMarketDerivativeOrdersBatch
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              market_records:
                type: object
                additionalProperties:
                  type: object
                  properties:
                    records:
                      type: array
                      items:
                        type: object
                        properties:
                          order:
                            type: object
                            properties:
                              chain_id:
                                type: string
                                format: int64
                                description: Specify chain ID.
                              exchange_address:
                                type: string
                                description: Exchange v3 contract address.
                              maker_address:
                                type: string
                                description: Address that created the order.
                              taker_address:
                                type: string
                                description: >-
                                  Address that is allowed to fill the order. If
                                  set to 0, any address is

                                  allowed to fill the order.
                              fee_recipient_address:
                                type: string
                                description: >-
                                  Address that will receive fees when order is
                                  filled.
                              sender_address:
                                type: string
                                description: >-
                                  Address that is allowed to call Exchange
                                  contract methods that affect this

                                  order. If set to 0, any address is allowed to
                                  call these methods.
                              maker_asset_amount:
                                type: string
                                description: >-
                                  Amount of makerAsset being offered by maker.
                                  Must be greater than 0.
                              taker_asset_amount:
                                type: string
                                description: >-
                                  Amount of takerAsset being bid on by maker.
                                  Must be greater than 0.
                              maker_fee:
                                type: string
                                description: >-
                                  Amount of ZRX paid to feeRecipient by maker
                                  when order is filled. If set to

                                  0, no transfer of ZRX from maker to
                                  feeRecipient will be attempted.
                              taker_fee:
                                type: string
                                description: >-
                                  Amount of ZRX paid to feeRecipient by taker
                                  when order is filled. If set to

                                  0, no transfer of ZRX from taker to
                                  feeRecipient will be attempted.
                              expiration_time_seconds:
                                type: string
                                description: Timestamp in seconds at which order expires.
                              salt:
                                type: string
                                description: >-
                                  Arbitrary number to facilitate uniqueness of
                                  the order's hash.
                              maker_asset_data:
                                type: string
                                description: >-
                                  ABIv2 encoded data that can be decoded by a
                                  specified proxy contract when

                                  transferring makerAsset.
                              taker_asset_data:
                                type: string
                                description: >-
                                  ABIv2 encoded data that can be decoded by a
                                  specified proxy contract when

                                  transferring takerAsset.
                              maker_fee_asset_data:
                                type: string
                                description: >-
                                  ABIv2 encoded data that can be decoded by a
                                  specified proxy contract when

                                  transferring makerFee.
                              taker_fee_asset_data:
                                type: string
                                description: >-
                                  ABIv2 encoded data that can be decoded by a
                                  specified proxy contract when

                                  transferring takerFee.
                              signature:
                                type: string
                                description: Order signature.
                            description: A valid signed 0x order based on the schema.
                          trade_pair_hash:
                            type: string
                          filled_amount:
                            type: string
                          status:
                            type: string
                            format: int64
                          index_price_requirement:
                            type: string
                          subaccount_i_d:
                            type: string
                          order_type:
                            type: string
                            format: uint64
                          trigger_price:
                            type: string
                        description: A valid signed 0x order with Metadata.
                  description: >-
                    QuerySubaccountDerivativeOrdersResponse defines the response
                    type for

                    Query/SubaccountDerivativeOrders RPC method.
            description: >-
              QuerySubaccountDerivativeOrdersBatchResponse defines the response
              type for

              Query/SubaccountDerivativeOrdersBatch RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: maker_address
          in: query
          required: false
          type: string
        - name: taker_fee
          in: query
          required: false
          type: string
        - name: subaccount_i_d
          in: query
          required: false
          type: string
        - name: market_ids
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      tags:
        - Query
  /injective/exchange/v1beta1/traderSubaccountsInfo:
    get:
      summary: Retrieves trader
      operationId: QueryTraderSubaccountsInfo
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              subaccount_info:
                type: array
                items:
                  type: object
                  properties:
                    base_currency_margin_info:
                      type: array
                      items:
                        type: object
                        properties:
                          margin_hold:
                            type: string
                          total_deposits:
                            type: string
                          base_currency:
                            type: string
                        title: An subaccount's margin info for a given base currency
                    nonce:
                      type: string
                    subaccount_id:
                      type: string
                  title: An subaccount's margin info for a given base currency
            description: |-
              QueryMarginInfoResponse defines the response type for
              Query/marginInfo RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: maker_address
          description: The maker_address of the trader.
          in: query
          required: false
          type: string
        - name: exchange_address
          description: The exchange addres.
          in: query
          required: false
          type: string
      tags:
        - Query
  /injective/exchange/v1beta1/underMarginedAccounts:
    get:
      summary: Retrieves undermargined accounts
      operationId: QueryUnderMarginedAccounts
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              accounts:
                type: array
                items:
                  type: object
                  properties:
                    market_name:
                      type: string
                    missing_amount:
                      type: string
                    margin_hold:
                      type: string
                    total_deposits:
                      type: string
                    market_id:
                      type: string
                    exchange_address:
                      type: string
                    subaccount_id:
                      type: string
                    maker_address:
                      type: string
                    nonce:
                      type: string
                    order_hash:
                      type: string
                    isLong:
                      type: boolean
                    order_price:
                      type: string
                title: Array of under margined accounts
            description: |-
              QueryDerivativeMarketsResponse defines the response type for
              Query/DerivativeMarkets RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: base_currency
          in: query
          required: false
          type: string
        - name: exchange_address
          in: query
          required: false
          type: string
      tags:
        - Query
  '/injective/evm/v1beta1/account/{address}':
    get:
      summary: Account queries an Ethereum account.
      operationId: Account
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              balance:
                type: string
                description: balance is the balance of the EVM denomination.
              code_hash:
                type: string
                format: byte
                description: code_hash is the code bytes from the EOA.
              nonce:
                type: string
                format: uint64
                description: nonce is the account's sequence number.
            description: >-
              QueryAccountResponse is the response type for the Query/Account
              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: address
          description: address is the ethereum hex address to query the account for.
          in: path
          required: true
          type: string
      tags:
        - Query
  '/injective/evm/v1beta1/balances/{address}':
    get:
      summary: |-
        Balance queries the balance of a the EVM denomination for a single
        EthAccount.
      operationId: Balance
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              balance:
                type: string
                description: balance is the balance of the EVM denomination.
            description: >-
              QueryBalanceResponse is the response type for the Query/Balance
              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: address
          description: address is the ethereum hex address to query the balance for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /injective/evm/v1beta1/block_bloom:
    get:
      summary: BlockBloom queries the block bloom filter bytes at a given height.
      operationId: BlockBloom
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              bloom:
                type: string
                format: byte
                description: bloom represents bloom filter for the given block hash.
            description: >-
              QueryBlockBloomResponse is the response type for the
              Query/BlockBloom RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: height
          in: query
          required: false
          type: string
          format: int64
      tags:
        - Query
  '/injective/evm/v1beta1/block_logs/{hash}':
    get:
      summary: BlockLogs queries all the ethereum logs for a given block hash.
      operationId: BlockLogs
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              tx_logs:
                type: array
                items:
                  type: object
                  properties:
                    hash:
                      type: string
                    logs:
                      type: array
                      items:
                        type: object
                        properties:
                          address:
                            type: string
                            title: address of the contract that generated the event
                          topics:
                            type: array
                            items:
                              type: string
                            description: list of topics provided by the contract.
                          data:
                            type: string
                            format: byte
                            title: 'supplied by the contract, usually ABI-encoded'
                          block_number:
                            type: string
                            format: uint64
                            title: block in which the transaction was included
                          tx_hash:
                            type: string
                            title: hash of the transaction
                          tx_index:
                            type: string
                            format: uint64
                            title: index of the transaction in the block
                          block_hash:
                            type: string
                            title: >-
                              hash of the block in which the transaction was
                              included
                          index:
                            type: string
                            format: uint64
                            title: index of the log in the block
                          removed:
                            type: boolean
                            description: >-
                              The Removed field is true if this log was reverted
                              due to a chain

                              reorganisation. You must pay attention to this
                              field if you receive logs

                              through a filter query.
                        description: >-
                          Log represents an protobuf compatible Ethereum Log
                          that defines a contract

                          log event. These events are generated by the LOG
                          opcode and stored/indexed by

                          the node.
                  description: >-
                    TransactionLogs define the logs generated from a transaction
                    execution

                    with a given hash. It it used for import/export data as
                    transactions are not

                    persisted on blockchain state after an upgrade.
                description: >-
                  logs represents the ethereum logs generated at the given block
                  hash.
            description: >-
              QueryTxLogs is the response type for the Query/BlockLogs RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: hash
          description: hash is the block hash to query the logs for.
          in: path
          required: true
          type: string
      tags:
        - Query
  '/injective/evm/v1beta1/codes/{address}':
    get:
      summary: Code queries the balance of all coins for a single account.
      operationId: Code
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              code:
                type: string
                format: byte
                description: code represents the code bytes from an ethereum address.
            description: |-
              QueryCodeResponse is the response type for the Query/Code RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: address
          description: address is the ethereum hex address to query the code for.
          in: path
          required: true
          type: string
      tags:
        - Query
  '/injective/evm/v1beta1/cosmos_account/{address}':
    get:
      summary: Account queries an Ethereum account's Cosmos Address.
      operationId: CosmosAccount
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              cosmos_address:
                type: string
                description: cosmos_address is the cosmos address of the account.
              sequence:
                type: string
                format: uint64
                description: sequence is the account's sequence number.
              account_number:
                type: string
                format: uint64
                title: account_number is the account numbert
            description: >-
              QueryCosmosAccountResponse is the response type for the
              Query/CosmosAccount RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: address
          description: address is the ethereum hex address to query the account for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /injective/evm/v1beta1/params:
    get:
      summary: Params queries the parameters of x/evm module.
      operationId: EvmParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: params define the evm module parameters.
                type: object
                properties:
                  evm_denom:
                    type: string
                    description: >-
                      evm_denom represents the token denomination used to run
                      the EVM state

                      transitions.
                  enable_create:
                    type: boolean
                    title: >-
                      enable_create toggles state transitions that use the
                      vm.Create function
                  enable_call:
                    type: boolean
                    title: >-
                      enable_call toggles state transitions that use the vm.Call
                      function
                  extra_eips:
                    type: array
                    items:
                      type: string
                      format: int64
                    title: extra_eips defines the additional EIPs for the vm.Config
                title: Params defines the EVM module parameters
            description: >-
              QueryParamsResponse defines the response type for querying x/evm
              parameters.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /injective/evm/v1beta1/static_call:
    get:
      summary: StaticCall queries the static call value of x/evm module.
      operationId: StaticCall
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              data:
                type: string
                format: byte
            title: // QueryStaticCallRequest defines static call response
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: address
          description: address is the ethereum contract hex address to for static call.
          in: query
          required: false
          type: string
        - name: input
          description: static call input generated from abi.
          in: query
          required: false
          type: string
          format: byte
      tags:
        - Query
  '/injective/evm/v1beta1/storage/{address}/{key}':
    get:
      summary: Storage queries the balance of all coins for a single account.
      operationId: Storage
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              value:
                type: string
                description: >-
                  key defines the storage state value hash associated with the
                  given key.
            description: >-
              QueryStorageResponse is the response type for the Query/Storage
              RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: address
          description: >-
            / address is the ethereum hex address to query the storage state
            for.
          in: path
          required: true
          type: string
        - name: key
          description: key defines the key of the storage state
          in: path
          required: true
          type: string
      tags:
        - Query
  '/injective/evm/v1beta1/tx_logs/{hash}':
    get:
      summary: TxLogs queries ethereum logs from a transaction.
      operationId: TxLogs
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              logs:
                type: array
                items:
                  type: object
                  properties:
                    address:
                      type: string
                      title: address of the contract that generated the event
                    topics:
                      type: array
                      items:
                        type: string
                      description: list of topics provided by the contract.
                    data:
                      type: string
                      format: byte
                      title: 'supplied by the contract, usually ABI-encoded'
                    block_number:
                      type: string
                      format: uint64
                      title: block in which the transaction was included
                    tx_hash:
                      type: string
                      title: hash of the transaction
                    tx_index:
                      type: string
                      format: uint64
                      title: index of the transaction in the block
                    block_hash:
                      type: string
                      title: hash of the block in which the transaction was included
                    index:
                      type: string
                      format: uint64
                      title: index of the log in the block
                    removed:
                      type: boolean
                      description: >-
                        The Removed field is true if this log was reverted due
                        to a chain

                        reorganisation. You must pay attention to this field if
                        you receive logs

                        through a filter query.
                  description: >-
                    Log represents an protobuf compatible Ethereum Log that
                    defines a contract

                    log event. These events are generated by the LOG opcode and
                    stored/indexed by

                    the node.
                description: >-
                  logs represents the ethereum logs generated from the given
                  transaction.
            description: QueryTxLogs is the response type for the Query/TxLogs RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: hash
          description: hash is the ethereum transaction hex hash to query the logs for.
          in: path
          required: true
          type: string
      tags:
        - Query
  '/injective/evm/v1beta1/tx_receipt/{hash}':
    get:
      summary: TxReceipt queries a receipt by a transaction hash.
      operationId: TxReceipt
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              receipt:
                description: >-
                  receipt represents the ethereum receipt for the given
                  transaction.
                type: object
                properties:
                  hash:
                    type: string
                    format: byte
                  from:
                    type: string
                    format: byte
                  data:
                    type: object
                    properties:
                      nonce:
                        type: string
                        format: uint64
                      price:
                        type: string
                        format: byte
                      gas:
                        type: string
                        format: uint64
                      to:
                        type: string
                        format: byte
                      value:
                        type: string
                        format: byte
                      input:
                        type: string
                        format: byte
                      v:
                        type: string
                        format: byte
                        title: signature values
                      r:
                        type: string
                        format: byte
                      s:
                        type: string
                        format: byte
                      hash:
                        type: string
                        description: >-
                          hash defines the tx data hash, which is only used when
                          marshaling to JSON.
                    description: >-
                      TxData implements the Ethereum transaction data structure.
                      It is used

                      solely as intended in Ethereum abiding by the protocol.
                  result:
                    type: object
                    properties:
                      contract_address:
                        type: string
                        description: >-
                          contract_address contains the ethereum address of the
                          created contract (if

                          any). If the state transition is an evm.Call, the
                          contract address will be

                          empty.
                      bloom:
                        type: string
                        format: byte
                        title: bloom represents the bloom filter bytes
                      tx_logs:
                        description: >-
                          tx_logs contains the transaction hash and the
                          proto-compatible ethereum

                          logs.
                        type: object
                        properties:
                          hash:
                            type: string
                          logs:
                            type: array
                            items:
                              type: object
                              properties:
                                address:
                                  type: string
                                  title: >-
                                    address of the contract that generated the
                                    event
                                topics:
                                  type: array
                                  items:
                                    type: string
                                  description: list of topics provided by the contract.
                                data:
                                  type: string
                                  format: byte
                                  title: >-
                                    supplied by the contract, usually
                                    ABI-encoded
                                block_number:
                                  type: string
                                  format: uint64
                                  title: block in which the transaction was included
                                tx_hash:
                                  type: string
                                  title: hash of the transaction
                                tx_index:
                                  type: string
                                  format: uint64
                                  title: index of the transaction in the block
                                block_hash:
                                  type: string
                                  title: >-
                                    hash of the block in which the transaction
                                    was included
                                index:
                                  type: string
                                  format: uint64
                                  title: index of the log in the block
                                removed:
                                  type: boolean
                                  description: >-
                                    The Removed field is true if this log was
                                    reverted due to a chain

                                    reorganisation. You must pay attention to
                                    this field if you receive logs

                                    through a filter query.
                              description: >-
                                Log represents an protobuf compatible Ethereum
                                Log that defines a contract

                                log event. These events are generated by the LOG
                                opcode and stored/indexed by

                                the node.
                      ret:
                        type: string
                        format: byte
                        description: ret defines the bytes from the execution.
                      reverted:
                        type: boolean
                        title: >-
                          reverted flag is set to true when the call has been
                          reverted
                      gas_used:
                        type: string
                        format: uint64
                        title: >-
                          gas_used notes the amount of gas consumed while
                          execution
                    description: TxResult stores results of Tx execution.
                  index:
                    type: string
                    format: uint64
                  blockHeight:
                    type: string
                    format: uint64
                  blockHash:
                    type: string
                    format: byte
            description: >-
              QueryTxReceiptResponse is the response type for the
              Query/TxReceipt RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: hash
          description: hash is the ethereum transaction hex hash to query the receipt for.
          in: path
          required: true
          type: string
      tags:
        - Query
  '/injective/evm/v1beta1/tx_receipts_block/{height}':
    get:
      summary: TxReceiptsByBlockHeight queries tx receipts by a block height.
      operationId: TxReceiptsByBlockHeight
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              receipts:
                type: array
                items:
                  type: object
                  properties:
                    hash:
                      type: string
                      format: byte
                    from:
                      type: string
                      format: byte
                    data:
                      type: object
                      properties:
                        nonce:
                          type: string
                          format: uint64
                        price:
                          type: string
                          format: byte
                        gas:
                          type: string
                          format: uint64
                        to:
                          type: string
                          format: byte
                        value:
                          type: string
                          format: byte
                        input:
                          type: string
                          format: byte
                        v:
                          type: string
                          format: byte
                          title: signature values
                        r:
                          type: string
                          format: byte
                        s:
                          type: string
                          format: byte
                        hash:
                          type: string
                          description: >-
                            hash defines the tx data hash, which is only used
                            when marshaling to JSON.
                      description: >-
                        TxData implements the Ethereum transaction data
                        structure. It is used

                        solely as intended in Ethereum abiding by the protocol.
                    result:
                      type: object
                      properties:
                        contract_address:
                          type: string
                          description: >-
                            contract_address contains the ethereum address of
                            the created contract (if

                            any). If the state transition is an evm.Call, the
                            contract address will be

                            empty.
                        bloom:
                          type: string
                          format: byte
                          title: bloom represents the bloom filter bytes
                        tx_logs:
                          description: >-
                            tx_logs contains the transaction hash and the
                            proto-compatible ethereum

                            logs.
                          type: object
                          properties:
                            hash:
                              type: string
                            logs:
                              type: array
                              items:
                                type: object
                                properties:
                                  address:
                                    type: string
                                    title: >-
                                      address of the contract that generated the
                                      event
                                  topics:
                                    type: array
                                    items:
                                      type: string
                                    description: list of topics provided by the contract.
                                  data:
                                    type: string
                                    format: byte
                                    title: >-
                                      supplied by the contract, usually
                                      ABI-encoded
                                  block_number:
                                    type: string
                                    format: uint64
                                    title: >-
                                      block in which the transaction was
                                      included
                                  tx_hash:
                                    type: string
                                    title: hash of the transaction
                                  tx_index:
                                    type: string
                                    format: uint64
                                    title: index of the transaction in the block
                                  block_hash:
                                    type: string
                                    title: >-
                                      hash of the block in which the transaction
                                      was included
                                  index:
                                    type: string
                                    format: uint64
                                    title: index of the log in the block
                                  removed:
                                    type: boolean
                                    description: >-
                                      The Removed field is true if this log was
                                      reverted due to a chain

                                      reorganisation. You must pay attention to
                                      this field if you receive logs

                                      through a filter query.
                                description: >-
                                  Log represents an protobuf compatible Ethereum
                                  Log that defines a contract

                                  log event. These events are generated by the
                                  LOG opcode and stored/indexed by

                                  the node.
                        ret:
                          type: string
                          format: byte
                          description: ret defines the bytes from the execution.
                        reverted:
                          type: boolean
                          title: >-
                            reverted flag is set to true when the call has been
                            reverted
                        gas_used:
                          type: string
                          format: uint64
                          title: >-
                            gas_used notes the amount of gas consumed while
                            execution
                      description: TxResult stores results of Tx execution.
                    index:
                      type: string
                      format: uint64
                    blockHeight:
                      type: string
                      format: uint64
                    blockHash:
                      type: string
                      format: byte
                  description: >-
                    TxReceipt defines the receipt type stored in KV for each EVM
                    transaction.
                title: tx receipts list for the block
            description: >-
              QueryTxReceiptsByBlockHeightResponse is the response type for the
              Query/TxReceiptsByBlockHeight RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: height
          description: height is the block height to query tx receipts for
          in: path
          required: true
          type: string
          format: int64
      tags:
        - Query
  '/injective/evm/v1beta1/tx_receipts_block_hash/{hash}':
    get:
      summary: TxReceiptsByBlockHash queries tx receipts by a block hash.
      operationId: TxReceiptsByBlockHash
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              receipts:
                type: array
                items:
                  type: object
                  properties:
                    hash:
                      type: string
                      format: byte
                    from:
                      type: string
                      format: byte
                    data:
                      type: object
                      properties:
                        nonce:
                          type: string
                          format: uint64
                        price:
                          type: string
                          format: byte
                        gas:
                          type: string
                          format: uint64
                        to:
                          type: string
                          format: byte
                        value:
                          type: string
                          format: byte
                        input:
                          type: string
                          format: byte
                        v:
                          type: string
                          format: byte
                          title: signature values
                        r:
                          type: string
                          format: byte
                        s:
                          type: string
                          format: byte
                        hash:
                          type: string
                          description: >-
                            hash defines the tx data hash, which is only used
                            when marshaling to JSON.
                      description: >-
                        TxData implements the Ethereum transaction data
                        structure. It is used

                        solely as intended in Ethereum abiding by the protocol.
                    result:
                      type: object
                      properties:
                        contract_address:
                          type: string
                          description: >-
                            contract_address contains the ethereum address of
                            the created contract (if

                            any). If the state transition is an evm.Call, the
                            contract address will be

                            empty.
                        bloom:
                          type: string
                          format: byte
                          title: bloom represents the bloom filter bytes
                        tx_logs:
                          description: >-
                            tx_logs contains the transaction hash and the
                            proto-compatible ethereum

                            logs.
                          type: object
                          properties:
                            hash:
                              type: string
                            logs:
                              type: array
                              items:
                                type: object
                                properties:
                                  address:
                                    type: string
                                    title: >-
                                      address of the contract that generated the
                                      event
                                  topics:
                                    type: array
                                    items:
                                      type: string
                                    description: list of topics provided by the contract.
                                  data:
                                    type: string
                                    format: byte
                                    title: >-
                                      supplied by the contract, usually
                                      ABI-encoded
                                  block_number:
                                    type: string
                                    format: uint64
                                    title: >-
                                      block in which the transaction was
                                      included
                                  tx_hash:
                                    type: string
                                    title: hash of the transaction
                                  tx_index:
                                    type: string
                                    format: uint64
                                    title: index of the transaction in the block
                                  block_hash:
                                    type: string
                                    title: >-
                                      hash of the block in which the transaction
                                      was included
                                  index:
                                    type: string
                                    format: uint64
                                    title: index of the log in the block
                                  removed:
                                    type: boolean
                                    description: >-
                                      The Removed field is true if this log was
                                      reverted due to a chain

                                      reorganisation. You must pay attention to
                                      this field if you receive logs

                                      through a filter query.
                                description: >-
                                  Log represents an protobuf compatible Ethereum
                                  Log that defines a contract

                                  log event. These events are generated by the
                                  LOG opcode and stored/indexed by

                                  the node.
                        ret:
                          type: string
                          format: byte
                          description: ret defines the bytes from the execution.
                        reverted:
                          type: boolean
                          title: >-
                            reverted flag is set to true when the call has been
                            reverted
                        gas_used:
                          type: string
                          format: uint64
                          title: >-
                            gas_used notes the amount of gas consumed while
                            execution
                      description: TxResult stores results of Tx execution.
                    index:
                      type: string
                      format: uint64
                    blockHeight:
                      type: string
                      format: uint64
                    blockHash:
                      type: string
                      format: byte
                  description: >-
                    TxReceipt defines the receipt type stored in KV for each EVM
                    transaction.
                title: tx receipts list for the block
            description: >-
              QueryTxReceiptsByBlockHashResponse is the response type for the
              Query/TxReceiptsByBlockHash RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: hash
          description: hash is the ethereum transaction hex hash to query the receipt for.
          in: path
          required: true
          type: string
      tags:
        - Query
  '/cosmos/auth/v1beta1/accounts/{address}':
    get:
      summary: Account returns account details based on address.
      operationId: AuthAccount
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              account:
                description: account defines the account of the corresponding address.
                type: object
                properties:
                  type_url:
                    type: string
                    description: >-
                      A URL/resource name that uniquely identifies the type of
                      the serialized

                      protocol buffer message. This string must contain at least

                      one "/" character. The last segment of the URL's path must
                      represent

                      the fully qualified name of the type (as in

                      `path/google.protobuf.Duration`). The name should be in a
                      canonical form

                      (e.g., leading "." is not accepted).


                      In practice, teams usually precompile into the binary all
                      types that they

                      expect it to use in the context of Any. However, for URLs
                      which use the

                      scheme `http`, `https`, or no scheme, one can optionally
                      set up a type

                      server that maps type URLs to message definitions as
                      follows:


                      * If no scheme is provided, `https` is assumed.

                      * An HTTP GET on the URL must yield a
                      [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based
                      on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the
                      official

                      protobuf release, and it is not used for type URLs
                      beginning with

                      type.googleapis.com.


                      Schemes other than `http`, `https` (or the empty scheme)
                      might be

                      used with implementation specific semantics.
                  value:
                    type: string
                    format: byte
                    description: >-
                      Must be a valid serialized protocol buffer of the above
                      specified type.
            description: >-
              QueryAccountResponse is the response type for the Query/Account
              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/modules/y.z" will
                    yield type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: address
          description: address defines the address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/auth/v1beta1/params:
    get:
      summary: Params queries all parameters.
      operationId: AuthParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: params defines the parameters of the module.
                type: object
                properties:
                  max_memo_characters:
                    type: string
                    format: uint64
                  tx_sig_limit:
                    type: string
                    format: uint64
                  tx_size_cost_per_byte:
                    type: string
                    format: uint64
                  sig_verify_cost_ed25519:
                    type: string
                    format: uint64
                  sig_verify_cost_secp256k1:
                    type: string
                    format: uint64
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/modules/y.z" will
                    yield type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
  '/cosmos/bank/v1beta1/balances/{address}':
    get:
      summary: AllBalances queries the balance of all coins for a single account.
      operationId: AllBalances
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              balances:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                description: balances is the balances of all the coins.
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryAllBalancesResponse is the response type for the
              Query/AllBalances RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: address
          description: address is the address to query balances for.
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/cosmos/bank/v1beta1/balances/{address}/{denom}':
    get:
      summary: Balance queries the balance of a single coin for a single account.
      operationId: BankBalance
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              balance:
                description: balance is the balance of the coin.
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
            description: >-
              QueryBalanceResponse is the response type for the Query/Balance
              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: address
          description: address is the address to query balances for.
          in: path
          required: true
          type: string
        - name: denom
          description: denom is the coin denom to query balances for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/bank/v1beta1/denoms_metadata:
    get:
      summary: >-
        DenomsMetadata queries the client metadata for all registered coin
        denominations.
      operationId: DenomsMetadata
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              metadatas:
                type: array
                items:
                  type: object
                  properties:
                    description:
                      type: string
                    denom_units:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                            description: >-
                              denom represents the string name of the given
                              denom unit (e.g uatom).
                          exponent:
                            type: integer
                            format: int64
                            description: >-
                              exponent represents power of 10 exponent that one
                              must

                              raise the base_denom to in order to equal the
                              given DenomUnit's denom

                              1 denom = 1^exponent base_denom

                              (e.g. with a base_denom of uatom, one can create a
                              DenomUnit of 'atom' with

                              exponent = 6, thus: 1 atom = 10^6 uatom).
                          aliases:
                            type: array
                            items:
                              type: string
                            title: >-
                              aliases is a list of string aliases for the given
                              denom
                        description: |-
                          DenomUnit represents a struct that describes a given
                          denomination unit of the basic token.
                      title: >-
                        denom_units represents the list of DenomUnit's for a
                        given coin
                    base:
                      type: string
                      description: >-
                        base represents the base denom (should be the DenomUnit
                        with exponent = 0).
                    display:
                      type: string
                      description: |-
                        display indicates the suggested denom that should be
                        displayed in clients.
                  description: |-
                    Metadata represents a struct that describes
                    a basic token.
                description: >-
                  metadata provides the client information for all the
                  registered tokens.
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryDenomsMetadataResponse is the response type for the
              Query/DenomsMetadata RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/cosmos/bank/v1beta1/denoms_metadata/{denom}':
    get:
      summary: DenomsMetadata queries the client metadata of a given coin denomination.
      operationId: DenomMetadata
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              metadata:
                description: >-
                  metadata describes and provides all the client information for
                  the requested token.
                type: object
                properties:
                  description:
                    type: string
                  denom_units:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                          description: >-
                            denom represents the string name of the given denom
                            unit (e.g uatom).
                        exponent:
                          type: integer
                          format: int64
                          description: >-
                            exponent represents power of 10 exponent that one
                            must

                            raise the base_denom to in order to equal the given
                            DenomUnit's denom

                            1 denom = 1^exponent base_denom

                            (e.g. with a base_denom of uatom, one can create a
                            DenomUnit of 'atom' with

                            exponent = 6, thus: 1 atom = 10^6 uatom).
                        aliases:
                          type: array
                          items:
                            type: string
                          title: >-
                            aliases is a list of string aliases for the given
                            denom
                      description: |-
                        DenomUnit represents a struct that describes a given
                        denomination unit of the basic token.
                    title: >-
                      denom_units represents the list of DenomUnit's for a given
                      coin
                  base:
                    type: string
                    description: >-
                      base represents the base denom (should be the DenomUnit
                      with exponent = 0).
                  display:
                    type: string
                    description: |-
                      display indicates the suggested denom that should be
                      displayed in clients.
            description: >-
              QueryDenomMetadataResponse is the response type for the
              Query/DenomMetadata RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: denom
          description: denom is the coin denom to query the metadata for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/bank/v1beta1/params:
    get:
      summary: Params queries the parameters of x/bank module.
      operationId: BankParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                type: object
                properties:
                  send_enabled:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        enabled:
                          type: boolean
                      description: >-
                        SendEnabled maps coin denom to a send_enabled status
                        (whether a denom is

                        sendable).
                  default_send_enabled:
                    type: boolean
                description: Params defines the parameters for the bank module.
            description: >-
              QueryParamsResponse defines the response type for querying x/bank
              parameters.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /cosmos/bank/v1beta1/supply:
    get:
      summary: TotalSupply queries the total supply of all coins.
      operationId: TotalSupply
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              supply:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                title: supply is the supply of the coins
            title: >-
              QueryTotalSupplyResponse is the response type for the
              Query/TotalSupply RPC

              method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  '/cosmos/bank/v1beta1/supply/{denom}':
    get:
      summary: SupplyOf queries the supply of a single coin.
      operationId: SupplyOf
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              amount:
                description: amount is the supply of the coin.
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
            description: >-
              QuerySupplyOfResponse is the response type for the Query/SupplyOf
              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: denom
          description: denom is the coin denom to query balances for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/distribution/v1beta1/community_pool:
    get:
      summary: CommunityPool queries the community pool coins.
      operationId: CommunityPool
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              pool:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    DecCoin defines a token with a denomination and a decimal
                    amount.


                    NOTE: The amount field is an Dec which implements the custom
                    method

                    signatures required by gogoproto.
                description: pool defines community pool's coins.
            description: >-
              QueryCommunityPoolResponse is the response type for the
              Query/CommunityPool

              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  '/cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards':
    get:
      summary: |-
        DelegationTotalRewards queries the total rewards accrued by a each
        validator.
      operationId: DelegationTotalRewards
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              rewards:
                type: array
                items:
                  type: object
                  properties:
                    validator_address:
                      type: string
                    reward:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          DecCoin defines a token with a denomination and a
                          decimal amount.


                          NOTE: The amount field is an Dec which implements the
                          custom method

                          signatures required by gogoproto.
                  description: |-
                    DelegationDelegatorReward represents the properties
                    of a delegator's delegation reward.
                description: rewards defines all the rewards accrued by a delegator.
              total:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    DecCoin defines a token with a denomination and a decimal
                    amount.


                    NOTE: The amount field is an Dec which implements the custom
                    method

                    signatures required by gogoproto.
                description: total defines the sum of all the rewards.
            description: |-
              QueryDelegationTotalRewardsResponse is the response type for the
              Query/DelegationTotalRewards RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: delegator_address
          description: delegator_address defines the delegator address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  '/cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards/{validator_address}':
    get:
      summary: DelegationRewards queries the total rewards accrued by a delegation.
      operationId: DelegationRewards
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              rewards:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    DecCoin defines a token with a denomination and a decimal
                    amount.


                    NOTE: The amount field is an Dec which implements the custom
                    method

                    signatures required by gogoproto.
                description: rewards defines the rewards accrued by a delegation.
            description: |-
              QueryDelegationRewardsResponse is the response type for the
              Query/DelegationRewards RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: delegator_address
          description: delegator_address defines the delegator address to query for.
          in: path
          required: true
          type: string
        - name: validator_address
          description: validator_address defines the validator address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  '/cosmos/distribution/v1beta1/delegators/{delegator_address}/validators':
    get:
      summary: DelegatorValidators queries the validators of a delegator.
      operationId: DistDelegatorValidators
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              validators:
                type: array
                items:
                  type: string
                description: >-
                  validators defines the validators a delegator is delegating
                  for.
            description: |-
              QueryDelegatorValidatorsResponse is the response type for the
              Query/DelegatorValidators RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: delegator_address
          description: delegator_address defines the delegator address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  '/cosmos/distribution/v1beta1/delegators/{delegator_address}/withdraw_address':
    get:
      summary: DelegatorWithdrawAddress queries withdraw address of a delegator.
      operationId: DelegatorWithdrawAddress
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              withdraw_address:
                type: string
                description: withdraw_address defines the delegator address to query for.
            description: |-
              QueryDelegatorWithdrawAddressResponse is the response type for the
              Query/DelegatorWithdrawAddress RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: delegator_address
          description: delegator_address defines the delegator address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/distribution/v1beta1/params:
    get:
      summary: Params queries params of the distribution module.
      operationId: DistributionParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: params defines the parameters of the module.
                type: object
                properties:
                  community_tax:
                    type: string
                  base_proposer_reward:
                    type: string
                  bonus_proposer_reward:
                    type: string
                  withdraw_addr_enabled:
                    type: boolean
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  '/cosmos/distribution/v1beta1/validators/{validator_address}/commission':
    get:
      summary: ValidatorCommission queries accumulated commission for a validator.
      operationId: ValidatorCommission
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              commission:
                description: commission defines the commision the validator received.
                type: object
                properties:
                  commission:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        DecCoin defines a token with a denomination and a
                        decimal amount.


                        NOTE: The amount field is an Dec which implements the
                        custom method

                        signatures required by gogoproto.
            title: |-
              QueryValidatorCommissionResponse is the response type for the
              Query/ValidatorCommission RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: validator_address
          description: validator_address defines the validator address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  '/cosmos/distribution/v1beta1/validators/{validator_address}/outstanding_rewards':
    get:
      summary: ValidatorOutstandingRewards queries rewards of a validator address.
      operationId: ValidatorOutstandingRewards
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              rewards:
                type: object
                properties:
                  rewards:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        DecCoin defines a token with a denomination and a
                        decimal amount.


                        NOTE: The amount field is an Dec which implements the
                        custom method

                        signatures required by gogoproto.
                description: >-
                  ValidatorOutstandingRewards represents outstanding
                  (un-withdrawn) rewards

                  for a validator inexpensive to track, allows simple sanity
                  checks.
            description: >-
              QueryValidatorOutstandingRewardsResponse is the response type for
              the

              Query/ValidatorOutstandingRewards RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: validator_address
          description: validator_address defines the validator address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  '/cosmos/distribution/v1beta1/validators/{validator_address}/slashes':
    get:
      summary: ValidatorSlashes queries slash events of a validator.
      operationId: ValidatorSlashes
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              slashes:
                type: array
                items:
                  type: object
                  properties:
                    validator_period:
                      type: string
                      format: uint64
                    fraction:
                      type: string
                  description: >-
                    ValidatorSlashEvent represents a validator slash event.

                    Height is implicit within the store key.

                    This is needed to calculate appropriate amount of staking
                    tokens

                    for delegations which are withdrawn after a slash has
                    occurred.
                description: slashes defines the slashes the validator received.
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: |-
              QueryValidatorSlashesResponse is the response type for the
              Query/ValidatorSlashes RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: validator_address
          description: validator_address defines the validator address to query for.
          in: path
          required: true
          type: string
        - name: starting_height
          description: >-
            starting_height defines the optional starting height to query the
            slashes.
          in: query
          required: false
          type: string
          format: uint64
        - name: ending_height
          description: >-
            starting_height defines the optional ending height to query the
            slashes.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  /cosmos/mint/v1beta1/annual_provisions:
    get:
      summary: AnnualProvisions current minting annual provisions value.
      operationId: AnnualProvisions
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              annual_provisions:
                type: string
                format: byte
                description: >-
                  annual_provisions is the current minting annual provisions
                  value.
            description: |-
              QueryAnnualProvisionsResponse is the response type for the
              Query/AnnualProvisions RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /cosmos/mint/v1beta1/inflation:
    get:
      summary: Inflation returns the current minting inflation value.
      operationId: Inflation
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              inflation:
                type: string
                format: byte
                description: inflation is the current minting inflation value.
            description: >-
              QueryInflationResponse is the response type for the
              Query/Inflation RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /cosmos/mint/v1beta1/params:
    get:
      summary: Params returns the total set of minting parameters.
      operationId: MintParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: params defines the parameters of the module.
                type: object
                properties:
                  mint_denom:
                    type: string
                    title: type of coin to mint
                  inflation_rate_change:
                    type: string
                    title: maximum annual change in inflation rate
                  inflation_max:
                    type: string
                    title: maximum inflation rate
                  inflation_min:
                    type: string
                    title: minimum inflation rate
                  goal_bonded:
                    type: string
                    title: goal of percent bonded atoms
                  blocks_per_year:
                    type: string
                    format: uint64
                    title: expected blocks per year
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  '/cosmos/gov/v1beta1/params/{params_type}':
    get:
      summary: Params queries all parameters of the gov module.
      operationId: GovParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              voting_params:
                description: voting_params defines the parameters related to voting.
                type: object
                properties:
                  voting_period:
                    type: string
                    description: Length of the voting period.
              deposit_params:
                description: deposit_params defines the parameters related to deposit.
                type: object
                properties:
                  min_deposit:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    description: Minimum deposit for a proposal to enter voting period.
                  max_deposit_period:
                    type: string
                    description: >-
                      Maximum period for Atom holders to deposit on a proposal.
                      Initial value: 2
                       months.
              tally_params:
                description: tally_params defines the parameters related to tally.
                type: object
                properties:
                  quorum:
                    type: string
                    format: byte
                    description: >-
                      Minimum percentage of total stake needed to vote for a
                      result to be
                       considered valid.
                  threshold:
                    type: string
                    format: byte
                    description: >-
                      Minimum proportion of Yes votes for proposal to pass.
                      Default value: 0.5.
                  veto_threshold:
                    type: string
                    format: byte
                    description: >-
                      Minimum value of Veto votes to Total votes ratio for
                      proposal to be
                       vetoed. Default value: 1/3.
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/modules/y.z" will
                    yield type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: params_type
          description: >-
            params_type defines which parameters to query for, can be one of
            "voting",

            "tallying" or "deposit".
          in: path
          required: true
          type: string
      tags:
        - Query
  /cosmos/gov/v1beta1/proposals:
    get:
      summary: Proposals queries all proposals based on given status.
      operationId: Proposals
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              proposals:
                type: array
                items:
                  type: object
                  properties:
                    proposal_id:
                      type: string
                      format: uint64
                    content:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: >-
                            A URL/resource name that uniquely identifies the
                            type of the serialized

                            protocol buffer message. This string must contain at
                            least

                            one "/" character. The last segment of the URL's
                            path must represent

                            the fully qualified name of the type (as in

                            `path/google.protobuf.Duration`). The name should be
                            in a canonical form

                            (e.g., leading "." is not accepted).


                            In practice, teams usually precompile into the
                            binary all types that they

                            expect it to use in the context of Any. However, for
                            URLs which use the

                            scheme `http`, `https`, or no scheme, one can
                            optionally set up a type

                            server that maps type URLs to message definitions as
                            follows:


                            * If no scheme is provided, `https` is assumed.

                            * An HTTP GET on the URL must yield a
                            [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results
                            based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available
                            in the official

                            protobuf release, and it is not used for type URLs
                            beginning with

                            type.googleapis.com.


                            Schemes other than `http`, `https` (or the empty
                            scheme) might be

                            used with implementation specific semantics.
                        value:
                          type: string
                          format: byte
                          description: >-
                            Must be a valid serialized protocol buffer of the
                            above specified type.
                      description: >-
                        `Any` contains an arbitrary serialized protocol buffer
                        message along with a

                        URL that describes the type of the serialized message.


                        Protobuf library provides support to pack/unpack Any
                        values in the form

                        of utility functions or additional generated methods of
                        the Any type.


                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by
                        default use

                        'type.googleapis.com/full.type.name' as the type URL and
                        the unpack

                        methods only use the fully qualified type name after the
                        last '/'

                        in the type URL, for example "foo.bar.com/modules/y.z"
                        will yield type

                        name "y.z".



                        JSON

                        ====

                        The JSON representation of an `Any` value uses the
                        regular

                        representation of the deserialized, embedded message,
                        with an

                        additional field `@type` which contains the type URL.
                        Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a
                        custom JSON

                        representation, that representation will be embedded
                        adding a field

                        `value` which holds the custom JSON in addition to the
                        `@type`

                        field. Example (for message
                        [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                    status:
                      type: string
                      enum:
                        - PROPOSAL_STATUS_UNSPECIFIED
                        - PROPOSAL_STATUS_DEPOSIT_PERIOD
                        - PROPOSAL_STATUS_VOTING_PERIOD
                        - PROPOSAL_STATUS_PASSED
                        - PROPOSAL_STATUS_REJECTED
                        - PROPOSAL_STATUS_FAILED
                      default: PROPOSAL_STATUS_UNSPECIFIED
                      description: >-
                        ProposalStatus enumerates the valid statuses of a
                        proposal.

                         - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.
                         - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
                        period.
                         - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
                        period.
                         - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
                        passed.
                         - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
                        been rejected.
                         - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
                        failed.
                    final_tally_result:
                      type: object
                      properties:
                        'yes':
                          type: string
                        abstain:
                          type: string
                        'no':
                          type: string
                        no_with_veto:
                          type: string
                      description: >-
                        TallyResult defines a standard tally for a governance
                        proposal.
                    submit_time:
                      type: string
                      format: date-time
                    deposit_end_time:
                      type: string
                      format: date-time
                    total_deposit:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                    voting_start_time:
                      type: string
                      format: date-time
                    voting_end_time:
                      type: string
                      format: date-time
                  description: >-
                    Proposal defines the core field members of a governance
                    proposal.
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryProposalsResponse is the response type for the
              Query/Proposals RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/modules/y.z" will
                    yield type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: proposal_status
          description: |-
            proposal_status defines the status of the proposals.

             - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.
             - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
            period.
             - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
            period.
             - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
            passed.
             - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
            been rejected.
             - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
            failed.
          in: query
          required: false
          type: string
          enum:
            - PROPOSAL_STATUS_UNSPECIFIED
            - PROPOSAL_STATUS_DEPOSIT_PERIOD
            - PROPOSAL_STATUS_VOTING_PERIOD
            - PROPOSAL_STATUS_PASSED
            - PROPOSAL_STATUS_REJECTED
            - PROPOSAL_STATUS_FAILED
          default: PROPOSAL_STATUS_UNSPECIFIED
        - name: voter
          description: voter defines the voter address for the proposals.
          in: query
          required: false
          type: string
        - name: depositor
          description: depositor defines the deposit addresses from the proposals.
          in: query
          required: false
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/cosmos/gov/v1beta1/proposals/{proposal_id}':
    get:
      summary: Proposal queries proposal details based on ProposalID.
      operationId: Proposal
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              proposal:
                type: object
                properties:
                  proposal_id:
                    type: string
                    format: uint64
                  content:
                    type: object
                    properties:
                      type_url:
                        type: string
                        description: >-
                          A URL/resource name that uniquely identifies the type
                          of the serialized

                          protocol buffer message. This string must contain at
                          least

                          one "/" character. The last segment of the URL's path
                          must represent

                          the fully qualified name of the type (as in

                          `path/google.protobuf.Duration`). The name should be
                          in a canonical form

                          (e.g., leading "." is not accepted).


                          In practice, teams usually precompile into the binary
                          all types that they

                          expect it to use in the context of Any. However, for
                          URLs which use the

                          scheme `http`, `https`, or no scheme, one can
                          optionally set up a type

                          server that maps type URLs to message definitions as
                          follows:


                          * If no scheme is provided, `https` is assumed.

                          * An HTTP GET on the URL must yield a
                          [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results
                          based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in
                          the official

                          protobuf release, and it is not used for type URLs
                          beginning with

                          type.googleapis.com.


                          Schemes other than `http`, `https` (or the empty
                          scheme) might be

                          used with implementation specific semantics.
                      value:
                        type: string
                        format: byte
                        description: >-
                          Must be a valid serialized protocol buffer of the
                          above specified type.
                    description: >-
                      `Any` contains an arbitrary serialized protocol buffer
                      message along with a

                      URL that describes the type of the serialized message.


                      Protobuf library provides support to pack/unpack Any
                      values in the form

                      of utility functions or additional generated methods of
                      the Any type.


                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                       Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                       Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := ptypes.MarshalAny(foo)
                           ...
                           foo := &pb.Foo{}
                           if err := ptypes.UnmarshalAny(any, foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by
                      default use

                      'type.googleapis.com/full.type.name' as the type URL and
                      the unpack

                      methods only use the fully qualified type name after the
                      last '/'

                      in the type URL, for example "foo.bar.com/modules/y.z"
                      will yield type

                      name "y.z".



                      JSON

                      ====

                      The JSON representation of an `Any` value uses the regular

                      representation of the deserialized, embedded message, with
                      an

                      additional field `@type` which contains the type URL.
                      Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a
                      custom JSON

                      representation, that representation will be embedded
                      adding a field

                      `value` which holds the custom JSON in addition to the
                      `@type`

                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                  status:
                    type: string
                    enum:
                      - PROPOSAL_STATUS_UNSPECIFIED
                      - PROPOSAL_STATUS_DEPOSIT_PERIOD
                      - PROPOSAL_STATUS_VOTING_PERIOD
                      - PROPOSAL_STATUS_PASSED
                      - PROPOSAL_STATUS_REJECTED
                      - PROPOSAL_STATUS_FAILED
                    default: PROPOSAL_STATUS_UNSPECIFIED
                    description: >-
                      ProposalStatus enumerates the valid statuses of a
                      proposal.

                       - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.
                       - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
                      period.
                       - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
                      period.
                       - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
                      passed.
                       - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
                      been rejected.
                       - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
                      failed.
                  final_tally_result:
                    type: object
                    properties:
                      'yes':
                        type: string
                      abstain:
                        type: string
                      'no':
                        type: string
                      no_with_veto:
                        type: string
                    description: >-
                      TallyResult defines a standard tally for a governance
                      proposal.
                  submit_time:
                    type: string
                    format: date-time
                  deposit_end_time:
                    type: string
                    format: date-time
                  total_deposit:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                  voting_start_time:
                    type: string
                    format: date-time
                  voting_end_time:
                    type: string
                    format: date-time
                description: >-
                  Proposal defines the core field members of a governance
                  proposal.
            description: >-
              QueryProposalResponse is the response type for the Query/Proposal
              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/modules/y.z" will
                    yield type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: proposal_id
          description: proposal_id defines the unique id of the proposal.
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  '/cosmos/gov/v1beta1/proposals/{proposal_id}/deposits':
    get:
      summary: Deposits queries all deposits of a single proposal.
      operationId: Deposits
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              deposits:
                type: array
                items:
                  type: object
                  properties:
                    proposal_id:
                      type: string
                      format: uint64
                    depositor:
                      type: string
                    amount:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                  description: >-
                    Deposit defines an amount deposited by an account address to
                    an active

                    proposal.
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryDepositsResponse is the response type for the Query/Deposits
              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/modules/y.z" will
                    yield type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: proposal_id
          description: proposal_id defines the unique id of the proposal.
          in: path
          required: true
          type: string
          format: uint64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/cosmos/gov/v1beta1/proposals/{proposal_id}/deposits/{depositor}':
    get:
      summary: >-
        Deposit queries single deposit information based proposalID,
        depositAddr.
      operationId: Deposit
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              deposit:
                description: deposit defines the requested deposit.
                type: object
                properties:
                  proposal_id:
                    type: string
                    format: uint64
                  depositor:
                    type: string
                  amount:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
            description: >-
              QueryDepositResponse is the response type for the Query/Deposit
              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/modules/y.z" will
                    yield type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: proposal_id
          description: proposal_id defines the unique id of the proposal.
          in: path
          required: true
          type: string
          format: uint64
        - name: depositor
          description: depositor defines the deposit addresses from the proposals.
          in: path
          required: true
          type: string
      tags:
        - Query
  '/cosmos/gov/v1beta1/proposals/{proposal_id}/tally':
    get:
      summary: TallyResult queries the tally of a proposal vote.
      operationId: TallyResult
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              tally:
                description: tally defines the requested tally.
                type: object
                properties:
                  'yes':
                    type: string
                  abstain:
                    type: string
                  'no':
                    type: string
                  no_with_veto:
                    type: string
            description: >-
              QueryTallyResultResponse is the response type for the Query/Tally
              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/modules/y.z" will
                    yield type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: proposal_id
          description: proposal_id defines the unique id of the proposal.
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  '/cosmos/gov/v1beta1/proposals/{proposal_id}/votes':
    get:
      summary: Votes queries votes of a given proposal.
      operationId: Votes
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              votes:
                type: array
                items:
                  type: object
                  properties:
                    proposal_id:
                      type: string
                      format: uint64
                    voter:
                      type: string
                    option:
                      type: string
                      enum:
                        - VOTE_OPTION_UNSPECIFIED
                        - VOTE_OPTION_YES
                        - VOTE_OPTION_ABSTAIN
                        - VOTE_OPTION_NO
                        - VOTE_OPTION_NO_WITH_VETO
                      default: VOTE_OPTION_UNSPECIFIED
                      description: >-
                        VoteOption enumerates the valid vote options for a given
                        governance proposal.

                         - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
                         - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
                         - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
                         - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
                         - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
                  description: >-
                    Vote defines a vote on a governance proposal.

                    A Vote consists of a proposal ID, the voter, and the vote
                    option.
                description: votes defined the queried votes.
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryVotesResponse is the response type for the Query/Votes RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/modules/y.z" will
                    yield type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: proposal_id
          description: proposal_id defines the unique id of the proposal.
          in: path
          required: true
          type: string
          format: uint64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/cosmos/gov/v1beta1/proposals/{proposal_id}/votes/{voter}':
    get:
      summary: 'Vote queries voted information based on proposalID, voterAddr.'
      operationId: Vote
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              vote:
                description: vote defined the queried vote.
                type: object
                properties:
                  proposal_id:
                    type: string
                    format: uint64
                  voter:
                    type: string
                  option:
                    type: string
                    enum:
                      - VOTE_OPTION_UNSPECIFIED
                      - VOTE_OPTION_YES
                      - VOTE_OPTION_ABSTAIN
                      - VOTE_OPTION_NO
                      - VOTE_OPTION_NO_WITH_VETO
                    default: VOTE_OPTION_UNSPECIFIED
                    description: >-
                      VoteOption enumerates the valid vote options for a given
                      governance proposal.

                       - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
                       - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
                       - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
                       - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
                       - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
            description: >-
              QueryVoteResponse is the response type for the Query/Vote RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/modules/y.z" will
                    yield type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: proposal_id
          description: proposal_id defines the unique id of the proposal.
          in: path
          required: true
          type: string
          format: uint64
        - name: voter
          description: voter defines the oter address for the proposals.
          in: path
          required: true
          type: string
      tags:
        - Query
  '/cosmos/staking/v1beta1/delegations/{delegator_addr}':
    get:
      summary: >-
        DelegatorDelegations queries all delegations of a given delegator
        address.
      operationId: DelegatorDelegations
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              delegation_responses:
                type: array
                items:
                  type: object
                  properties:
                    delegation:
                      type: object
                      properties:
                        delegator_address:
                          type: string
                        validator_address:
                          type: string
                        shares:
                          type: string
                      description: >-
                        Delegation represents the bond with tokens held by an
                        account. It is

                        owned by one delegator, and is associated with the
                        voting power of one

                        validator.
                    balance:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                  description: >-
                    DelegationResponse is equivalent to Delegation except that
                    it contains a

                    balance in addition to shares which is more suitable for
                    client responses.
                description: >-
                  delegation_responses defines all the delegations' info of a
                  delegator.
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: |-
              QueryDelegatorDelegationsResponse is response type for the
              Query/DelegatorDelegations RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/modules/y.z" will
                    yield type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: delegator_addr
          description: delegator_addr defines the delegator address to query for.
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/cosmos/staking/v1beta1/delegators/{delegator_addr}/redelegations':
    get:
      summary: Redelegations queries redelegations of given address.
      operationId: Redelegations
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              redelegation_responses:
                type: array
                items:
                  type: object
                  properties:
                    redelegation:
                      type: object
                      properties:
                        delegator_address:
                          type: string
                        validator_src_address:
                          type: string
                        validator_dst_address:
                          type: string
                        entries:
                          type: array
                          items:
                            type: object
                            properties:
                              creation_height:
                                type: string
                                format: int64
                              completion_time:
                                type: string
                                format: date-time
                              initial_balance:
                                type: string
                              shares_dst:
                                type: string
                            description: >-
                              RedelegationEntry defines a redelegation object
                              with relevant metadata.
                      description: >-
                        Redelegation contains the list of a particular
                        delegator's redelegating bonds

                        from a particular source validator to a particular
                        destination validator.
                    entries:
                      type: array
                      items:
                        type: object
                        properties:
                          redelegation_entry:
                            type: object
                            properties:
                              creation_height:
                                type: string
                                format: int64
                              completion_time:
                                type: string
                                format: date-time
                              initial_balance:
                                type: string
                              shares_dst:
                                type: string
                            description: >-
                              RedelegationEntry defines a redelegation object
                              with relevant metadata.
                          balance:
                            type: string
                        description: >-
                          RedelegationEntryResponse is equivalent to a
                          RedelegationEntry except that it

                          contains a balance in addition to shares which is more
                          suitable for client

                          responses.
                  description: >-
                    RedelegationResponse is equivalent to a Redelegation except
                    that its entries

                    contain a balance in addition to shares which is more
                    suitable for client

                    responses.
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryRedelegationsResponse is response type for the
              Query/Redelegations RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/modules/y.z" will
                    yield type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: delegator_addr
          description: delegator_addr defines the delegator address to query for.
          in: path
          required: true
          type: string
        - name: src_validator_addr
          description: src_validator_addr defines the validator address to redelegate from.
          in: query
          required: false
          type: string
        - name: dst_validator_addr
          description: dst_validator_addr defines the validator address to redelegate to.
          in: query
          required: false
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/cosmos/staking/v1beta1/delegators/{delegator_addr}/unbonding_delegations':
    get:
      summary: >-
        DelegatorUnbondingDelegations queries all unbonding delegations of a
        given

        delegator address.
      operationId: DelegatorUnbondingDelegations
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              unbonding_responses:
                type: array
                items:
                  type: object
                  properties:
                    delegator_address:
                      type: string
                    validator_address:
                      type: string
                    entries:
                      type: array
                      items:
                        type: object
                        properties:
                          creation_height:
                            type: string
                            format: int64
                          completion_time:
                            type: string
                            format: date-time
                          initial_balance:
                            type: string
                          balance:
                            type: string
                        description: >-
                          UnbondingDelegationEntry defines an unbonding object
                          with relevant metadata.
                  description: >-
                    UnbondingDelegation stores all of a single delegator's
                    unbonding bonds

                    for a single validator in an time-ordered list.
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryUnbondingDelegatorDelegationsResponse is response type for
              the

              Query/UnbondingDelegatorDelegations RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/modules/y.z" will
                    yield type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: delegator_addr
          description: delegator_addr defines the delegator address to query for.
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/cosmos/staking/v1beta1/delegators/{delegator_addr}/validators':
    get:
      summary: |-
        DelegatorValidators queries all validators info for given delegator
        address.
      operationId: DelegatorValidators
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              validators:
                type: array
                items:
                  type: object
                  properties:
                    operator_address:
                      type: string
                    consensus_pubkey:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: >-
                            A URL/resource name that uniquely identifies the
                            type of the serialized

                            protocol buffer message. This string must contain at
                            least

                            one "/" character. The last segment of the URL's
                            path must represent

                            the fully qualified name of the type (as in

                            `path/google.protobuf.Duration`). The name should be
                            in a canonical form

                            (e.g., leading "." is not accepted).


                            In practice, teams usually precompile into the
                            binary all types that they

                            expect it to use in the context of Any. However, for
                            URLs which use the

                            scheme `http`, `https`, or no scheme, one can
                            optionally set up a type

                            server that maps type URLs to message definitions as
                            follows:


                            * If no scheme is provided, `https` is assumed.

                            * An HTTP GET on the URL must yield a
                            [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results
                            based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available
                            in the official

                            protobuf release, and it is not used for type URLs
                            beginning with

                            type.googleapis.com.


                            Schemes other than `http`, `https` (or the empty
                            scheme) might be

                            used with implementation specific semantics.
                        value:
                          type: string
                          format: byte
                          description: >-
                            Must be a valid serialized protocol buffer of the
                            above specified type.
                      description: >-
                        `Any` contains an arbitrary serialized protocol buffer
                        message along with a

                        URL that describes the type of the serialized message.


                        Protobuf library provides support to pack/unpack Any
                        values in the form

                        of utility functions or additional generated methods of
                        the Any type.


                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by
                        default use

                        'type.googleapis.com/full.type.name' as the type URL and
                        the unpack

                        methods only use the fully qualified type name after the
                        last '/'

                        in the type URL, for example "foo.bar.com/modules/y.z"
                        will yield type

                        name "y.z".



                        JSON

                        ====

                        The JSON representation of an `Any` value uses the
                        regular

                        representation of the deserialized, embedded message,
                        with an

                        additional field `@type` which contains the type URL.
                        Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a
                        custom JSON

                        representation, that representation will be embedded
                        adding a field

                        `value` which holds the custom JSON in addition to the
                        `@type`

                        field. Example (for message
                        [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                    jailed:
                      type: boolean
                    status:
                      type: string
                      enum:
                        - BOND_STATUS_UNSPECIFIED
                        - BOND_STATUS_UNBONDED
                        - BOND_STATUS_UNBONDING
                        - BOND_STATUS_BONDED
                      default: BOND_STATUS_UNSPECIFIED
                      description: |-
                        BondStatus is the status of a validator.

                         - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.
                         - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.
                         - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.
                         - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.
                    tokens:
                      type: string
                    delegator_shares:
                      type: string
                    description:
                      type: object
                      properties:
                        moniker:
                          type: string
                        identity:
                          type: string
                        website:
                          type: string
                        security_contact:
                          type: string
                        details:
                          type: string
                      description: Description defines a validator description.
                    unbonding_height:
                      type: string
                      format: int64
                    unbonding_time:
                      type: string
                      format: date-time
                    commission:
                      type: object
                      properties:
                        commission_rates:
                          type: object
                          properties:
                            rate:
                              type: string
                            max_rate:
                              type: string
                            max_change_rate:
                              type: string
                          description: >-
                            CommissionRates defines the initial commission rates
                            to be used for creating

                            a validator.
                        update_time:
                          type: string
                          format: date-time
                      description: >-
                        Commission defines commission parameters for a given
                        validator.
                    min_self_delegation:
                      type: string
                  description: >-
                    Validator defines a validator, together with the total
                    amount of the

                    Validator's bond shares and their exchange rate to coins.
                    Slashing results in

                    a decrease in the exchange rate, allowing correct
                    calculation of future

                    undelegations without iterating over delegators. When coins
                    are delegated to

                    this validator, the validator is credited with a delegation
                    whose number of

                    bond shares is based on the amount of coins delegated
                    divided by the current

                    exchange rate. Voting power can be calculated as total
                    bonded shares

                    multiplied by exchange rate.
                description: validators defines the the validators' info of a delegator.
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: |-
              QueryDelegatorValidatorsResponse is response type for the
              Query/DelegatorValidators RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/modules/y.z" will
                    yield type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: delegator_addr
          description: delegator_addr defines the delegator address to query for.
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/cosmos/staking/v1beta1/delegators/{delegator_addr}/validators/{validator_addr}':
    get:
      summary: |-
        DelegatorValidator queries validator info for given delegator validator
        pair.
      operationId: DelegatorValidator
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              validator:
                description: validator defines the the validator info.
                type: object
                properties:
                  operator_address:
                    type: string
                  consensus_pubkey:
                    type: object
                    properties:
                      type_url:
                        type: string
                        description: >-
                          A URL/resource name that uniquely identifies the type
                          of the serialized

                          protocol buffer message. This string must contain at
                          least

                          one "/" character. The last segment of the URL's path
                          must represent

                          the fully qualified name of the type (as in

                          `path/google.protobuf.Duration`). The name should be
                          in a canonical form

                          (e.g., leading "." is not accepted).


                          In practice, teams usually precompile into the binary
                          all types that they

                          expect it to use in the context of Any. However, for
                          URLs which use the

                          scheme `http`, `https`, or no scheme, one can
                          optionally set up a type

                          server that maps type URLs to message definitions as
                          follows:


                          * If no scheme is provided, `https` is assumed.

                          * An HTTP GET on the URL must yield a
                          [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results
                          based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in
                          the official

                          protobuf release, and it is not used for type URLs
                          beginning with

                          type.googleapis.com.


                          Schemes other than `http`, `https` (or the empty
                          scheme) might be

                          used with implementation specific semantics.
                      value:
                        type: string
                        format: byte
                        description: >-
                          Must be a valid serialized protocol buffer of the
                          above specified type.
                    description: >-
                      `Any` contains an arbitrary serialized protocol buffer
                      message along with a

                      URL that describes the type of the serialized message.


                      Protobuf library provides support to pack/unpack Any
                      values in the form

                      of utility functions or additional generated methods of
                      the Any type.


                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                       Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                       Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := ptypes.MarshalAny(foo)
                           ...
                           foo := &pb.Foo{}
                           if err := ptypes.UnmarshalAny(any, foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by
                      default use

                      'type.googleapis.com/full.type.name' as the type URL and
                      the unpack

                      methods only use the fully qualified type name after the
                      last '/'

                      in the type URL, for example "foo.bar.com/modules/y.z"
                      will yield type

                      name "y.z".



                      JSON

                      ====

                      The JSON representation of an `Any` value uses the regular

                      representation of the deserialized, embedded message, with
                      an

                      additional field `@type` which contains the type URL.
                      Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a
                      custom JSON

                      representation, that representation will be embedded
                      adding a field

                      `value` which holds the custom JSON in addition to the
                      `@type`

                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                  jailed:
                    type: boolean
                  status:
                    type: string
                    enum:
                      - BOND_STATUS_UNSPECIFIED
                      - BOND_STATUS_UNBONDED
                      - BOND_STATUS_UNBONDING
                      - BOND_STATUS_BONDED
                    default: BOND_STATUS_UNSPECIFIED
                    description: |-
                      BondStatus is the status of a validator.

                       - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.
                       - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.
                       - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.
                       - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.
                  tokens:
                    type: string
                  delegator_shares:
                    type: string
                  description:
                    type: object
                    properties:
                      moniker:
                        type: string
                      identity:
                        type: string
                      website:
                        type: string
                      security_contact:
                        type: string
                      details:
                        type: string
                    description: Description defines a validator description.
                  unbonding_height:
                    type: string
                    format: int64
                  unbonding_time:
                    type: string
                    format: date-time
                  commission:
                    type: object
                    properties:
                      commission_rates:
                        type: object
                        properties:
                          rate:
                            type: string
                          max_rate:
                            type: string
                          max_change_rate:
                            type: string
                        description: >-
                          CommissionRates defines the initial commission rates
                          to be used for creating

                          a validator.
                      update_time:
                        type: string
                        format: date-time
                    description: >-
                      Commission defines commission parameters for a given
                      validator.
                  min_self_delegation:
                    type: string
            description: |-
              QueryDelegatorValidatorResponse response type for the
              Query/DelegatorValidator RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/modules/y.z" will
                    yield type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: delegator_addr
          description: delegator_addr defines the delegator address to query for.
          in: path
          required: true
          type: string
        - name: validator_addr
          description: validator_addr defines the validator address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  '/cosmos/staking/v1beta1/historical_info/{height}':
    get:
      summary: HistoricalInfo queries the historical info for given height.
      operationId: HistoricalInfo
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              hist:
                description: hist defines the historical info at the given height.
                type: object
                properties:
                  header:
                    type: object
                    properties:
                      version:
                        title: basic block info
                        type: object
                        properties:
                          block:
                            type: string
                            format: uint64
                          app:
                            type: string
                            format: uint64
                        description: >-
                          Consensus captures the consensus rules for processing
                          a block in the blockchain,

                          including all blockchain data structures and the rules
                          of the application's

                          state transition machine.
                      chain_id:
                        type: string
                      height:
                        type: string
                        format: int64
                      time:
                        type: string
                        format: date-time
                      last_block_id:
                        title: prev block info
                        type: object
                        properties:
                          hash:
                            type: string
                            format: byte
                          part_set_header:
                            type: object
                            properties:
                              total:
                                type: integer
                                format: int64
                              hash:
                                type: string
                                format: byte
                            title: PartsetHeader
                      last_commit_hash:
                        type: string
                        format: byte
                        title: hashes of block data
                      data_hash:
                        type: string
                        format: byte
                      validators_hash:
                        type: string
                        format: byte
                        title: hashes from the app output from the prev block
                      next_validators_hash:
                        type: string
                        format: byte
                      consensus_hash:
                        type: string
                        format: byte
                      app_hash:
                        type: string
                        format: byte
                      last_results_hash:
                        type: string
                        format: byte
                      evidence_hash:
                        type: string
                        format: byte
                        title: consensus info
                      proposer_address:
                        type: string
                        format: byte
                    description: Header defines the structure of a Tendermint block header.
                  valset:
                    type: array
                    items:
                      type: object
                      properties:
                        operator_address:
                          type: string
                        consensus_pubkey:
                          type: object
                          properties:
                            type_url:
                              type: string
                              description: >-
                                A URL/resource name that uniquely identifies the
                                type of the serialized

                                protocol buffer message. This string must
                                contain at least

                                one "/" character. The last segment of the URL's
                                path must represent

                                the fully qualified name of the type (as in

                                `path/google.protobuf.Duration`). The name
                                should be in a canonical form

                                (e.g., leading "." is not accepted).


                                In practice, teams usually precompile into the
                                binary all types that they

                                expect it to use in the context of Any. However,
                                for URLs which use the

                                scheme `http`, `https`, or no scheme, one can
                                optionally set up a type

                                server that maps type URLs to message
                                definitions as follows:


                                * If no scheme is provided, `https` is assumed.

                                * An HTTP GET on the URL must yield a
                                [google.protobuf.Type][]
                                  value in binary format, or produce an error.
                                * Applications are allowed to cache lookup
                                results based on the
                                  URL, or have them precompiled into a binary to avoid any
                                  lookup. Therefore, binary compatibility needs to be preserved
                                  on changes to types. (Use versioned type names to manage
                                  breaking changes.)

                                Note: this functionality is not currently
                                available in the official

                                protobuf release, and it is not used for type
                                URLs beginning with

                                type.googleapis.com.


                                Schemes other than `http`, `https` (or the empty
                                scheme) might be

                                used with implementation specific semantics.
                            value:
                              type: string
                              format: byte
                              description: >-
                                Must be a valid serialized protocol buffer of
                                the above specified type.
                          description: >-
                            `Any` contains an arbitrary serialized protocol
                            buffer message along with a

                            URL that describes the type of the serialized
                            message.


                            Protobuf library provides support to pack/unpack Any
                            values in the form

                            of utility functions or additional generated methods
                            of the Any type.


                            Example 1: Pack and unpack a message in C++.

                                Foo foo = ...;
                                Any any;
                                any.PackFrom(foo);
                                ...
                                if (any.UnpackTo(&foo)) {
                                  ...
                                }

                            Example 2: Pack and unpack a message in Java.

                                Foo foo = ...;
                                Any any = Any.pack(foo);
                                ...
                                if (any.is(Foo.class)) {
                                  foo = any.unpack(Foo.class);
                                }

                             Example 3: Pack and unpack a message in Python.

                                foo = Foo(...)
                                any = Any()
                                any.Pack(foo)
                                ...
                                if any.Is(Foo.DESCRIPTOR):
                                  any.Unpack(foo)
                                  ...

                             Example 4: Pack and unpack a message in Go

                                 foo := &pb.Foo{...}
                                 any, err := ptypes.MarshalAny(foo)
                                 ...
                                 foo := &pb.Foo{}
                                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                                   ...
                                 }

                            The pack methods provided by protobuf library will
                            by default use

                            'type.googleapis.com/full.type.name' as the type URL
                            and the unpack

                            methods only use the fully qualified type name after
                            the last '/'

                            in the type URL, for example
                            "foo.bar.com/modules/y.z" will yield type

                            name "y.z".



                            JSON

                            ====

                            The JSON representation of an `Any` value uses the
                            regular

                            representation of the deserialized, embedded
                            message, with an

                            additional field `@type` which contains the type
                            URL. Example:

                                package google.profile;
                                message Person {
                                  string first_name = 1;
                                  string last_name = 2;
                                }

                                {
                                  "@type": "type.googleapis.com/google.profile.Person",
                                  "firstName": <string>,
                                  "lastName": <string>
                                }

                            If the embedded message type is well-known and has a
                            custom JSON

                            representation, that representation will be embedded
                            adding a field

                            `value` which holds the custom JSON in addition to
                            the `@type`

                            field. Example (for message
                            [google.protobuf.Duration][]):

                                {
                                  "@type": "type.googleapis.com/google.protobuf.Duration",
                                  "value": "1.212s"
                                }
                        jailed:
                          type: boolean
                        status:
                          type: string
                          enum:
                            - BOND_STATUS_UNSPECIFIED
                            - BOND_STATUS_UNBONDED
                            - BOND_STATUS_UNBONDING
                            - BOND_STATUS_BONDED
                          default: BOND_STATUS_UNSPECIFIED
                          description: |-
                            BondStatus is the status of a validator.

                             - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.
                             - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.
                             - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.
                             - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.
                        tokens:
                          type: string
                        delegator_shares:
                          type: string
                        description:
                          type: object
                          properties:
                            moniker:
                              type: string
                            identity:
                              type: string
                            website:
                              type: string
                            security_contact:
                              type: string
                            details:
                              type: string
                          description: Description defines a validator description.
                        unbonding_height:
                          type: string
                          format: int64
                        unbonding_time:
                          type: string
                          format: date-time
                        commission:
                          type: object
                          properties:
                            commission_rates:
                              type: object
                              properties:
                                rate:
                                  type: string
                                max_rate:
                                  type: string
                                max_change_rate:
                                  type: string
                              description: >-
                                CommissionRates defines the initial commission
                                rates to be used for creating

                                a validator.
                            update_time:
                              type: string
                              format: date-time
                          description: >-
                            Commission defines commission parameters for a given
                            validator.
                        min_self_delegation:
                          type: string
                      description: >-
                        Validator defines a validator, together with the total
                        amount of the

                        Validator's bond shares and their exchange rate to
                        coins. Slashing results in

                        a decrease in the exchange rate, allowing correct
                        calculation of future

                        undelegations without iterating over delegators. When
                        coins are delegated to

                        this validator, the validator is credited with a
                        delegation whose number of

                        bond shares is based on the amount of coins delegated
                        divided by the current

                        exchange rate. Voting power can be calculated as total
                        bonded shares

                        multiplied by exchange rate.
            description: >-
              QueryHistoricalInfoResponse is response type for the
              Query/HistoricalInfo RPC

              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/modules/y.z" will
                    yield type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: height
          description: height defines at which height to query the historical info.
          in: path
          required: true
          type: string
          format: int64
      tags:
        - Query
  /cosmos/staking/v1beta1/params:
    get:
      summary: Parameters queries the staking parameters.
      operationId: StakingParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: params holds all the parameters of this module.
                type: object
                properties:
                  unbonding_time:
                    type: string
                  max_validators:
                    type: integer
                    format: int64
                  max_entries:
                    type: integer
                    format: int64
                  historical_entries:
                    type: integer
                    format: int64
                  bond_denom:
                    type: string
            description: >-
              QueryParamsResponse is response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/modules/y.z" will
                    yield type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
  /cosmos/staking/v1beta1/pool:
    get:
      summary: Pool queries the pool info.
      operationId: Pool
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              pool:
                description: pool defines the pool info.
                type: object
                properties:
                  not_bonded_tokens:
                    type: string
                  bonded_tokens:
                    type: string
            description: QueryPoolResponse is response type for the Query/Pool RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/modules/y.z" will
                    yield type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
  /cosmos/staking/v1beta1/validators:
    get:
      summary: Validators queries all validators that match the given status.
      operationId: Validators
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              validators:
                type: array
                items:
                  type: object
                  properties:
                    operator_address:
                      type: string
                    consensus_pubkey:
                      type: object
                      properties:
                        type_url:
                          type: string
                          description: >-
                            A URL/resource name that uniquely identifies the
                            type of the serialized

                            protocol buffer message. This string must contain at
                            least

                            one "/" character. The last segment of the URL's
                            path must represent

                            the fully qualified name of the type (as in

                            `path/google.protobuf.Duration`). The name should be
                            in a canonical form

                            (e.g., leading "." is not accepted).


                            In practice, teams usually precompile into the
                            binary all types that they

                            expect it to use in the context of Any. However, for
                            URLs which use the

                            scheme `http`, `https`, or no scheme, one can
                            optionally set up a type

                            server that maps type URLs to message definitions as
                            follows:


                            * If no scheme is provided, `https` is assumed.

                            * An HTTP GET on the URL must yield a
                            [google.protobuf.Type][]
                              value in binary format, or produce an error.
                            * Applications are allowed to cache lookup results
                            based on the
                              URL, or have them precompiled into a binary to avoid any
                              lookup. Therefore, binary compatibility needs to be preserved
                              on changes to types. (Use versioned type names to manage
                              breaking changes.)

                            Note: this functionality is not currently available
                            in the official

                            protobuf release, and it is not used for type URLs
                            beginning with

                            type.googleapis.com.


                            Schemes other than `http`, `https` (or the empty
                            scheme) might be

                            used with implementation specific semantics.
                        value:
                          type: string
                          format: byte
                          description: >-
                            Must be a valid serialized protocol buffer of the
                            above specified type.
                      description: >-
                        `Any` contains an arbitrary serialized protocol buffer
                        message along with a

                        URL that describes the type of the serialized message.


                        Protobuf library provides support to pack/unpack Any
                        values in the form

                        of utility functions or additional generated methods of
                        the Any type.


                        Example 1: Pack and unpack a message in C++.

                            Foo foo = ...;
                            Any any;
                            any.PackFrom(foo);
                            ...
                            if (any.UnpackTo(&foo)) {
                              ...
                            }

                        Example 2: Pack and unpack a message in Java.

                            Foo foo = ...;
                            Any any = Any.pack(foo);
                            ...
                            if (any.is(Foo.class)) {
                              foo = any.unpack(Foo.class);
                            }

                         Example 3: Pack and unpack a message in Python.

                            foo = Foo(...)
                            any = Any()
                            any.Pack(foo)
                            ...
                            if any.Is(Foo.DESCRIPTOR):
                              any.Unpack(foo)
                              ...

                         Example 4: Pack and unpack a message in Go

                             foo := &pb.Foo{...}
                             any, err := ptypes.MarshalAny(foo)
                             ...
                             foo := &pb.Foo{}
                             if err := ptypes.UnmarshalAny(any, foo); err != nil {
                               ...
                             }

                        The pack methods provided by protobuf library will by
                        default use

                        'type.googleapis.com/full.type.name' as the type URL and
                        the unpack

                        methods only use the fully qualified type name after the
                        last '/'

                        in the type URL, for example "foo.bar.com/modules/y.z"
                        will yield type

                        name "y.z".



                        JSON

                        ====

                        The JSON representation of an `Any` value uses the
                        regular

                        representation of the deserialized, embedded message,
                        with an

                        additional field `@type` which contains the type URL.
                        Example:

                            package google.profile;
                            message Person {
                              string first_name = 1;
                              string last_name = 2;
                            }

                            {
                              "@type": "type.googleapis.com/google.profile.Person",
                              "firstName": <string>,
                              "lastName": <string>
                            }

                        If the embedded message type is well-known and has a
                        custom JSON

                        representation, that representation will be embedded
                        adding a field

                        `value` which holds the custom JSON in addition to the
                        `@type`

                        field. Example (for message
                        [google.protobuf.Duration][]):

                            {
                              "@type": "type.googleapis.com/google.protobuf.Duration",
                              "value": "1.212s"
                            }
                    jailed:
                      type: boolean
                    status:
                      type: string
                      enum:
                        - BOND_STATUS_UNSPECIFIED
                        - BOND_STATUS_UNBONDED
                        - BOND_STATUS_UNBONDING
                        - BOND_STATUS_BONDED
                      default: BOND_STATUS_UNSPECIFIED
                      description: |-
                        BondStatus is the status of a validator.

                         - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.
                         - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.
                         - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.
                         - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.
                    tokens:
                      type: string
                    delegator_shares:
                      type: string
                    description:
                      type: object
                      properties:
                        moniker:
                          type: string
                        identity:
                          type: string
                        website:
                          type: string
                        security_contact:
                          type: string
                        details:
                          type: string
                      description: Description defines a validator description.
                    unbonding_height:
                      type: string
                      format: int64
                    unbonding_time:
                      type: string
                      format: date-time
                    commission:
                      type: object
                      properties:
                        commission_rates:
                          type: object
                          properties:
                            rate:
                              type: string
                            max_rate:
                              type: string
                            max_change_rate:
                              type: string
                          description: >-
                            CommissionRates defines the initial commission rates
                            to be used for creating

                            a validator.
                        update_time:
                          type: string
                          format: date-time
                      description: >-
                        Commission defines commission parameters for a given
                        validator.
                    min_self_delegation:
                      type: string
                  description: >-
                    Validator defines a validator, together with the total
                    amount of the

                    Validator's bond shares and their exchange rate to coins.
                    Slashing results in

                    a decrease in the exchange rate, allowing correct
                    calculation of future

                    undelegations without iterating over delegators. When coins
                    are delegated to

                    this validator, the validator is credited with a delegation
                    whose number of

                    bond shares is based on the amount of coins delegated
                    divided by the current

                    exchange rate. Voting power can be calculated as total
                    bonded shares

                    multiplied by exchange rate.
                description: validators contains all the queried validators.
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            title: >-
              QueryValidatorsResponse is response type for the Query/Validators
              RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/modules/y.z" will
                    yield type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: status
          description: status enables to query for validators matching a given status.
          in: query
          required: false
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/cosmos/staking/v1beta1/validators/{validator_addr}':
    get:
      summary: Validator queries validator info for given validator address.
      operationId: Validator
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              validator:
                description: validator defines the the validator info.
                type: object
                properties:
                  operator_address:
                    type: string
                  consensus_pubkey:
                    type: object
                    properties:
                      type_url:
                        type: string
                        description: >-
                          A URL/resource name that uniquely identifies the type
                          of the serialized

                          protocol buffer message. This string must contain at
                          least

                          one "/" character. The last segment of the URL's path
                          must represent

                          the fully qualified name of the type (as in

                          `path/google.protobuf.Duration`). The name should be
                          in a canonical form

                          (e.g., leading "." is not accepted).


                          In practice, teams usually precompile into the binary
                          all types that they

                          expect it to use in the context of Any. However, for
                          URLs which use the

                          scheme `http`, `https`, or no scheme, one can
                          optionally set up a type

                          server that maps type URLs to message definitions as
                          follows:


                          * If no scheme is provided, `https` is assumed.

                          * An HTTP GET on the URL must yield a
                          [google.protobuf.Type][]
                            value in binary format, or produce an error.
                          * Applications are allowed to cache lookup results
                          based on the
                            URL, or have them precompiled into a binary to avoid any
                            lookup. Therefore, binary compatibility needs to be preserved
                            on changes to types. (Use versioned type names to manage
                            breaking changes.)

                          Note: this functionality is not currently available in
                          the official

                          protobuf release, and it is not used for type URLs
                          beginning with

                          type.googleapis.com.


                          Schemes other than `http`, `https` (or the empty
                          scheme) might be

                          used with implementation specific semantics.
                      value:
                        type: string
                        format: byte
                        description: >-
                          Must be a valid serialized protocol buffer of the
                          above specified type.
                    description: >-
                      `Any` contains an arbitrary serialized protocol buffer
                      message along with a

                      URL that describes the type of the serialized message.


                      Protobuf library provides support to pack/unpack Any
                      values in the form

                      of utility functions or additional generated methods of
                      the Any type.


                      Example 1: Pack and unpack a message in C++.

                          Foo foo = ...;
                          Any any;
                          any.PackFrom(foo);
                          ...
                          if (any.UnpackTo(&foo)) {
                            ...
                          }

                      Example 2: Pack and unpack a message in Java.

                          Foo foo = ...;
                          Any any = Any.pack(foo);
                          ...
                          if (any.is(Foo.class)) {
                            foo = any.unpack(Foo.class);
                          }

                       Example 3: Pack and unpack a message in Python.

                          foo = Foo(...)
                          any = Any()
                          any.Pack(foo)
                          ...
                          if any.Is(Foo.DESCRIPTOR):
                            any.Unpack(foo)
                            ...

                       Example 4: Pack and unpack a message in Go

                           foo := &pb.Foo{...}
                           any, err := ptypes.MarshalAny(foo)
                           ...
                           foo := &pb.Foo{}
                           if err := ptypes.UnmarshalAny(any, foo); err != nil {
                             ...
                           }

                      The pack methods provided by protobuf library will by
                      default use

                      'type.googleapis.com/full.type.name' as the type URL and
                      the unpack

                      methods only use the fully qualified type name after the
                      last '/'

                      in the type URL, for example "foo.bar.com/modules/y.z"
                      will yield type

                      name "y.z".



                      JSON

                      ====

                      The JSON representation of an `Any` value uses the regular

                      representation of the deserialized, embedded message, with
                      an

                      additional field `@type` which contains the type URL.
                      Example:

                          package google.profile;
                          message Person {
                            string first_name = 1;
                            string last_name = 2;
                          }

                          {
                            "@type": "type.googleapis.com/google.profile.Person",
                            "firstName": <string>,
                            "lastName": <string>
                          }

                      If the embedded message type is well-known and has a
                      custom JSON

                      representation, that representation will be embedded
                      adding a field

                      `value` which holds the custom JSON in addition to the
                      `@type`

                      field. Example (for message [google.protobuf.Duration][]):

                          {
                            "@type": "type.googleapis.com/google.protobuf.Duration",
                            "value": "1.212s"
                          }
                  jailed:
                    type: boolean
                  status:
                    type: string
                    enum:
                      - BOND_STATUS_UNSPECIFIED
                      - BOND_STATUS_UNBONDED
                      - BOND_STATUS_UNBONDING
                      - BOND_STATUS_BONDED
                    default: BOND_STATUS_UNSPECIFIED
                    description: |-
                      BondStatus is the status of a validator.

                       - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.
                       - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.
                       - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.
                       - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.
                  tokens:
                    type: string
                  delegator_shares:
                    type: string
                  description:
                    type: object
                    properties:
                      moniker:
                        type: string
                      identity:
                        type: string
                      website:
                        type: string
                      security_contact:
                        type: string
                      details:
                        type: string
                    description: Description defines a validator description.
                  unbonding_height:
                    type: string
                    format: int64
                  unbonding_time:
                    type: string
                    format: date-time
                  commission:
                    type: object
                    properties:
                      commission_rates:
                        type: object
                        properties:
                          rate:
                            type: string
                          max_rate:
                            type: string
                          max_change_rate:
                            type: string
                        description: >-
                          CommissionRates defines the initial commission rates
                          to be used for creating

                          a validator.
                      update_time:
                        type: string
                        format: date-time
                    description: >-
                      Commission defines commission parameters for a given
                      validator.
                  min_self_delegation:
                    type: string
            title: >-
              QueryValidatorResponse is response type for the Query/Validator
              RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/modules/y.z" will
                    yield type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: validator_addr
          description: validator_addr defines the validator address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  '/cosmos/staking/v1beta1/validators/{validator_addr}/delegations':
    get:
      summary: ValidatorDelegations queries delegate info for given validator.
      operationId: ValidatorDelegations
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              delegation_responses:
                type: array
                items:
                  type: object
                  properties:
                    delegation:
                      type: object
                      properties:
                        delegator_address:
                          type: string
                        validator_address:
                          type: string
                        shares:
                          type: string
                      description: >-
                        Delegation represents the bond with tokens held by an
                        account. It is

                        owned by one delegator, and is associated with the
                        voting power of one

                        validator.
                    balance:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                  description: >-
                    DelegationResponse is equivalent to Delegation except that
                    it contains a

                    balance in addition to shares which is more suitable for
                    client responses.
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            title: |-
              QueryValidatorDelegationsResponse is response type for the
              Query/ValidatorDelegations RPC method
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/modules/y.z" will
                    yield type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: validator_addr
          description: validator_addr defines the validator address to query for.
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
  '/cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}':
    get:
      summary: Delegation queries delegate info for given validator delegator pair.
      operationId: Delegation
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              delegation_response:
                description: >-
                  delegation_responses defines the delegation info of a
                  delegation.
                type: object
                properties:
                  delegation:
                    type: object
                    properties:
                      delegator_address:
                        type: string
                      validator_address:
                        type: string
                      shares:
                        type: string
                    description: >-
                      Delegation represents the bond with tokens held by an
                      account. It is

                      owned by one delegator, and is associated with the voting
                      power of one

                      validator.
                  balance:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
            description: >-
              QueryDelegationResponse is response type for the Query/Delegation
              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/modules/y.z" will
                    yield type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: validator_addr
          description: validator_addr defines the validator address to query for.
          in: path
          required: true
          type: string
        - name: delegator_addr
          description: delegator_addr defines the delegator address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  '/cosmos/staking/v1beta1/validators/{validator_addr}/delegations/{delegator_addr}/unbonding_delegation':
    get:
      summary: |-
        UnbondingDelegation queries unbonding info for given validator delegator
        pair.
      operationId: UnbondingDelegation
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              unbond:
                description: unbond defines the unbonding information of a delegation.
                type: object
                properties:
                  delegator_address:
                    type: string
                  validator_address:
                    type: string
                  entries:
                    type: array
                    items:
                      type: object
                      properties:
                        creation_height:
                          type: string
                          format: int64
                        completion_time:
                          type: string
                          format: date-time
                        initial_balance:
                          type: string
                        balance:
                          type: string
                      description: >-
                        UnbondingDelegationEntry defines an unbonding object
                        with relevant metadata.
            description: >-
              QueryDelegationResponse is response type for the
              Query/UnbondingDelegation

              RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/modules/y.z" will
                    yield type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: validator_addr
          description: validator_addr defines the validator address to query for.
          in: path
          required: true
          type: string
        - name: delegator_addr
          description: delegator_addr defines the delegator address to query for.
          in: path
          required: true
          type: string
      tags:
        - Query
  '/cosmos/staking/v1beta1/validators/{validator_addr}/unbonding_delegations':
    get:
      summary: >-
        ValidatorUnbondingDelegations queries unbonding delegations of a
        validator.
      operationId: ValidatorUnbondingDelegations
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              unbonding_responses:
                type: array
                items:
                  type: object
                  properties:
                    delegator_address:
                      type: string
                    validator_address:
                      type: string
                    entries:
                      type: array
                      items:
                        type: object
                        properties:
                          creation_height:
                            type: string
                            format: int64
                          completion_time:
                            type: string
                            format: date-time
                          initial_balance:
                            type: string
                          balance:
                            type: string
                        description: >-
                          UnbondingDelegationEntry defines an unbonding object
                          with relevant metadata.
                  description: >-
                    UnbondingDelegation stores all of a single delegator's
                    unbonding bonds

                    for a single validator in an time-ordered list.
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryValidatorUnbondingDelegationsResponse is response type for
              the

              Query/ValidatorUnbondingDelegations RPC method.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/modules/y.z" will
                    yield type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: validator_addr
          description: validator_addr defines the validator address to query for.
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
definitions:
  cosmos.base.v1beta1.Coin:
    type: object
    properties:
      denom:
        type: string
      amount:
        type: string
    description: |-
      Coin defines a token with a denomination and an amount.

      NOTE: The amount field is an Int which implements the custom method
      signatures required by gogoproto.
  google.protobuf.Any:
    type: object
    properties:
      type_url:
        type: string
        description: >-
          A URL/resource name that uniquely identifies the type of the
          serialized

          protocol buffer message. This string must contain at least

          one "/" character. The last segment of the URL's path must represent

          the fully qualified name of the type (as in

          `path/google.protobuf.Duration`). The name should be in a canonical
          form

          (e.g., leading "." is not accepted).


          In practice, teams usually precompile into the binary all types that
          they

          expect it to use in the context of Any. However, for URLs which use
          the

          scheme `http`, `https`, or no scheme, one can optionally set up a type

          server that maps type URLs to message definitions as follows:


          * If no scheme is provided, `https` is assumed.

          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
            value in binary format, or produce an error.
          * Applications are allowed to cache lookup results based on the
            URL, or have them precompiled into a binary to avoid any
            lookup. Therefore, binary compatibility needs to be preserved
            on changes to types. (Use versioned type names to manage
            breaking changes.)

          Note: this functionality is not currently available in the official

          protobuf release, and it is not used for type URLs beginning with

          type.googleapis.com.


          Schemes other than `http`, `https` (or the empty scheme) might be

          used with implementation specific semantics.
      value:
        type: string
        format: byte
        description: >-
          Must be a valid serialized protocol buffer of the above specified
          type.
    description: >-
      `Any` contains an arbitrary serialized protocol buffer message along with
      a

      URL that describes the type of the serialized message.


      Protobuf library provides support to pack/unpack Any values in the form

      of utility functions or additional generated methods of the Any type.


      Example 1: Pack and unpack a message in C++.

          Foo foo = ...;
          Any any;
          any.PackFrom(foo);
          ...
          if (any.UnpackTo(&foo)) {
            ...
          }

      Example 2: Pack and unpack a message in Java.

          Foo foo = ...;
          Any any = Any.pack(foo);
          ...
          if (any.is(Foo.class)) {
            foo = any.unpack(Foo.class);
          }

       Example 3: Pack and unpack a message in Python.

          foo = Foo(...)
          any = Any()
          any.Pack(foo)
          ...
          if any.Is(Foo.DESCRIPTOR):
            any.Unpack(foo)
            ...

       Example 4: Pack and unpack a message in Go

           foo := &pb.Foo{...}
           any, err := ptypes.MarshalAny(foo)
           ...
           foo := &pb.Foo{}
           if err := ptypes.UnmarshalAny(any, foo); err != nil {
             ...
           }

      The pack methods provided by protobuf library will by default use

      'type.googleapis.com/full.type.name' as the type URL and the unpack

      methods only use the fully qualified type name after the last '/'

      in the type URL, for example "foo.bar.com/modules/y.z" will yield type

      name "y.z".



      JSON

      ====

      The JSON representation of an `Any` value uses the regular

      representation of the deserialized, embedded message, with an

      additional field `@type` which contains the type URL. Example:

          package google.profile;
          message Person {
            string first_name = 1;
            string last_name = 2;
          }

          {
            "@type": "type.googleapis.com/google.profile.Person",
            "firstName": <string>,
            "lastName": <string>
          }

      If the embedded message type is well-known and has a custom JSON

      representation, that representation will be embedded adding a field

      `value` which holds the custom JSON in addition to the `@type`

      field. Example (for message [google.protobuf.Duration][]):

          {
            "@type": "type.googleapis.com/google.protobuf.Duration",
            "value": "1.212s"
          }
  grpc.gateway.runtime.Error:
    type: object
    properties:
      error:
        type: string
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          properties:
            type_url:
              type: string
              description: >-
                A URL/resource name that uniquely identifies the type of the
                serialized

                protocol buffer message. This string must contain at least

                one "/" character. The last segment of the URL's path must
                represent

                the fully qualified name of the type (as in

                `path/google.protobuf.Duration`). The name should be in a
                canonical form

                (e.g., leading "." is not accepted).


                In practice, teams usually precompile into the binary all types
                that they

                expect it to use in the context of Any. However, for URLs which
                use the

                scheme `http`, `https`, or no scheme, one can optionally set up
                a type

                server that maps type URLs to message definitions as follows:


                * If no scheme is provided, `https` is assumed.

                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the
                official

                protobuf release, and it is not used for type URLs beginning
                with

                type.googleapis.com.


                Schemes other than `http`, `https` (or the empty scheme) might
                be

                used with implementation specific semantics.
            value:
              type: string
              format: byte
              description: >-
                Must be a valid serialized protocol buffer of the above
                specified type.
          description: >-
            `Any` contains an arbitrary serialized protocol buffer message along
            with a

            URL that describes the type of the serialized message.


            Protobuf library provides support to pack/unpack Any values in the
            form

            of utility functions or additional generated methods of the Any
            type.


            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use

            'type.googleapis.com/full.type.name' as the type URL and the unpack

            methods only use the fully qualified type name after the last '/'

            in the type URL, for example "foo.bar.com/modules/y.z" will yield
            type

            name "y.z".



            JSON

            ====

            The JSON representation of an `Any` value uses the regular

            representation of the deserialized, embedded message, with an

            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON

            representation, that representation will be embedded adding a field

            `value` which holds the custom JSON in addition to the `@type`

            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
  injective.peggy.v1beta1.BridgeValidator:
    type: object
    properties:
      power:
        type: string
        format: uint64
      ethereum_address:
        type: string
    title: BridgeValidator represents a validator's ETH address and its power
  injective.peggy.v1beta1.ERC20Token:
    type: object
    properties:
      amount:
        type: string
      contract:
        type: string
    title: |-
      ERC20Token unique identifier for an Ethereum ERC20 token.
      CONTRACT:
      The contract address on ETH of the token (note: developers should look up
      the token symbol using the address on ETH to display for UI)
  injective.peggy.v1beta1.MsgConfirmBatch:
    type: object
    properties:
      nonce:
        type: string
        format: uint64
      token_contract:
        type: string
      eth_signer:
        type: string
      validator:
        type: string
      signature:
        type: string
    title: >-
      MsgConfirmBatch

      When validators observe a MsgRequestBatch they form a batch by ordering

      transactions currently in the txqueue in order of highest to lowest fee,

      cutting off when the batch either reaches a hardcoded maximum size (to be

      decided, probably around 100) or when transactions stop being profitable

      (TODO determine this without nondeterminism) This message includes the
      batch

      as well as an Ethereum signature over this batch by the validator

      -------------
  injective.peggy.v1beta1.MsgValsetConfirm:
    type: object
    properties:
      nonce:
        type: string
        format: uint64
      validator:
        type: string
      eth_address:
        type: string
      signature:
        type: string
    description: >-
      MsgValsetConfirm

      this is the message sent by the validators when they wish to submit their

      signatures over the validator set at a given block height. A validator
      must

      first call MsgSetEthAddress to set their Ethereum address to be used for

      signing. Then someone (anyone) must make a ValsetRequest the request is

      essentially a messaging mechanism to determine which block all validators

      should submit signatures over. Finally validators sign the validator set,

      powers, and Ethereum addresses of the entire validator set at the height
      of a

      ValsetRequest and submit that signature with this message.


      If a sufficient number of validators (66% of voting power) (A) have set

      Ethereum addresses and (B) submit ValsetConfirm messages with their

      signatures it is then possible for anyone to view these signatures in the

      chain store and submit them to Ethereum to update the validator set

      -------------
  injective.peggy.v1beta1.OutgoingTransferTx:
    type: object
    properties:
      id:
        type: string
        format: uint64
      sender:
        type: string
      dest_address:
        type: string
      erc20_token:
        type: object
        properties:
          amount:
            type: string
          contract:
            type: string
        title: >-
          ERC20Token unique identifier for an Ethereum ERC20 token.

          CONTRACT:

          The contract address on ETH of the token (note: developers should look
          up

          the token symbol using the address on ETH to display for UI)
      erc20_fee:
        type: object
        properties:
          amount:
            type: string
          contract:
            type: string
        title: >-
          ERC20Token unique identifier for an Ethereum ERC20 token.

          CONTRACT:

          The contract address on ETH of the token (note: developers should look
          up

          the token symbol using the address on ETH to display for UI)
    title: OutgoingTransferTx represents an individual send from Peggy to ETH
  injective.peggy.v1beta1.OutgoingTx:
    type: object
    properties:
      sender:
        type: string
      dest_addr:
        type: string
      amount:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      bridge_fee:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
    title: |-
      OutgoingTx is a withdrawal on the bridged contract
      TODO: can this type be replaced by outgoing transfer tx
  injective.peggy.v1beta1.OutgoingTxBatch:
    type: object
    properties:
      batch_nonce:
        type: string
        format: uint64
      transactions:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              format: uint64
            sender:
              type: string
            dest_address:
              type: string
            erc20_token:
              type: object
              properties:
                amount:
                  type: string
                contract:
                  type: string
              title: >-
                ERC20Token unique identifier for an Ethereum ERC20 token.

                CONTRACT:

                The contract address on ETH of the token (note: developers
                should look up

                the token symbol using the address on ETH to display for UI)
            erc20_fee:
              type: object
              properties:
                amount:
                  type: string
                contract:
                  type: string
              title: >-
                ERC20Token unique identifier for an Ethereum ERC20 token.

                CONTRACT:

                The contract address on ETH of the token (note: developers
                should look up

                the token symbol using the address on ETH to display for UI)
          title: OutgoingTransferTx represents an individual send from Peggy to ETH
      token_contract:
        type: string
    title: OutgoingTxBatch represents a batch of transactions going from Peggy to ETH
  injective.peggy.v1beta1.Params:
    type: object
    properties:
      peggy_id:
        type: string
      contract_source_hash:
        type: string
      start_threshold:
        type: string
        format: uint64
      ethereum_address:
        type: string
      bridge_chain_id:
        type: string
        format: uint64
      inj_contract_address:
        type: string
    description: |-
      Params represent the peggy genesis and store parameters
      PEGGYID: 
      a random 32 byte value to prevent signature reuse
      CONTRACTHASH: 
      the code hash of a known good version of the Peggy contract
      solidity code. It will be used to verify exactly which version of the
      bridge will be deployed.
      STARTTHRESHOLD:
      the percentage of total voting power that must be online
      and participating in Peggy operations before a bridge can start operating
      BRIDGECONTRACTADDRESS: 
      is address of the bridge contract on the Ethereum side
      BRIDGECHAINID:
      the unique identifier of the Ethereum chain
      INJADDRESS:
      is address of INJ erc-20 contract on Ethereum side.
  injective.peggy.v1beta1.QueryBatchConfirmsResponse:
    type: object
    properties:
      confirms:
        type: array
        items:
          type: object
          properties:
            nonce:
              type: string
              format: uint64
            token_contract:
              type: string
            eth_signer:
              type: string
            validator:
              type: string
            signature:
              type: string
          title: >-
            MsgConfirmBatch

            When validators observe a MsgRequestBatch they form a batch by
            ordering

            transactions currently in the txqueue in order of highest to lowest
            fee,

            cutting off when the batch either reaches a hardcoded maximum size
            (to be

            decided, probably around 100) or when transactions stop being
            profitable

            (TODO determine this without nondeterminism) This message includes
            the batch

            as well as an Ethereum signature over this batch by the validator

            -------------
  injective.peggy.v1beta1.QueryBatchRequestByNonceResponse:
    type: object
    properties:
      batch:
        type: object
        properties:
          batch_nonce:
            type: string
            format: uint64
          transactions:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  format: uint64
                sender:
                  type: string
                dest_address:
                  type: string
                erc20_token:
                  type: object
                  properties:
                    amount:
                      type: string
                    contract:
                      type: string
                  title: >-
                    ERC20Token unique identifier for an Ethereum ERC20 token.

                    CONTRACT:

                    The contract address on ETH of the token (note: developers
                    should look up

                    the token symbol using the address on ETH to display for UI)
                erc20_fee:
                  type: object
                  properties:
                    amount:
                      type: string
                    contract:
                      type: string
                  title: >-
                    ERC20Token unique identifier for an Ethereum ERC20 token.

                    CONTRACT:

                    The contract address on ETH of the token (note: developers
                    should look up

                    the token symbol using the address on ETH to display for UI)
              title: >-
                OutgoingTransferTx represents an individual send from Peggy to
                ETH
          token_contract:
            type: string
        title: >-
          OutgoingTxBatch represents a batch of transactions going from Peggy to
          ETH
  injective.peggy.v1beta1.QueryCurrentValsetResponse:
    type: object
    properties:
      valset:
        type: object
        properties:
          nonce:
            type: string
            format: uint64
          members:
            type: array
            items:
              type: object
              properties:
                power:
                  type: string
                  format: uint64
                ethereum_address:
                  type: string
              title: >-
                BridgeValidator represents a validator's ETH address and its
                power
        title: >-
          Valset is the Ethereum Bridge Multsig Set, each peggy validator also

          maintains an ETH key to sign messages, these are used to check
          signatures on

          ETH because of the significant gas savings
  injective.peggy.v1beta1.QueryLastEventNonceByAddrResponse:
    type: object
    properties:
      event_nonce:
        type: string
        format: uint64
  injective.peggy.v1beta1.QueryLastPendingBatchRequestByAddrResponse:
    type: object
    properties:
      batch:
        type: object
        properties:
          batch_nonce:
            type: string
            format: uint64
          transactions:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  format: uint64
                sender:
                  type: string
                dest_address:
                  type: string
                erc20_token:
                  type: object
                  properties:
                    amount:
                      type: string
                    contract:
                      type: string
                  title: >-
                    ERC20Token unique identifier for an Ethereum ERC20 token.

                    CONTRACT:

                    The contract address on ETH of the token (note: developers
                    should look up

                    the token symbol using the address on ETH to display for UI)
                erc20_fee:
                  type: object
                  properties:
                    amount:
                      type: string
                    contract:
                      type: string
                  title: >-
                    ERC20Token unique identifier for an Ethereum ERC20 token.

                    CONTRACT:

                    The contract address on ETH of the token (note: developers
                    should look up

                    the token symbol using the address on ETH to display for UI)
              title: >-
                OutgoingTransferTx represents an individual send from Peggy to
                ETH
          token_contract:
            type: string
        title: >-
          OutgoingTxBatch represents a batch of transactions going from Peggy to
          ETH
  injective.peggy.v1beta1.QueryLastPendingValsetRequestByAddrResponse:
    type: object
    properties:
      valset:
        type: object
        properties:
          nonce:
            type: string
            format: uint64
          members:
            type: array
            items:
              type: object
              properties:
                power:
                  type: string
                  format: uint64
                ethereum_address:
                  type: string
              title: >-
                BridgeValidator represents a validator's ETH address and its
                power
        title: >-
          Valset is the Ethereum Bridge Multsig Set, each peggy validator also

          maintains an ETH key to sign messages, these are used to check
          signatures on

          ETH because of the significant gas savings
  injective.peggy.v1beta1.QueryLastValsetRequestsResponse:
    type: object
    properties:
      valsets:
        type: array
        items:
          type: object
          properties:
            nonce:
              type: string
              format: uint64
            members:
              type: array
              items:
                type: object
                properties:
                  power:
                    type: string
                    format: uint64
                  ethereum_address:
                    type: string
                title: >-
                  BridgeValidator represents a validator's ETH address and its
                  power
          title: >-
            Valset is the Ethereum Bridge Multsig Set, each peggy validator also

            maintains an ETH key to sign messages, these are used to check
            signatures on

            ETH because of the significant gas savings
  injective.peggy.v1beta1.QueryOutgoingTxBatchesResponse:
    type: object
    properties:
      batches:
        type: array
        items:
          type: object
          properties:
            batch_nonce:
              type: string
              format: uint64
            transactions:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    format: uint64
                  sender:
                    type: string
                  dest_address:
                    type: string
                  erc20_token:
                    type: object
                    properties:
                      amount:
                        type: string
                      contract:
                        type: string
                    title: >-
                      ERC20Token unique identifier for an Ethereum ERC20 token.

                      CONTRACT:

                      The contract address on ETH of the token (note: developers
                      should look up

                      the token symbol using the address on ETH to display for
                      UI)
                  erc20_fee:
                    type: object
                    properties:
                      amount:
                        type: string
                      contract:
                        type: string
                    title: >-
                      ERC20Token unique identifier for an Ethereum ERC20 token.

                      CONTRACT:

                      The contract address on ETH of the token (note: developers
                      should look up

                      the token symbol using the address on ETH to display for
                      UI)
                title: >-
                  OutgoingTransferTx represents an individual send from Peggy to
                  ETH
            token_contract:
              type: string
          title: >-
            OutgoingTxBatch represents a batch of transactions going from Peggy
            to ETH
  injective.peggy.v1beta1.QueryParamsResponse:
    type: object
    properties:
      params:
        type: object
        properties:
          peggy_id:
            type: string
          contract_source_hash:
            type: string
          start_threshold:
            type: string
            format: uint64
          ethereum_address:
            type: string
          bridge_chain_id:
            type: string
            format: uint64
          inj_contract_address:
            type: string
        description: >-
          Params represent the peggy genesis and store parameters

          PEGGYID: 

          a random 32 byte value to prevent signature reuse

          CONTRACTHASH: 

          the code hash of a known good version of the Peggy contract

          solidity code. It will be used to verify exactly which version of the

          bridge will be deployed.

          STARTTHRESHOLD:

          the percentage of total voting power that must be online

          and participating in Peggy operations before a bridge can start
          operating

          BRIDGECONTRACTADDRESS: 

          is address of the bridge contract on the Ethereum side

          BRIDGECHAINID:

          the unique identifier of the Ethereum chain

          INJADDRESS:

          is address of INJ erc-20 contract on Ethereum side.
  injective.peggy.v1beta1.QueryUnbatchedTxPoolByAddrResponse:
    type: object
    properties:
      outgoingTxs:
        type: array
        items:
          type: object
          properties:
            sender:
              type: string
            dest_addr:
              type: string
            amount:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            bridge_fee:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
          title: |-
            OutgoingTx is a withdrawal on the bridged contract
            TODO: can this type be replaced by outgoing transfer tx
  injective.peggy.v1beta1.QueryValsetConfirmResponse:
    type: object
    properties:
      confirm:
        type: object
        properties:
          nonce:
            type: string
            format: uint64
          validator:
            type: string
          eth_address:
            type: string
          signature:
            type: string
        description: >-
          MsgValsetConfirm

          this is the message sent by the validators when they wish to submit
          their

          signatures over the validator set at a given block height. A validator
          must

          first call MsgSetEthAddress to set their Ethereum address to be used
          for

          signing. Then someone (anyone) must make a ValsetRequest the request
          is

          essentially a messaging mechanism to determine which block all
          validators

          should submit signatures over. Finally validators sign the validator
          set,

          powers, and Ethereum addresses of the entire validator set at the
          height of a

          ValsetRequest and submit that signature with this message.


          If a sufficient number of validators (66% of voting power) (A) have
          set

          Ethereum addresses and (B) submit ValsetConfirm messages with their

          signatures it is then possible for anyone to view these signatures in
          the

          chain store and submit them to Ethereum to update the validator set

          -------------
  injective.peggy.v1beta1.QueryValsetConfirmsByNonceResponse:
    type: object
    properties:
      confirms:
        type: array
        items:
          type: object
          properties:
            nonce:
              type: string
              format: uint64
            validator:
              type: string
            eth_address:
              type: string
            signature:
              type: string
          description: >-
            MsgValsetConfirm

            this is the message sent by the validators when they wish to submit
            their

            signatures over the validator set at a given block height. A
            validator must

            first call MsgSetEthAddress to set their Ethereum address to be used
            for

            signing. Then someone (anyone) must make a ValsetRequest the request
            is

            essentially a messaging mechanism to determine which block all
            validators

            should submit signatures over. Finally validators sign the validator
            set,

            powers, and Ethereum addresses of the entire validator set at the
            height of a

            ValsetRequest and submit that signature with this message.


            If a sufficient number of validators (66% of voting power) (A) have
            set

            Ethereum addresses and (B) submit ValsetConfirm messages with their

            signatures it is then possible for anyone to view these signatures
            in the

            chain store and submit them to Ethereum to update the validator set

            -------------
  injective.peggy.v1beta1.QueryValsetRequestResponse:
    type: object
    properties:
      valset:
        type: object
        properties:
          nonce:
            type: string
            format: uint64
          members:
            type: array
            items:
              type: object
              properties:
                power:
                  type: string
                  format: uint64
                ethereum_address:
                  type: string
              title: >-
                BridgeValidator represents a validator's ETH address and its
                power
        title: >-
          Valset is the Ethereum Bridge Multsig Set, each peggy validator also

          maintains an ETH key to sign messages, these are used to check
          signatures on

          ETH because of the significant gas savings
  injective.peggy.v1beta1.Valset:
    type: object
    properties:
      nonce:
        type: string
        format: uint64
      members:
        type: array
        items:
          type: object
          properties:
            power:
              type: string
              format: uint64
            ethereum_address:
              type: string
          title: BridgeValidator represents a validator's ETH address and its power
    title: >-
      Valset is the Ethereum Bridge Multsig Set, each peggy validator also

      maintains an ETH key to sign messages, these are used to check signatures
      on

      ETH because of the significant gas savings
  injective.erc20bridge.v1beta1.HubParams:
    type: object
    properties:
      hub_address:
        type: string
  injective.erc20bridge.v1beta1.QueryBridgesResponse:
    type: object
    properties:
      data:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
              title: bridge name
            erc20_address:
              type: string
              title: address of ERC20 contract token
            cosmos_denom:
              type: string
              title: cosmos-native denominator to mapped to ERC20
            enabled:
              type: boolean
              title: shows token mapping bridge enable status
          description: TokenMapping defines a mapping for cosmos denom and erc20 address.
    description: |-
      QueryBridgesResponse is the response type for the Query/Storage RPC
      method.
  injective.erc20bridge.v1beta1.QueryHubParamsResponse:
    type: object
    properties:
      data:
        type: object
        properties:
          hub_address:
            type: string
    description: |-
      QueryHubParamsResponse is the response type for the Query/Storage RPC
      method.
  injective.erc20bridge.v1beta1.TokenMapping:
    type: object
    properties:
      name:
        type: string
        title: bridge name
      erc20_address:
        type: string
        title: address of ERC20 contract token
      cosmos_denom:
        type: string
        title: cosmos-native denominator to mapped to ERC20
      enabled:
        type: boolean
        title: shows token mapping bridge enable status
    description: TokenMapping defines a mapping for cosmos denom and erc20 address.
  injective.exchange.v1beta1.BaseCurrencyMarginInfo:
    type: object
    properties:
      margin_hold:
        type: string
      total_deposits:
        type: string
      base_currency:
        type: string
    title: An subaccount's margin info for a given base currency
  injective.exchange.v1beta1.BaseOrder:
    type: object
    properties:
      chain_id:
        type: string
        format: int64
        description: Specify chain ID.
      exchange_address:
        type: string
        description: Exchange v3 contract address.
      maker_address:
        type: string
        description: Address that created the order.
      taker_address:
        type: string
        description: |-
          Address that is allowed to fill the order. If set to 0, any address is
          allowed to fill the order.
      fee_recipient_address:
        type: string
        description: Address that will receive fees when order is filled.
      sender_address:
        type: string
        description: >-
          Address that is allowed to call Exchange contract methods that affect
          this

          order. If set to 0, any address is allowed to call these methods.
      maker_asset_amount:
        type: string
        description: Amount of makerAsset being offered by maker. Must be greater than 0.
      taker_asset_amount:
        type: string
        description: Amount of takerAsset being bid on by maker. Must be greater than 0.
      maker_fee:
        type: string
        description: >-
          Amount of ZRX paid to feeRecipient by maker when order is filled. If
          set to

          0, no transfer of ZRX from maker to feeRecipient will be attempted.
      taker_fee:
        type: string
        description: >-
          Amount of ZRX paid to feeRecipient by taker when order is filled. If
          set to

          0, no transfer of ZRX from taker to feeRecipient will be attempted.
      expiration_time_seconds:
        type: string
        description: Timestamp in seconds at which order expires.
      salt:
        type: string
        description: Arbitrary number to facilitate uniqueness of the order's hash.
      maker_asset_data:
        type: string
        description: >-
          ABIv2 encoded data that can be decoded by a specified proxy contract
          when

          transferring makerAsset.
      taker_asset_data:
        type: string
        description: >-
          ABIv2 encoded data that can be decoded by a specified proxy contract
          when

          transferring takerAsset.
      maker_fee_asset_data:
        type: string
        description: >-
          ABIv2 encoded data that can be decoded by a specified proxy contract
          when

          transferring makerFee.
      taker_fee_asset_data:
        type: string
        description: >-
          ABIv2 encoded data that can be decoded by a specified proxy contract
          when

          transferring takerFee.
      signature:
        type: string
        description: Order signature.
    description: A valid signed 0x order based on the schema.
  injective.exchange.v1beta1.DerivativeMarket:
    type: object
    properties:
      ticker:
        type: string
        description: Ticker for the derivative contract.
      oracle:
        type: string
        title: Address of the oracle for the derivative contract
      base_currency:
        type: string
        title: Address of the base currency for the derivative contract
      nonce:
        type: string
        title: Random number to faciltate uniqueness of the derivative market ID
      market_id:
        type: string
        description: Unique market ID.
      enabled:
        type: boolean
        description: 'If false, then the pair is suspended and trades cannot be made.'
      exchange_address:
        type: string
        title: exchange address
      price_factor:
        type: string
        title: price factor
      index_price:
        type: string
        title: index price
      initial_margin_ratio:
        type: string
        title: InitialMarginRatioPermyriad
      maintenance_margin_ratio:
        type: string
        title: MaintenanceMarginRatioPermyriad
      maker_tx_fee:
        type: string
        title: MakerTxFeePermyriad
      taker_tx_fee:
        type: string
        title: TakerTxFeePermyriad
      next_funding_timestamp:
        type: string
        title: NextFundingTimestamp in seconds
      funding_interval:
        type: string
        title: FundingInterval in seconds
      cumulative_funding:
        type: string
        title: Cumulative Funding in seconds
    description: >-
      An object describing a derivative market in the Injective Futures
      Protocol.
  injective.exchange.v1beta1.MarginInfo:
    type: object
    properties:
      margin_hold:
        type: string
      total_deposits:
        type: string
    title: An subaccount's margin info for a given base currency
  injective.exchange.v1beta1.Order:
    type: object
    properties:
      order:
        type: object
        properties:
          chain_id:
            type: string
            format: int64
            description: Specify chain ID.
          exchange_address:
            type: string
            description: Exchange v3 contract address.
          maker_address:
            type: string
            description: Address that created the order.
          taker_address:
            type: string
            description: >-
              Address that is allowed to fill the order. If set to 0, any
              address is

              allowed to fill the order.
          fee_recipient_address:
            type: string
            description: Address that will receive fees when order is filled.
          sender_address:
            type: string
            description: >-
              Address that is allowed to call Exchange contract methods that
              affect this

              order. If set to 0, any address is allowed to call these methods.
          maker_asset_amount:
            type: string
            description: >-
              Amount of makerAsset being offered by maker. Must be greater than
              0.
          taker_asset_amount:
            type: string
            description: >-
              Amount of takerAsset being bid on by maker. Must be greater than
              0.
          maker_fee:
            type: string
            description: >-
              Amount of ZRX paid to feeRecipient by maker when order is filled.
              If set to

              0, no transfer of ZRX from maker to feeRecipient will be
              attempted.
          taker_fee:
            type: string
            description: >-
              Amount of ZRX paid to feeRecipient by taker when order is filled.
              If set to

              0, no transfer of ZRX from taker to feeRecipient will be
              attempted.
          expiration_time_seconds:
            type: string
            description: Timestamp in seconds at which order expires.
          salt:
            type: string
            description: Arbitrary number to facilitate uniqueness of the order's hash.
          maker_asset_data:
            type: string
            description: >-
              ABIv2 encoded data that can be decoded by a specified proxy
              contract when

              transferring makerAsset.
          taker_asset_data:
            type: string
            description: >-
              ABIv2 encoded data that can be decoded by a specified proxy
              contract when

              transferring takerAsset.
          maker_fee_asset_data:
            type: string
            description: >-
              ABIv2 encoded data that can be decoded by a specified proxy
              contract when

              transferring makerFee.
          taker_fee_asset_data:
            type: string
            description: >-
              ABIv2 encoded data that can be decoded by a specified proxy
              contract when

              transferring takerFee.
          signature:
            type: string
            description: Order signature.
        description: A valid signed 0x order based on the schema.
      trade_pair_hash:
        type: string
      filled_amount:
        type: string
      status:
        type: string
        format: int64
      index_price_requirement:
        type: string
      subaccount_i_d:
        type: string
      order_type:
        type: string
        format: uint64
      trigger_price:
        type: string
    description: A valid signed 0x order with Metadata.
  injective.exchange.v1beta1.OrderFilters:
    type: object
    properties:
      contract_price_bound:
        type: string
        title: for derivatives
      market_id:
        type: string
      is_long:
        type: boolean
      not_expired:
        type: boolean
        title: for normal orders
      maker_asset_address:
        type: string
      taker_asset_address:
        type: string
      exchange_address:
        type: string
      sender_address:
        type: string
      maker_asset_data:
        type: string
      taker_asset_data:
        type: string
      maker_asset_amount:
        type: string
      taker_asset_amount:
        type: string
      maker_address:
        type: string
      not_maker_address:
        type: string
      taker_address:
        type: string
      trader_address:
        type: string
      fee_recipient_address:
        type: string
      maker_fee_asset_data:
        type: string
        title: Filters orders with the specified makerFeeAssetData
      taker_fee_asset_data:
        type: string
        title: Filters orders with the specified takerFeeAssetData
      subaccount_nonce:
        type: string
        title: Filters orders with the specified subaccount nonce
      direction:
        type: string
        title: Filters orders to match a direction "long" or "short"
      price_lt_or_eq:
        type: string
        title: >-
          Filter out orders whose price is not less than or equal to the filter
          bound
      price_gt_or_eq:
        type: string
        title: >-
          Filter out orders whose price is not greater than or equal to the
          filter

          bound
      index_price:
        type: string
        title: Filters orders to satisfy the indexPriceMinMarginRequirement
      subaccount_i_d:
        type: string
        title: Filters orders to match the subaccountID
  injective.exchange.v1beta1.OrderQuote:
    type: object
    properties:
      order:
        type: object
        properties:
          chain_id:
            type: string
            format: int64
            description: Specify chain ID.
          exchange_address:
            type: string
            description: Exchange v3 contract address.
          maker_address:
            type: string
            description: Address that created the order.
          taker_address:
            type: string
            description: >-
              Address that is allowed to fill the order. If set to 0, any
              address is

              allowed to fill the order.
          fee_recipient_address:
            type: string
            description: Address that will receive fees when order is filled.
          sender_address:
            type: string
            description: >-
              Address that is allowed to call Exchange contract methods that
              affect this

              order. If set to 0, any address is allowed to call these methods.
          maker_asset_amount:
            type: string
            description: >-
              Amount of makerAsset being offered by maker. Must be greater than
              0.
          taker_asset_amount:
            type: string
            description: >-
              Amount of takerAsset being bid on by maker. Must be greater than
              0.
          maker_fee:
            type: string
            description: >-
              Amount of ZRX paid to feeRecipient by maker when order is filled.
              If set to

              0, no transfer of ZRX from maker to feeRecipient will be
              attempted.
          taker_fee:
            type: string
            description: >-
              Amount of ZRX paid to feeRecipient by taker when order is filled.
              If set to

              0, no transfer of ZRX from taker to feeRecipient will be
              attempted.
          expiration_time_seconds:
            type: string
            description: Timestamp in seconds at which order expires.
          salt:
            type: string
            description: Arbitrary number to facilitate uniqueness of the order's hash.
          maker_asset_data:
            type: string
            description: >-
              ABIv2 encoded data that can be decoded by a specified proxy
              contract when

              transferring makerAsset.
          taker_asset_data:
            type: string
            description: >-
              ABIv2 encoded data that can be decoded by a specified proxy
              contract when

              transferring takerAsset.
          maker_fee_asset_data:
            type: string
            description: >-
              ABIv2 encoded data that can be decoded by a specified proxy
              contract when

              transferring makerFee.
          taker_fee_asset_data:
            type: string
            description: >-
              ABIv2 encoded data that can be decoded by a specified proxy
              contract when

              transferring takerFee.
          signature:
            type: string
            description: Order signature.
        description: A valid signed 0x order based on the schema.
      fillable_amount:
        type: string
    title: An order quote with fillable data
  injective.exchange.v1beta1.OrderQuoteInfo:
    type: object
    properties:
      market_id:
        type: string
      quotes:
        type: array
        items:
          type: object
          properties:
            order:
              type: object
              properties:
                chain_id:
                  type: string
                  format: int64
                  description: Specify chain ID.
                exchange_address:
                  type: string
                  description: Exchange v3 contract address.
                maker_address:
                  type: string
                  description: Address that created the order.
                taker_address:
                  type: string
                  description: >-
                    Address that is allowed to fill the order. If set to 0, any
                    address is

                    allowed to fill the order.
                fee_recipient_address:
                  type: string
                  description: Address that will receive fees when order is filled.
                sender_address:
                  type: string
                  description: >-
                    Address that is allowed to call Exchange contract methods
                    that affect this

                    order. If set to 0, any address is allowed to call these
                    methods.
                maker_asset_amount:
                  type: string
                  description: >-
                    Amount of makerAsset being offered by maker. Must be greater
                    than 0.
                taker_asset_amount:
                  type: string
                  description: >-
                    Amount of takerAsset being bid on by maker. Must be greater
                    than 0.
                maker_fee:
                  type: string
                  description: >-
                    Amount of ZRX paid to feeRecipient by maker when order is
                    filled. If set to

                    0, no transfer of ZRX from maker to feeRecipient will be
                    attempted.
                taker_fee:
                  type: string
                  description: >-
                    Amount of ZRX paid to feeRecipient by taker when order is
                    filled. If set to

                    0, no transfer of ZRX from taker to feeRecipient will be
                    attempted.
                expiration_time_seconds:
                  type: string
                  description: Timestamp in seconds at which order expires.
                salt:
                  type: string
                  description: >-
                    Arbitrary number to facilitate uniqueness of the order's
                    hash.
                maker_asset_data:
                  type: string
                  description: >-
                    ABIv2 encoded data that can be decoded by a specified proxy
                    contract when

                    transferring makerAsset.
                taker_asset_data:
                  type: string
                  description: >-
                    ABIv2 encoded data that can be decoded by a specified proxy
                    contract when

                    transferring takerAsset.
                maker_fee_asset_data:
                  type: string
                  description: >-
                    ABIv2 encoded data that can be decoded by a specified proxy
                    contract when

                    transferring makerFee.
                taker_fee_asset_data:
                  type: string
                  description: >-
                    ABIv2 encoded data that can be decoded by a specified proxy
                    contract when

                    transferring takerFee.
                signature:
                  type: string
                  description: Order signature.
              description: A valid signed 0x order based on the schema.
            fillable_amount:
              type: string
          title: An order quote with fillable data
    title: An orderquote info for a given market
  injective.exchange.v1beta1.Params:
    type: object
    properties:
      exchange_address:
        type: string
      coordinator_address:
        type: string
      default_spot_maker_fee:
        type: string
        title: >-
          default_spot_maker_fee defines the default exchange trade fee for
          makers on a spot market
      default_spot_taker_fee:
        type: string
        title: >-
          default_spot_taker_fee defines the default exchange trade fee for
          takers on a new spot market
      default_derivative_maker_fee:
        type: string
        title: >-
          default_derivative_maker_fee defines the default exchange trade fee
          for makers on a new derivative market
      default_derivative_taker_fee:
        type: string
        title: >-
          default_derivative_taker_fee defines the default exchange trade fee
          for takers on a new derivative market
      default_initial_margin_ratio:
        type: string
        title: >-
          default_initial_margin_ratio defines the default initial margin ratio
          on a new derivative market
      default_maintenance_margin_ratio:
        type: string
        title: >-
          default_maintenance_margin_ratio defines the default maintenance
          margin ratio on a new derivative market
      default_funding_interval:
        type: integer
        format: int64
        title: >-
          default_funding_interval defines the default funding interval on a
          derivative market
      funding_multiple:
        type: integer
        format: int64
        title: >-
          funding_multiple defines the timestamp multiple that the funding
          timestamp should be a multiple of
  injective.exchange.v1beta1.PositionInfo:
    type: object
    properties:
      isLong:
        type: boolean
      bankruptcy_price:
        type: string
      quantity:
        type: string
      positionHoldQuantity:
        type: string
      cumulativeFundingEntry:
        type: string
      margin:
        type: string
      entryPrice:
        type: string
  injective.exchange.v1beta1.PriceLevel:
    type: object
    properties:
      p:
        type: string
        title: price
      q:
        type: string
        title: quantity
    title: An orderbook price level
  injective.exchange.v1beta1.QueryDerivativeMarketResponse:
    type: object
    properties:
      market:
        type: object
        properties:
          ticker:
            type: string
            description: Ticker for the derivative contract.
          oracle:
            type: string
            title: Address of the oracle for the derivative contract
          base_currency:
            type: string
            title: Address of the base currency for the derivative contract
          nonce:
            type: string
            title: Random number to faciltate uniqueness of the derivative market ID
          market_id:
            type: string
            description: Unique market ID.
          enabled:
            type: boolean
            description: 'If false, then the pair is suspended and trades cannot be made.'
          exchange_address:
            type: string
            title: exchange address
          price_factor:
            type: string
            title: price factor
          index_price:
            type: string
            title: index price
          initial_margin_ratio:
            type: string
            title: InitialMarginRatioPermyriad
          maintenance_margin_ratio:
            type: string
            title: MaintenanceMarginRatioPermyriad
          maker_tx_fee:
            type: string
            title: MakerTxFeePermyriad
          taker_tx_fee:
            type: string
            title: TakerTxFeePermyriad
          next_funding_timestamp:
            type: string
            title: NextFundingTimestamp in seconds
          funding_interval:
            type: string
            title: FundingInterval in seconds
          cumulative_funding:
            type: string
            title: Cumulative Funding in seconds
        description: >-
          An object describing a derivative market in the Injective Futures
          Protocol.
    description: |-
      QueryDerivativeMarketResponse defines the request type for
      Query/DerivativeMarket RPC method.
  injective.exchange.v1beta1.QueryDerivativeMarketsResponse:
    type: object
    properties:
      markets:
        type: array
        items:
          type: object
          properties:
            ticker:
              type: string
              description: Ticker for the derivative contract.
            oracle:
              type: string
              title: Address of the oracle for the derivative contract
            base_currency:
              type: string
              title: Address of the base currency for the derivative contract
            nonce:
              type: string
              title: >-
                Random number to faciltate uniqueness of the derivative market
                ID
            market_id:
              type: string
              description: Unique market ID.
            enabled:
              type: boolean
              description: 'If false, then the pair is suspended and trades cannot be made.'
            exchange_address:
              type: string
              title: exchange address
            price_factor:
              type: string
              title: price factor
            index_price:
              type: string
              title: index price
            initial_margin_ratio:
              type: string
              title: InitialMarginRatioPermyriad
            maintenance_margin_ratio:
              type: string
              title: MaintenanceMarginRatioPermyriad
            maker_tx_fee:
              type: string
              title: MakerTxFeePermyriad
            taker_tx_fee:
              type: string
              title: TakerTxFeePermyriad
            next_funding_timestamp:
              type: string
              title: NextFundingTimestamp in seconds
            funding_interval:
              type: string
              title: FundingInterval in seconds
            cumulative_funding:
              type: string
              title: Cumulative Funding in seconds
          description: >-
            An object describing a derivative market in the Injective Futures
            Protocol.
        title: Array of found derivative markets
    description: |-
      QueryDerivativeMarketsResponse defines the response type for
      Query/DerivativeMarkets RPC method.
  injective.exchange.v1beta1.QueryDerivativeOrderbookDepthAvgWeightedPriceResponse:
    type: object
    properties:
      avg_weighted_price:
        type: string
        title: The average weighted price for the given amount of market depth
    description: >-
      QueryDerivativeOrderbookDepthAvgWeightedPriceResponse defines the response
      type for

      Query/derivativeOrderbookDepthAvgWeightedPrice RPC method.
  injective.exchange.v1beta1.QueryDerivativeOrderbookDepthBatchAvgWeightedPriceResponse:
    type: object
    properties:
      avg_weighted_price:
        type: array
        items:
          type: string
        title: The average weighted price for the given amount of market depth
    description: >-
      QueryDerivativeOrderbookDepthBatchAvgWeightedPriceResponse defines the
      response type for

      Query/derivativeOrdersBatchQuote RPC method.
  injective.exchange.v1beta1.QueryDerivativeOrderbookResponse:
    type: object
    properties:
      shorts:
        type: array
        items:
          type: object
          properties:
            p:
              type: string
              title: price
            q:
              type: string
              title: quantity
          title: An orderbook price level
        title: The shorts price levels
      longs:
        type: array
        items:
          type: object
          properties:
            p:
              type: string
              title: price
            q:
              type: string
              title: quantity
          title: An orderbook price level
        title: The longs price levels
    description: |-
      QueryDerivativeOrderbookResponse defines the response type for
      Query/derivativeOrderbook RPC method.
  injective.exchange.v1beta1.QueryDerivativeOrdersQuoteBatchResponse:
    type: object
    properties:
      order_quotes:
        type: array
        items:
          type: object
          properties:
            market_id:
              type: string
            quotes:
              type: array
              items:
                type: object
                properties:
                  order:
                    type: object
                    properties:
                      chain_id:
                        type: string
                        format: int64
                        description: Specify chain ID.
                      exchange_address:
                        type: string
                        description: Exchange v3 contract address.
                      maker_address:
                        type: string
                        description: Address that created the order.
                      taker_address:
                        type: string
                        description: >-
                          Address that is allowed to fill the order. If set to
                          0, any address is

                          allowed to fill the order.
                      fee_recipient_address:
                        type: string
                        description: Address that will receive fees when order is filled.
                      sender_address:
                        type: string
                        description: >-
                          Address that is allowed to call Exchange contract
                          methods that affect this

                          order. If set to 0, any address is allowed to call
                          these methods.
                      maker_asset_amount:
                        type: string
                        description: >-
                          Amount of makerAsset being offered by maker. Must be
                          greater than 0.
                      taker_asset_amount:
                        type: string
                        description: >-
                          Amount of takerAsset being bid on by maker. Must be
                          greater than 0.
                      maker_fee:
                        type: string
                        description: >-
                          Amount of ZRX paid to feeRecipient by maker when order
                          is filled. If set to

                          0, no transfer of ZRX from maker to feeRecipient will
                          be attempted.
                      taker_fee:
                        type: string
                        description: >-
                          Amount of ZRX paid to feeRecipient by taker when order
                          is filled. If set to

                          0, no transfer of ZRX from taker to feeRecipient will
                          be attempted.
                      expiration_time_seconds:
                        type: string
                        description: Timestamp in seconds at which order expires.
                      salt:
                        type: string
                        description: >-
                          Arbitrary number to facilitate uniqueness of the
                          order's hash.
                      maker_asset_data:
                        type: string
                        description: >-
                          ABIv2 encoded data that can be decoded by a specified
                          proxy contract when

                          transferring makerAsset.
                      taker_asset_data:
                        type: string
                        description: >-
                          ABIv2 encoded data that can be decoded by a specified
                          proxy contract when

                          transferring takerAsset.
                      maker_fee_asset_data:
                        type: string
                        description: >-
                          ABIv2 encoded data that can be decoded by a specified
                          proxy contract when

                          transferring makerFee.
                      taker_fee_asset_data:
                        type: string
                        description: >-
                          ABIv2 encoded data that can be decoded by a specified
                          proxy contract when

                          transferring takerFee.
                      signature:
                        type: string
                        description: Order signature.
                    description: A valid signed 0x order based on the schema.
                  fillable_amount:
                    type: string
                title: An order quote with fillable data
          title: An orderquote info for a given market
        title: The derivative orders quote batch for the taker
    description: |-
      QueryDerivativeOrdersQuoteBatchResponse defines the response type for
      Query/derivativeOrdersBatchQuote RPC method.
  injective.exchange.v1beta1.QueryDerivativeOrdersQuoteRequest:
    type: object
    properties:
      exchange_address:
        type: string
        title: The exchange address for the orders
      market_id:
        type: string
        title: The desired marketID of the derivative orders to fill
      quantity:
        type: string
        title: The desired quantity of derivative orders to fill
      isLong:
        type: boolean
        description: >-
          True if the desired direction of the derivative orders quotes you want
          is long.
      maker_address:
        type: string
        title: >-
          Optional maker address of trader requesting the quote (to filter out
          the

          trader's own orders)
      filter_price_bound:
        type: string
        title: >-
          Optional price bound. If isLong, filters out orders whose price is
          less than the price bound

          If !isLong, filters out orders whose price is greater than the price
          bound
    description: |-
      QueryDerivativeOrdersQuoteRequest defines the request type for
      Query/derivativeOrdersQuote RPC method.
  injective.exchange.v1beta1.QueryDerivativeOrdersQuoteResponse:
    type: object
    properties:
      quotes:
        type: array
        items:
          type: object
          properties:
            order:
              type: object
              properties:
                chain_id:
                  type: string
                  format: int64
                  description: Specify chain ID.
                exchange_address:
                  type: string
                  description: Exchange v3 contract address.
                maker_address:
                  type: string
                  description: Address that created the order.
                taker_address:
                  type: string
                  description: >-
                    Address that is allowed to fill the order. If set to 0, any
                    address is

                    allowed to fill the order.
                fee_recipient_address:
                  type: string
                  description: Address that will receive fees when order is filled.
                sender_address:
                  type: string
                  description: >-
                    Address that is allowed to call Exchange contract methods
                    that affect this

                    order. If set to 0, any address is allowed to call these
                    methods.
                maker_asset_amount:
                  type: string
                  description: >-
                    Amount of makerAsset being offered by maker. Must be greater
                    than 0.
                taker_asset_amount:
                  type: string
                  description: >-
                    Amount of takerAsset being bid on by maker. Must be greater
                    than 0.
                maker_fee:
                  type: string
                  description: >-
                    Amount of ZRX paid to feeRecipient by maker when order is
                    filled. If set to

                    0, no transfer of ZRX from maker to feeRecipient will be
                    attempted.
                taker_fee:
                  type: string
                  description: >-
                    Amount of ZRX paid to feeRecipient by taker when order is
                    filled. If set to

                    0, no transfer of ZRX from taker to feeRecipient will be
                    attempted.
                expiration_time_seconds:
                  type: string
                  description: Timestamp in seconds at which order expires.
                salt:
                  type: string
                  description: >-
                    Arbitrary number to facilitate uniqueness of the order's
                    hash.
                maker_asset_data:
                  type: string
                  description: >-
                    ABIv2 encoded data that can be decoded by a specified proxy
                    contract when

                    transferring makerAsset.
                taker_asset_data:
                  type: string
                  description: >-
                    ABIv2 encoded data that can be decoded by a specified proxy
                    contract when

                    transferring takerAsset.
                maker_fee_asset_data:
                  type: string
                  description: >-
                    ABIv2 encoded data that can be decoded by a specified proxy
                    contract when

                    transferring makerFee.
                taker_fee_asset_data:
                  type: string
                  description: >-
                    ABIv2 encoded data that can be decoded by a specified proxy
                    contract when

                    transferring takerFee.
                signature:
                  type: string
                  description: Order signature.
              description: A valid signed 0x order based on the schema.
            fillable_amount:
              type: string
          title: An order quote with fillable data
        title: The derivative orders quotes for the taker
    description: |-
      QueryDerivativeOrdersQuoteResponse defines the response type for
      Query/derivativeOrdersQuote RPC method.
  injective.exchange.v1beta1.QueryDerivativeOrdersResponse:
    type: object
    properties:
      records:
        type: array
        items:
          type: object
          properties:
            order:
              type: object
              properties:
                chain_id:
                  type: string
                  format: int64
                  description: Specify chain ID.
                exchange_address:
                  type: string
                  description: Exchange v3 contract address.
                maker_address:
                  type: string
                  description: Address that created the order.
                taker_address:
                  type: string
                  description: >-
                    Address that is allowed to fill the order. If set to 0, any
                    address is

                    allowed to fill the order.
                fee_recipient_address:
                  type: string
                  description: Address that will receive fees when order is filled.
                sender_address:
                  type: string
                  description: >-
                    Address that is allowed to call Exchange contract methods
                    that affect this

                    order. If set to 0, any address is allowed to call these
                    methods.
                maker_asset_amount:
                  type: string
                  description: >-
                    Amount of makerAsset being offered by maker. Must be greater
                    than 0.
                taker_asset_amount:
                  type: string
                  description: >-
                    Amount of takerAsset being bid on by maker. Must be greater
                    than 0.
                maker_fee:
                  type: string
                  description: >-
                    Amount of ZRX paid to feeRecipient by maker when order is
                    filled. If set to

                    0, no transfer of ZRX from maker to feeRecipient will be
                    attempted.
                taker_fee:
                  type: string
                  description: >-
                    Amount of ZRX paid to feeRecipient by taker when order is
                    filled. If set to

                    0, no transfer of ZRX from taker to feeRecipient will be
                    attempted.
                expiration_time_seconds:
                  type: string
                  description: Timestamp in seconds at which order expires.
                salt:
                  type: string
                  description: >-
                    Arbitrary number to facilitate uniqueness of the order's
                    hash.
                maker_asset_data:
                  type: string
                  description: >-
                    ABIv2 encoded data that can be decoded by a specified proxy
                    contract when

                    transferring makerAsset.
                taker_asset_data:
                  type: string
                  description: >-
                    ABIv2 encoded data that can be decoded by a specified proxy
                    contract when

                    transferring takerAsset.
                maker_fee_asset_data:
                  type: string
                  description: >-
                    ABIv2 encoded data that can be decoded by a specified proxy
                    contract when

                    transferring makerFee.
                taker_fee_asset_data:
                  type: string
                  description: >-
                    ABIv2 encoded data that can be decoded by a specified proxy
                    contract when

                    transferring takerFee.
                signature:
                  type: string
                  description: Order signature.
              description: A valid signed 0x order based on the schema.
            trade_pair_hash:
              type: string
            filled_amount:
              type: string
            status:
              type: string
              format: int64
            index_price_requirement:
              type: string
            subaccount_i_d:
              type: string
            order_type:
              type: string
              format: uint64
            trigger_price:
              type: string
          description: A valid signed 0x order with Metadata.
        description: An array of matched orders.
    description: |-
      QueryDerivativeOrdersResponse defines the response type for
      Query/DerivativeOrders RPC method.
  injective.exchange.v1beta1.QueryExchangeParamsResponse:
    type: object
    properties:
      params:
        type: object
        properties:
          exchange_address:
            type: string
          coordinator_address:
            type: string
          default_spot_maker_fee:
            type: string
            title: >-
              default_spot_maker_fee defines the default exchange trade fee for
              makers on a spot market
          default_spot_taker_fee:
            type: string
            title: >-
              default_spot_taker_fee defines the default exchange trade fee for
              takers on a new spot market
          default_derivative_maker_fee:
            type: string
            title: >-
              default_derivative_maker_fee defines the default exchange trade
              fee for makers on a new derivative market
          default_derivative_taker_fee:
            type: string
            title: >-
              default_derivative_taker_fee defines the default exchange trade
              fee for takers on a new derivative market
          default_initial_margin_ratio:
            type: string
            title: >-
              default_initial_margin_ratio defines the default initial margin
              ratio on a new derivative market
          default_maintenance_margin_ratio:
            type: string
            title: >-
              default_maintenance_margin_ratio defines the default maintenance
              margin ratio on a new derivative market
          default_funding_interval:
            type: integer
            format: int64
            title: >-
              default_funding_interval defines the default funding interval on a
              derivative market
          funding_multiple:
            type: integer
            format: int64
            title: >-
              funding_multiple defines the timestamp multiple that the funding
              timestamp should be a multiple of
    description: >-
      QueryExchangeParamsRequest is the response type for the
      Query/ExchangeParams RPC method.
  injective.exchange.v1beta1.QueryMarginInfoResponse:
    type: object
    properties:
      margin_info:
        type: object
        properties:
          margin_hold:
            type: string
          total_deposits:
            type: string
        title: An subaccount's margin info for a given base currency
    description: |-
      QueryMarginInfoResponse defines the response type for
      Query/marginInfo RPC method.
  injective.exchange.v1beta1.QueryPositionInfoResponse:
    type: object
    properties:
      position_info:
        type: object
        properties:
          isLong:
            type: boolean
          bankruptcy_price:
            type: string
          quantity:
            type: string
          positionHoldQuantity:
            type: string
          cumulativeFundingEntry:
            type: string
          margin:
            type: string
          entryPrice:
            type: string
    description: |-
      QueryMarginInfoResponse defines the response type for
      Query/marginInfo RPC method.
  injective.exchange.v1beta1.QuerySpotMarketResponse:
    type: object
    properties:
      market:
        type: object
        properties:
          ticker:
            type: string
            description: >-
              A name of the pair in format AAA/BBB, where AAA is base asset, BBB
              is quote asset.
          base_asset:
            type: string
            description: Address of the base asset.
          quote_asset:
            type: string
            description: Address of the quote asset.
          maker_tx_fee:
            type: string
            title: MakerTxFeePermyriad
          taker_tx_fee:
            type: string
            title: TakerTxFeePermyriad
          market_id:
            type: string
            description: Unique market ID.
          enabled:
            type: boolean
            description: 'If false, then the market is suspended and trades cannot be made.'
          exchange_address:
            type: string
            title: exchange address
        description: An object describing trade pair of two assets.
    description: |-
      QuerySpotMarketResponse defines the request type for
      Query/SpotMarket RPC method.
  injective.exchange.v1beta1.QuerySpotMarketsResponse:
    type: object
    properties:
      records:
        type: array
        items:
          type: object
          properties:
            ticker:
              type: string
              description: >-
                A name of the pair in format AAA/BBB, where AAA is base asset,
                BBB is quote asset.
            base_asset:
              type: string
              description: Address of the base asset.
            quote_asset:
              type: string
              description: Address of the quote asset.
            maker_tx_fee:
              type: string
              title: MakerTxFeePermyriad
            taker_tx_fee:
              type: string
              title: TakerTxFeePermyriad
            market_id:
              type: string
              description: Unique market ID.
            enabled:
              type: boolean
              description: >-
                If false, then the market is suspended and trades cannot be
                made.
            exchange_address:
              type: string
              title: exchange address
          description: An object describing trade pair of two assets.
        title: Array of found trade pairs
    description: |-
      QuerySpotMarketsResponse defines the response type for
      Query/SpotMarkets RPC method.
  injective.exchange.v1beta1.QuerySpotOrdersResponse:
    type: object
    properties:
      records:
        type: array
        items:
          type: object
          properties:
            order:
              type: object
              properties:
                chain_id:
                  type: string
                  format: int64
                  description: Specify chain ID.
                exchange_address:
                  type: string
                  description: Exchange v3 contract address.
                maker_address:
                  type: string
                  description: Address that created the order.
                taker_address:
                  type: string
                  description: >-
                    Address that is allowed to fill the order. If set to 0, any
                    address is

                    allowed to fill the order.
                fee_recipient_address:
                  type: string
                  description: Address that will receive fees when order is filled.
                sender_address:
                  type: string
                  description: >-
                    Address that is allowed to call Exchange contract methods
                    that affect this

                    order. If set to 0, any address is allowed to call these
                    methods.
                maker_asset_amount:
                  type: string
                  description: >-
                    Amount of makerAsset being offered by maker. Must be greater
                    than 0.
                taker_asset_amount:
                  type: string
                  description: >-
                    Amount of takerAsset being bid on by maker. Must be greater
                    than 0.
                maker_fee:
                  type: string
                  description: >-
                    Amount of ZRX paid to feeRecipient by maker when order is
                    filled. If set to

                    0, no transfer of ZRX from maker to feeRecipient will be
                    attempted.
                taker_fee:
                  type: string
                  description: >-
                    Amount of ZRX paid to feeRecipient by taker when order is
                    filled. If set to

                    0, no transfer of ZRX from taker to feeRecipient will be
                    attempted.
                expiration_time_seconds:
                  type: string
                  description: Timestamp in seconds at which order expires.
                salt:
                  type: string
                  description: >-
                    Arbitrary number to facilitate uniqueness of the order's
                    hash.
                maker_asset_data:
                  type: string
                  description: >-
                    ABIv2 encoded data that can be decoded by a specified proxy
                    contract when

                    transferring makerAsset.
                taker_asset_data:
                  type: string
                  description: >-
                    ABIv2 encoded data that can be decoded by a specified proxy
                    contract when

                    transferring takerAsset.
                maker_fee_asset_data:
                  type: string
                  description: >-
                    ABIv2 encoded data that can be decoded by a specified proxy
                    contract when

                    transferring makerFee.
                taker_fee_asset_data:
                  type: string
                  description: >-
                    ABIv2 encoded data that can be decoded by a specified proxy
                    contract when

                    transferring takerFee.
                signature:
                  type: string
                  description: Order signature.
              description: A valid signed 0x order based on the schema.
            trade_pair_hash:
              type: string
            filled_amount:
              type: string
            status:
              type: string
              format: int64
            index_price_requirement:
              type: string
            subaccount_i_d:
              type: string
            order_type:
              type: string
              format: uint64
            trigger_price:
              type: string
          description: A valid signed 0x order with Metadata.
        description: An array of matched orders.
    description: |-
      QuerySpotOrdersResponse defines the request type for
      Query/SpotOrders RPC method.
  injective.exchange.v1beta1.QuerySubaccountMarginHoldResponse:
    type: object
    properties:
      margin_hold:
        type: string
        title: The derivative orders quotes for the taker
    description: |-
      QuerySubaccountMarginHoldResponse defines the response type for
      Query/subaccountMarginHold RPC method.
  injective.exchange.v1beta1.QuerySubaccountMarketDerivativeOrdersBatchResponse:
    type: object
    properties:
      market_records:
        type: object
        additionalProperties:
          type: object
          properties:
            records:
              type: array
              items:
                type: object
                properties:
                  order:
                    type: object
                    properties:
                      chain_id:
                        type: string
                        format: int64
                        description: Specify chain ID.
                      exchange_address:
                        type: string
                        description: Exchange v3 contract address.
                      maker_address:
                        type: string
                        description: Address that created the order.
                      taker_address:
                        type: string
                        description: >-
                          Address that is allowed to fill the order. If set to
                          0, any address is

                          allowed to fill the order.
                      fee_recipient_address:
                        type: string
                        description: Address that will receive fees when order is filled.
                      sender_address:
                        type: string
                        description: >-
                          Address that is allowed to call Exchange contract
                          methods that affect this

                          order. If set to 0, any address is allowed to call
                          these methods.
                      maker_asset_amount:
                        type: string
                        description: >-
                          Amount of makerAsset being offered by maker. Must be
                          greater than 0.
                      taker_asset_amount:
                        type: string
                        description: >-
                          Amount of takerAsset being bid on by maker. Must be
                          greater than 0.
                      maker_fee:
                        type: string
                        description: >-
                          Amount of ZRX paid to feeRecipient by maker when order
                          is filled. If set to

                          0, no transfer of ZRX from maker to feeRecipient will
                          be attempted.
                      taker_fee:
                        type: string
                        description: >-
                          Amount of ZRX paid to feeRecipient by taker when order
                          is filled. If set to

                          0, no transfer of ZRX from taker to feeRecipient will
                          be attempted.
                      expiration_time_seconds:
                        type: string
                        description: Timestamp in seconds at which order expires.
                      salt:
                        type: string
                        description: >-
                          Arbitrary number to facilitate uniqueness of the
                          order's hash.
                      maker_asset_data:
                        type: string
                        description: >-
                          ABIv2 encoded data that can be decoded by a specified
                          proxy contract when

                          transferring makerAsset.
                      taker_asset_data:
                        type: string
                        description: >-
                          ABIv2 encoded data that can be decoded by a specified
                          proxy contract when

                          transferring takerAsset.
                      maker_fee_asset_data:
                        type: string
                        description: >-
                          ABIv2 encoded data that can be decoded by a specified
                          proxy contract when

                          transferring makerFee.
                      taker_fee_asset_data:
                        type: string
                        description: >-
                          ABIv2 encoded data that can be decoded by a specified
                          proxy contract when

                          transferring takerFee.
                      signature:
                        type: string
                        description: Order signature.
                    description: A valid signed 0x order based on the schema.
                  trade_pair_hash:
                    type: string
                  filled_amount:
                    type: string
                  status:
                    type: string
                    format: int64
                  index_price_requirement:
                    type: string
                  subaccount_i_d:
                    type: string
                  order_type:
                    type: string
                    format: uint64
                  trigger_price:
                    type: string
                description: A valid signed 0x order with Metadata.
          description: >-
            QuerySubaccountDerivativeOrdersResponse defines the response type
            for

            Query/SubaccountDerivativeOrders RPC method.
    description: |-
      QuerySubaccountDerivativeOrdersBatchResponse defines the response type for
      Query/SubaccountDerivativeOrdersBatch RPC method.
  injective.exchange.v1beta1.QuerySubaccountMarketDerivativeOrdersResponse:
    type: object
    properties:
      records:
        type: array
        items:
          type: object
          properties:
            order:
              type: object
              properties:
                chain_id:
                  type: string
                  format: int64
                  description: Specify chain ID.
                exchange_address:
                  type: string
                  description: Exchange v3 contract address.
                maker_address:
                  type: string
                  description: Address that created the order.
                taker_address:
                  type: string
                  description: >-
                    Address that is allowed to fill the order. If set to 0, any
                    address is

                    allowed to fill the order.
                fee_recipient_address:
                  type: string
                  description: Address that will receive fees when order is filled.
                sender_address:
                  type: string
                  description: >-
                    Address that is allowed to call Exchange contract methods
                    that affect this

                    order. If set to 0, any address is allowed to call these
                    methods.
                maker_asset_amount:
                  type: string
                  description: >-
                    Amount of makerAsset being offered by maker. Must be greater
                    than 0.
                taker_asset_amount:
                  type: string
                  description: >-
                    Amount of takerAsset being bid on by maker. Must be greater
                    than 0.
                maker_fee:
                  type: string
                  description: >-
                    Amount of ZRX paid to feeRecipient by maker when order is
                    filled. If set to

                    0, no transfer of ZRX from maker to feeRecipient will be
                    attempted.
                taker_fee:
                  type: string
                  description: >-
                    Amount of ZRX paid to feeRecipient by taker when order is
                    filled. If set to

                    0, no transfer of ZRX from taker to feeRecipient will be
                    attempted.
                expiration_time_seconds:
                  type: string
                  description: Timestamp in seconds at which order expires.
                salt:
                  type: string
                  description: >-
                    Arbitrary number to facilitate uniqueness of the order's
                    hash.
                maker_asset_data:
                  type: string
                  description: >-
                    ABIv2 encoded data that can be decoded by a specified proxy
                    contract when

                    transferring makerAsset.
                taker_asset_data:
                  type: string
                  description: >-
                    ABIv2 encoded data that can be decoded by a specified proxy
                    contract when

                    transferring takerAsset.
                maker_fee_asset_data:
                  type: string
                  description: >-
                    ABIv2 encoded data that can be decoded by a specified proxy
                    contract when

                    transferring makerFee.
                taker_fee_asset_data:
                  type: string
                  description: >-
                    ABIv2 encoded data that can be decoded by a specified proxy
                    contract when

                    transferring takerFee.
                signature:
                  type: string
                  description: Order signature.
              description: A valid signed 0x order based on the schema.
            trade_pair_hash:
              type: string
            filled_amount:
              type: string
            status:
              type: string
              format: int64
            index_price_requirement:
              type: string
            subaccount_i_d:
              type: string
            order_type:
              type: string
              format: uint64
            trigger_price:
              type: string
          description: A valid signed 0x order with Metadata.
    description: |-
      QuerySubaccountDerivativeOrdersResponse defines the response type for
      Query/SubaccountDerivativeOrders RPC method.
  injective.exchange.v1beta1.QueryTraderSubaccountsInfoResponse:
    type: object
    properties:
      subaccount_info:
        type: array
        items:
          type: object
          properties:
            base_currency_margin_info:
              type: array
              items:
                type: object
                properties:
                  margin_hold:
                    type: string
                  total_deposits:
                    type: string
                  base_currency:
                    type: string
                title: An subaccount's margin info for a given base currency
            nonce:
              type: string
            subaccount_id:
              type: string
          title: An subaccount's margin info for a given base currency
    description: |-
      QueryMarginInfoResponse defines the response type for
      Query/marginInfo RPC method.
  injective.exchange.v1beta1.QueryUnderMarginedAccountsResponse:
    type: object
    properties:
      accounts:
        type: array
        items:
          type: object
          properties:
            market_name:
              type: string
            missing_amount:
              type: string
            margin_hold:
              type: string
            total_deposits:
              type: string
            market_id:
              type: string
            exchange_address:
              type: string
            subaccount_id:
              type: string
            maker_address:
              type: string
            nonce:
              type: string
            order_hash:
              type: string
            isLong:
              type: boolean
            order_price:
              type: string
        title: Array of under margined accounts
    description: |-
      QueryDerivativeMarketsResponse defines the response type for
      Query/DerivativeMarkets RPC method.
  injective.exchange.v1beta1.SpotMarket:
    type: object
    properties:
      ticker:
        type: string
        description: >-
          A name of the pair in format AAA/BBB, where AAA is base asset, BBB is
          quote asset.
      base_asset:
        type: string
        description: Address of the base asset.
      quote_asset:
        type: string
        description: Address of the quote asset.
      maker_tx_fee:
        type: string
        title: MakerTxFeePermyriad
      taker_tx_fee:
        type: string
        title: TakerTxFeePermyriad
      market_id:
        type: string
        description: Unique market ID.
      enabled:
        type: boolean
        description: 'If false, then the market is suspended and trades cannot be made.'
      exchange_address:
        type: string
        title: exchange address
    description: An object describing trade pair of two assets.
  injective.exchange.v1beta1.SubaccountInfo:
    type: object
    properties:
      base_currency_margin_info:
        type: array
        items:
          type: object
          properties:
            margin_hold:
              type: string
            total_deposits:
              type: string
            base_currency:
              type: string
          title: An subaccount's margin info for a given base currency
      nonce:
        type: string
      subaccount_id:
        type: string
    title: An subaccount's margin info for a given base currency
  injective.exchange.v1beta1.UnderMarginedAccount:
    type: object
    properties:
      market_name:
        type: string
      missing_amount:
        type: string
      margin_hold:
        type: string
      total_deposits:
        type: string
      market_id:
        type: string
      exchange_address:
        type: string
      subaccount_id:
        type: string
      maker_address:
        type: string
      nonce:
        type: string
      order_hash:
        type: string
      isLong:
        type: boolean
      order_price:
        type: string
  injective.evm.v1beta1.Log:
    type: object
    properties:
      address:
        type: string
        title: address of the contract that generated the event
      topics:
        type: array
        items:
          type: string
        description: list of topics provided by the contract.
      data:
        type: string
        format: byte
        title: 'supplied by the contract, usually ABI-encoded'
      block_number:
        type: string
        format: uint64
        title: block in which the transaction was included
      tx_hash:
        type: string
        title: hash of the transaction
      tx_index:
        type: string
        format: uint64
        title: index of the transaction in the block
      block_hash:
        type: string
        title: hash of the block in which the transaction was included
      index:
        type: string
        format: uint64
        title: index of the log in the block
      removed:
        type: boolean
        description: >-
          The Removed field is true if this log was reverted due to a chain

          reorganisation. You must pay attention to this field if you receive
          logs

          through a filter query.
    description: >-
      Log represents an protobuf compatible Ethereum Log that defines a contract

      log event. These events are generated by the LOG opcode and stored/indexed
      by

      the node.
  injective.evm.v1beta1.Params:
    type: object
    properties:
      evm_denom:
        type: string
        description: |-
          evm_denom represents the token denomination used to run the EVM state
          transitions.
      enable_create:
        type: boolean
        title: >-
          enable_create toggles state transitions that use the vm.Create
          function
      enable_call:
        type: boolean
        title: enable_call toggles state transitions that use the vm.Call function
      extra_eips:
        type: array
        items:
          type: string
          format: int64
        title: extra_eips defines the additional EIPs for the vm.Config
    title: Params defines the EVM module parameters
  injective.evm.v1beta1.QueryAccountResponse:
    type: object
    properties:
      balance:
        type: string
        description: balance is the balance of the EVM denomination.
      code_hash:
        type: string
        format: byte
        description: code_hash is the code bytes from the EOA.
      nonce:
        type: string
        format: uint64
        description: nonce is the account's sequence number.
    description: >-
      QueryAccountResponse is the response type for the Query/Account RPC
      method.
  injective.evm.v1beta1.QueryBalanceResponse:
    type: object
    properties:
      balance:
        type: string
        description: balance is the balance of the EVM denomination.
    description: >-
      QueryBalanceResponse is the response type for the Query/Balance RPC
      method.
  injective.evm.v1beta1.QueryBlockBloomResponse:
    type: object
    properties:
      bloom:
        type: string
        format: byte
        description: bloom represents bloom filter for the given block hash.
    description: |-
      QueryBlockBloomResponse is the response type for the Query/BlockBloom RPC
      method.
  injective.evm.v1beta1.QueryBlockLogsResponse:
    type: object
    properties:
      tx_logs:
        type: array
        items:
          type: object
          properties:
            hash:
              type: string
            logs:
              type: array
              items:
                type: object
                properties:
                  address:
                    type: string
                    title: address of the contract that generated the event
                  topics:
                    type: array
                    items:
                      type: string
                    description: list of topics provided by the contract.
                  data:
                    type: string
                    format: byte
                    title: 'supplied by the contract, usually ABI-encoded'
                  block_number:
                    type: string
                    format: uint64
                    title: block in which the transaction was included
                  tx_hash:
                    type: string
                    title: hash of the transaction
                  tx_index:
                    type: string
                    format: uint64
                    title: index of the transaction in the block
                  block_hash:
                    type: string
                    title: hash of the block in which the transaction was included
                  index:
                    type: string
                    format: uint64
                    title: index of the log in the block
                  removed:
                    type: boolean
                    description: >-
                      The Removed field is true if this log was reverted due to
                      a chain

                      reorganisation. You must pay attention to this field if
                      you receive logs

                      through a filter query.
                description: >-
                  Log represents an protobuf compatible Ethereum Log that
                  defines a contract

                  log event. These events are generated by the LOG opcode and
                  stored/indexed by

                  the node.
          description: >-
            TransactionLogs define the logs generated from a transaction
            execution

            with a given hash. It it used for import/export data as transactions
            are not

            persisted on blockchain state after an upgrade.
        description: logs represents the ethereum logs generated at the given block hash.
    description: QueryTxLogs is the response type for the Query/BlockLogs RPC method.
  injective.evm.v1beta1.QueryCodeResponse:
    type: object
    properties:
      code:
        type: string
        format: byte
        description: code represents the code bytes from an ethereum address.
    description: |-
      QueryCodeResponse is the response type for the Query/Code RPC
      method.
  injective.evm.v1beta1.QueryCosmosAccountResponse:
    type: object
    properties:
      cosmos_address:
        type: string
        description: cosmos_address is the cosmos address of the account.
      sequence:
        type: string
        format: uint64
        description: sequence is the account's sequence number.
      account_number:
        type: string
        format: uint64
        title: account_number is the account numbert
    description: >-
      QueryCosmosAccountResponse is the response type for the
      Query/CosmosAccount RPC method.
  injective.evm.v1beta1.QueryParamsResponse:
    type: object
    properties:
      params:
        description: params define the evm module parameters.
        type: object
        properties:
          evm_denom:
            type: string
            description: >-
              evm_denom represents the token denomination used to run the EVM
              state

              transitions.
          enable_create:
            type: boolean
            title: >-
              enable_create toggles state transitions that use the vm.Create
              function
          enable_call:
            type: boolean
            title: >-
              enable_call toggles state transitions that use the vm.Call
              function
          extra_eips:
            type: array
            items:
              type: string
              format: int64
            title: extra_eips defines the additional EIPs for the vm.Config
        title: Params defines the EVM module parameters
    description: >-
      QueryParamsResponse defines the response type for querying x/evm
      parameters.
  injective.evm.v1beta1.QueryStaticCallResponse:
    type: object
    properties:
      data:
        type: string
        format: byte
    title: // QueryStaticCallRequest defines static call response
  injective.evm.v1beta1.QueryStorageResponse:
    type: object
    properties:
      value:
        type: string
        description: >-
          key defines the storage state value hash associated with the given
          key.
    description: |-
      QueryStorageResponse is the response type for the Query/Storage RPC
      method.
  injective.evm.v1beta1.QueryTxLogsResponse:
    type: object
    properties:
      logs:
        type: array
        items:
          type: object
          properties:
            address:
              type: string
              title: address of the contract that generated the event
            topics:
              type: array
              items:
                type: string
              description: list of topics provided by the contract.
            data:
              type: string
              format: byte
              title: 'supplied by the contract, usually ABI-encoded'
            block_number:
              type: string
              format: uint64
              title: block in which the transaction was included
            tx_hash:
              type: string
              title: hash of the transaction
            tx_index:
              type: string
              format: uint64
              title: index of the transaction in the block
            block_hash:
              type: string
              title: hash of the block in which the transaction was included
            index:
              type: string
              format: uint64
              title: index of the log in the block
            removed:
              type: boolean
              description: >-
                The Removed field is true if this log was reverted due to a
                chain

                reorganisation. You must pay attention to this field if you
                receive logs

                through a filter query.
          description: >-
            Log represents an protobuf compatible Ethereum Log that defines a
            contract

            log event. These events are generated by the LOG opcode and
            stored/indexed by

            the node.
        description: >-
          logs represents the ethereum logs generated from the given
          transaction.
    description: QueryTxLogs is the response type for the Query/TxLogs RPC method.
  injective.evm.v1beta1.QueryTxReceiptResponse:
    type: object
    properties:
      receipt:
        description: receipt represents the ethereum receipt for the given transaction.
        type: object
        properties:
          hash:
            type: string
            format: byte
          from:
            type: string
            format: byte
          data:
            type: object
            properties:
              nonce:
                type: string
                format: uint64
              price:
                type: string
                format: byte
              gas:
                type: string
                format: uint64
              to:
                type: string
                format: byte
              value:
                type: string
                format: byte
              input:
                type: string
                format: byte
              v:
                type: string
                format: byte
                title: signature values
              r:
                type: string
                format: byte
              s:
                type: string
                format: byte
              hash:
                type: string
                description: >-
                  hash defines the tx data hash, which is only used when
                  marshaling to JSON.
            description: >-
              TxData implements the Ethereum transaction data structure. It is
              used

              solely as intended in Ethereum abiding by the protocol.
          result:
            type: object
            properties:
              contract_address:
                type: string
                description: >-
                  contract_address contains the ethereum address of the created
                  contract (if

                  any). If the state transition is an evm.Call, the contract
                  address will be

                  empty.
              bloom:
                type: string
                format: byte
                title: bloom represents the bloom filter bytes
              tx_logs:
                description: >-
                  tx_logs contains the transaction hash and the proto-compatible
                  ethereum

                  logs.
                type: object
                properties:
                  hash:
                    type: string
                  logs:
                    type: array
                    items:
                      type: object
                      properties:
                        address:
                          type: string
                          title: address of the contract that generated the event
                        topics:
                          type: array
                          items:
                            type: string
                          description: list of topics provided by the contract.
                        data:
                          type: string
                          format: byte
                          title: 'supplied by the contract, usually ABI-encoded'
                        block_number:
                          type: string
                          format: uint64
                          title: block in which the transaction was included
                        tx_hash:
                          type: string
                          title: hash of the transaction
                        tx_index:
                          type: string
                          format: uint64
                          title: index of the transaction in the block
                        block_hash:
                          type: string
                          title: >-
                            hash of the block in which the transaction was
                            included
                        index:
                          type: string
                          format: uint64
                          title: index of the log in the block
                        removed:
                          type: boolean
                          description: >-
                            The Removed field is true if this log was reverted
                            due to a chain

                            reorganisation. You must pay attention to this field
                            if you receive logs

                            through a filter query.
                      description: >-
                        Log represents an protobuf compatible Ethereum Log that
                        defines a contract

                        log event. These events are generated by the LOG opcode
                        and stored/indexed by

                        the node.
              ret:
                type: string
                format: byte
                description: ret defines the bytes from the execution.
              reverted:
                type: boolean
                title: reverted flag is set to true when the call has been reverted
              gas_used:
                type: string
                format: uint64
                title: gas_used notes the amount of gas consumed while execution
            description: TxResult stores results of Tx execution.
          index:
            type: string
            format: uint64
          blockHeight:
            type: string
            format: uint64
          blockHash:
            type: string
            format: byte
    description: >-
      QueryTxReceiptResponse is the response type for the Query/TxReceipt RPC
      method.
  injective.evm.v1beta1.QueryTxReceiptsByBlockHashResponse:
    type: object
    properties:
      receipts:
        type: array
        items:
          type: object
          properties:
            hash:
              type: string
              format: byte
            from:
              type: string
              format: byte
            data:
              type: object
              properties:
                nonce:
                  type: string
                  format: uint64
                price:
                  type: string
                  format: byte
                gas:
                  type: string
                  format: uint64
                to:
                  type: string
                  format: byte
                value:
                  type: string
                  format: byte
                input:
                  type: string
                  format: byte
                v:
                  type: string
                  format: byte
                  title: signature values
                r:
                  type: string
                  format: byte
                s:
                  type: string
                  format: byte
                hash:
                  type: string
                  description: >-
                    hash defines the tx data hash, which is only used when
                    marshaling to JSON.
              description: >-
                TxData implements the Ethereum transaction data structure. It is
                used

                solely as intended in Ethereum abiding by the protocol.
            result:
              type: object
              properties:
                contract_address:
                  type: string
                  description: >-
                    contract_address contains the ethereum address of the
                    created contract (if

                    any). If the state transition is an evm.Call, the contract
                    address will be

                    empty.
                bloom:
                  type: string
                  format: byte
                  title: bloom represents the bloom filter bytes
                tx_logs:
                  description: >-
                    tx_logs contains the transaction hash and the
                    proto-compatible ethereum

                    logs.
                  type: object
                  properties:
                    hash:
                      type: string
                    logs:
                      type: array
                      items:
                        type: object
                        properties:
                          address:
                            type: string
                            title: address of the contract that generated the event
                          topics:
                            type: array
                            items:
                              type: string
                            description: list of topics provided by the contract.
                          data:
                            type: string
                            format: byte
                            title: 'supplied by the contract, usually ABI-encoded'
                          block_number:
                            type: string
                            format: uint64
                            title: block in which the transaction was included
                          tx_hash:
                            type: string
                            title: hash of the transaction
                          tx_index:
                            type: string
                            format: uint64
                            title: index of the transaction in the block
                          block_hash:
                            type: string
                            title: >-
                              hash of the block in which the transaction was
                              included
                          index:
                            type: string
                            format: uint64
                            title: index of the log in the block
                          removed:
                            type: boolean
                            description: >-
                              The Removed field is true if this log was reverted
                              due to a chain

                              reorganisation. You must pay attention to this
                              field if you receive logs

                              through a filter query.
                        description: >-
                          Log represents an protobuf compatible Ethereum Log
                          that defines a contract

                          log event. These events are generated by the LOG
                          opcode and stored/indexed by

                          the node.
                ret:
                  type: string
                  format: byte
                  description: ret defines the bytes from the execution.
                reverted:
                  type: boolean
                  title: reverted flag is set to true when the call has been reverted
                gas_used:
                  type: string
                  format: uint64
                  title: gas_used notes the amount of gas consumed while execution
              description: TxResult stores results of Tx execution.
            index:
              type: string
              format: uint64
            blockHeight:
              type: string
              format: uint64
            blockHash:
              type: string
              format: byte
          description: >-
            TxReceipt defines the receipt type stored in KV for each EVM
            transaction.
        title: tx receipts list for the block
    description: >-
      QueryTxReceiptsByBlockHashResponse is the response type for the
      Query/TxReceiptsByBlockHash RPC method.
  injective.evm.v1beta1.QueryTxReceiptsByBlockHeightResponse:
    type: object
    properties:
      receipts:
        type: array
        items:
          type: object
          properties:
            hash:
              type: string
              format: byte
            from:
              type: string
              format: byte
            data:
              type: object
              properties:
                nonce:
                  type: string
                  format: uint64
                price:
                  type: string
                  format: byte
                gas:
                  type: string
                  format: uint64
                to:
                  type: string
                  format: byte
                value:
                  type: string
                  format: byte
                input:
                  type: string
                  format: byte
                v:
                  type: string
                  format: byte
                  title: signature values
                r:
                  type: string
                  format: byte
                s:
                  type: string
                  format: byte
                hash:
                  type: string
                  description: >-
                    hash defines the tx data hash, which is only used when
                    marshaling to JSON.
              description: >-
                TxData implements the Ethereum transaction data structure. It is
                used

                solely as intended in Ethereum abiding by the protocol.
            result:
              type: object
              properties:
                contract_address:
                  type: string
                  description: >-
                    contract_address contains the ethereum address of the
                    created contract (if

                    any). If the state transition is an evm.Call, the contract
                    address will be

                    empty.
                bloom:
                  type: string
                  format: byte
                  title: bloom represents the bloom filter bytes
                tx_logs:
                  description: >-
                    tx_logs contains the transaction hash and the
                    proto-compatible ethereum

                    logs.
                  type: object
                  properties:
                    hash:
                      type: string
                    logs:
                      type: array
                      items:
                        type: object
                        properties:
                          address:
                            type: string
                            title: address of the contract that generated the event
                          topics:
                            type: array
                            items:
                              type: string
                            description: list of topics provided by the contract.
                          data:
                            type: string
                            format: byte
                            title: 'supplied by the contract, usually ABI-encoded'
                          block_number:
                            type: string
                            format: uint64
                            title: block in which the transaction was included
                          tx_hash:
                            type: string
                            title: hash of the transaction
                          tx_index:
                            type: string
                            format: uint64
                            title: index of the transaction in the block
                          block_hash:
                            type: string
                            title: >-
                              hash of the block in which the transaction was
                              included
                          index:
                            type: string
                            format: uint64
                            title: index of the log in the block
                          removed:
                            type: boolean
                            description: >-
                              The Removed field is true if this log was reverted
                              due to a chain

                              reorganisation. You must pay attention to this
                              field if you receive logs

                              through a filter query.
                        description: >-
                          Log represents an protobuf compatible Ethereum Log
                          that defines a contract

                          log event. These events are generated by the LOG
                          opcode and stored/indexed by

                          the node.
                ret:
                  type: string
                  format: byte
                  description: ret defines the bytes from the execution.
                reverted:
                  type: boolean
                  title: reverted flag is set to true when the call has been reverted
                gas_used:
                  type: string
                  format: uint64
                  title: gas_used notes the amount of gas consumed while execution
              description: TxResult stores results of Tx execution.
            index:
              type: string
              format: uint64
            blockHeight:
              type: string
              format: uint64
            blockHash:
              type: string
              format: byte
          description: >-
            TxReceipt defines the receipt type stored in KV for each EVM
            transaction.
        title: tx receipts list for the block
    description: >-
      QueryTxReceiptsByBlockHeightResponse is the response type for the
      Query/TxReceiptsByBlockHeight RPC method.
  injective.evm.v1beta1.TransactionLogs:
    type: object
    properties:
      hash:
        type: string
      logs:
        type: array
        items:
          type: object
          properties:
            address:
              type: string
              title: address of the contract that generated the event
            topics:
              type: array
              items:
                type: string
              description: list of topics provided by the contract.
            data:
              type: string
              format: byte
              title: 'supplied by the contract, usually ABI-encoded'
            block_number:
              type: string
              format: uint64
              title: block in which the transaction was included
            tx_hash:
              type: string
              title: hash of the transaction
            tx_index:
              type: string
              format: uint64
              title: index of the transaction in the block
            block_hash:
              type: string
              title: hash of the block in which the transaction was included
            index:
              type: string
              format: uint64
              title: index of the log in the block
            removed:
              type: boolean
              description: >-
                The Removed field is true if this log was reverted due to a
                chain

                reorganisation. You must pay attention to this field if you
                receive logs

                through a filter query.
          description: >-
            Log represents an protobuf compatible Ethereum Log that defines a
            contract

            log event. These events are generated by the LOG opcode and
            stored/indexed by

            the node.
    description: >-
      TransactionLogs define the logs generated from a transaction execution

      with a given hash. It it used for import/export data as transactions are
      not

      persisted on blockchain state after an upgrade.
  injective.evm.v1beta1.TxData:
    type: object
    properties:
      nonce:
        type: string
        format: uint64
      price:
        type: string
        format: byte
      gas:
        type: string
        format: uint64
      to:
        type: string
        format: byte
      value:
        type: string
        format: byte
      input:
        type: string
        format: byte
      v:
        type: string
        format: byte
        title: signature values
      r:
        type: string
        format: byte
      s:
        type: string
        format: byte
      hash:
        type: string
        description: >-
          hash defines the tx data hash, which is only used when marshaling to
          JSON.
    description: |-
      TxData implements the Ethereum transaction data structure. It is used
      solely as intended in Ethereum abiding by the protocol.
  injective.evm.v1beta1.TxReceipt:
    type: object
    properties:
      hash:
        type: string
        format: byte
      from:
        type: string
        format: byte
      data:
        type: object
        properties:
          nonce:
            type: string
            format: uint64
          price:
            type: string
            format: byte
          gas:
            type: string
            format: uint64
          to:
            type: string
            format: byte
          value:
            type: string
            format: byte
          input:
            type: string
            format: byte
          v:
            type: string
            format: byte
            title: signature values
          r:
            type: string
            format: byte
          s:
            type: string
            format: byte
          hash:
            type: string
            description: >-
              hash defines the tx data hash, which is only used when marshaling
              to JSON.
        description: |-
          TxData implements the Ethereum transaction data structure. It is used
          solely as intended in Ethereum abiding by the protocol.
      result:
        type: object
        properties:
          contract_address:
            type: string
            description: >-
              contract_address contains the ethereum address of the created
              contract (if

              any). If the state transition is an evm.Call, the contract address
              will be

              empty.
          bloom:
            type: string
            format: byte
            title: bloom represents the bloom filter bytes
          tx_logs:
            description: >-
              tx_logs contains the transaction hash and the proto-compatible
              ethereum

              logs.
            type: object
            properties:
              hash:
                type: string
              logs:
                type: array
                items:
                  type: object
                  properties:
                    address:
                      type: string
                      title: address of the contract that generated the event
                    topics:
                      type: array
                      items:
                        type: string
                      description: list of topics provided by the contract.
                    data:
                      type: string
                      format: byte
                      title: 'supplied by the contract, usually ABI-encoded'
                    block_number:
                      type: string
                      format: uint64
                      title: block in which the transaction was included
                    tx_hash:
                      type: string
                      title: hash of the transaction
                    tx_index:
                      type: string
                      format: uint64
                      title: index of the transaction in the block
                    block_hash:
                      type: string
                      title: hash of the block in which the transaction was included
                    index:
                      type: string
                      format: uint64
                      title: index of the log in the block
                    removed:
                      type: boolean
                      description: >-
                        The Removed field is true if this log was reverted due
                        to a chain

                        reorganisation. You must pay attention to this field if
                        you receive logs

                        through a filter query.
                  description: >-
                    Log represents an protobuf compatible Ethereum Log that
                    defines a contract

                    log event. These events are generated by the LOG opcode and
                    stored/indexed by

                    the node.
          ret:
            type: string
            format: byte
            description: ret defines the bytes from the execution.
          reverted:
            type: boolean
            title: reverted flag is set to true when the call has been reverted
          gas_used:
            type: string
            format: uint64
            title: gas_used notes the amount of gas consumed while execution
        description: TxResult stores results of Tx execution.
      index:
        type: string
        format: uint64
      blockHeight:
        type: string
        format: uint64
      blockHash:
        type: string
        format: byte
    description: TxReceipt defines the receipt type stored in KV for each EVM transaction.
  injective.evm.v1beta1.TxResult:
    type: object
    properties:
      contract_address:
        type: string
        description: >-
          contract_address contains the ethereum address of the created contract
          (if

          any). If the state transition is an evm.Call, the contract address
          will be

          empty.
      bloom:
        type: string
        format: byte
        title: bloom represents the bloom filter bytes
      tx_logs:
        description: >-
          tx_logs contains the transaction hash and the proto-compatible
          ethereum

          logs.
        type: object
        properties:
          hash:
            type: string
          logs:
            type: array
            items:
              type: object
              properties:
                address:
                  type: string
                  title: address of the contract that generated the event
                topics:
                  type: array
                  items:
                    type: string
                  description: list of topics provided by the contract.
                data:
                  type: string
                  format: byte
                  title: 'supplied by the contract, usually ABI-encoded'
                block_number:
                  type: string
                  format: uint64
                  title: block in which the transaction was included
                tx_hash:
                  type: string
                  title: hash of the transaction
                tx_index:
                  type: string
                  format: uint64
                  title: index of the transaction in the block
                block_hash:
                  type: string
                  title: hash of the block in which the transaction was included
                index:
                  type: string
                  format: uint64
                  title: index of the log in the block
                removed:
                  type: boolean
                  description: >-
                    The Removed field is true if this log was reverted due to a
                    chain

                    reorganisation. You must pay attention to this field if you
                    receive logs

                    through a filter query.
              description: >-
                Log represents an protobuf compatible Ethereum Log that defines
                a contract

                log event. These events are generated by the LOG opcode and
                stored/indexed by

                the node.
      ret:
        type: string
        format: byte
        description: ret defines the bytes from the execution.
      reverted:
        type: boolean
        title: reverted flag is set to true when the call has been reverted
      gas_used:
        type: string
        format: uint64
        title: gas_used notes the amount of gas consumed while execution
    description: TxResult stores results of Tx execution.
  cosmos.auth.v1beta1.Params:
    type: object
    properties:
      max_memo_characters:
        type: string
        format: uint64
      tx_sig_limit:
        type: string
        format: uint64
      tx_size_cost_per_byte:
        type: string
        format: uint64
      sig_verify_cost_ed25519:
        type: string
        format: uint64
      sig_verify_cost_secp256k1:
        type: string
        format: uint64
    description: Params defines the parameters for the auth module.
  cosmos.auth.v1beta1.QueryAccountResponse:
    type: object
    properties:
      account:
        description: account defines the account of the corresponding address.
        type: object
        properties:
          type_url:
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
          value:
            type: string
            format: byte
            description: >-
              Must be a valid serialized protocol buffer of the above specified
              type.
    description: >-
      QueryAccountResponse is the response type for the Query/Account RPC
      method.
  cosmos.auth.v1beta1.QueryParamsResponse:
    type: object
    properties:
      params:
        description: params defines the parameters of the module.
        type: object
        properties:
          max_memo_characters:
            type: string
            format: uint64
          tx_sig_limit:
            type: string
            format: uint64
          tx_size_cost_per_byte:
            type: string
            format: uint64
          sig_verify_cost_ed25519:
            type: string
            format: uint64
          sig_verify_cost_secp256k1:
            type: string
            format: uint64
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
  cosmos.bank.v1beta1.DenomUnit:
    type: object
    properties:
      denom:
        type: string
        description: denom represents the string name of the given denom unit (e.g uatom).
      exponent:
        type: integer
        format: int64
        description: >-
          exponent represents power of 10 exponent that one must

          raise the base_denom to in order to equal the given DenomUnit's denom

          1 denom = 1^exponent base_denom

          (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom'
          with

          exponent = 6, thus: 1 atom = 10^6 uatom).
      aliases:
        type: array
        items:
          type: string
        title: aliases is a list of string aliases for the given denom
    description: |-
      DenomUnit represents a struct that describes a given
      denomination unit of the basic token.
  cosmos.bank.v1beta1.Metadata:
    type: object
    properties:
      description:
        type: string
      denom_units:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
              description: >-
                denom represents the string name of the given denom unit (e.g
                uatom).
            exponent:
              type: integer
              format: int64
              description: >-
                exponent represents power of 10 exponent that one must

                raise the base_denom to in order to equal the given DenomUnit's
                denom

                1 denom = 1^exponent base_denom

                (e.g. with a base_denom of uatom, one can create a DenomUnit of
                'atom' with

                exponent = 6, thus: 1 atom = 10^6 uatom).
            aliases:
              type: array
              items:
                type: string
              title: aliases is a list of string aliases for the given denom
          description: |-
            DenomUnit represents a struct that describes a given
            denomination unit of the basic token.
        title: denom_units represents the list of DenomUnit's for a given coin
      base:
        type: string
        description: >-
          base represents the base denom (should be the DenomUnit with exponent
          = 0).
      display:
        type: string
        description: |-
          display indicates the suggested denom that should be
          displayed in clients.
    description: |-
      Metadata represents a struct that describes
      a basic token.
  cosmos.bank.v1beta1.Params:
    type: object
    properties:
      send_enabled:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            enabled:
              type: boolean
          description: >-
            SendEnabled maps coin denom to a send_enabled status (whether a
            denom is

            sendable).
      default_send_enabled:
        type: boolean
    description: Params defines the parameters for the bank module.
  cosmos.bank.v1beta1.QueryAllBalancesResponse:
    type: object
    properties:
      balances:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        description: balances is the balances of all the coins.
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: >-
      QueryAllBalancesResponse is the response type for the Query/AllBalances
      RPC

      method.
  cosmos.bank.v1beta1.QueryBalanceResponse:
    type: object
    properties:
      balance:
        description: balance is the balance of the coin.
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
    description: >-
      QueryBalanceResponse is the response type for the Query/Balance RPC
      method.
  cosmos.bank.v1beta1.QueryDenomMetadataResponse:
    type: object
    properties:
      metadata:
        description: >-
          metadata describes and provides all the client information for the
          requested token.
        type: object
        properties:
          description:
            type: string
          denom_units:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                  description: >-
                    denom represents the string name of the given denom unit
                    (e.g uatom).
                exponent:
                  type: integer
                  format: int64
                  description: >-
                    exponent represents power of 10 exponent that one must

                    raise the base_denom to in order to equal the given
                    DenomUnit's denom

                    1 denom = 1^exponent base_denom

                    (e.g. with a base_denom of uatom, one can create a DenomUnit
                    of 'atom' with

                    exponent = 6, thus: 1 atom = 10^6 uatom).
                aliases:
                  type: array
                  items:
                    type: string
                  title: aliases is a list of string aliases for the given denom
              description: |-
                DenomUnit represents a struct that describes a given
                denomination unit of the basic token.
            title: denom_units represents the list of DenomUnit's for a given coin
          base:
            type: string
            description: >-
              base represents the base denom (should be the DenomUnit with
              exponent = 0).
          display:
            type: string
            description: |-
              display indicates the suggested denom that should be
              displayed in clients.
    description: >-
      QueryDenomMetadataResponse is the response type for the
      Query/DenomMetadata RPC

      method.
  cosmos.bank.v1beta1.QueryDenomsMetadataResponse:
    type: object
    properties:
      metadatas:
        type: array
        items:
          type: object
          properties:
            description:
              type: string
            denom_units:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                    description: >-
                      denom represents the string name of the given denom unit
                      (e.g uatom).
                  exponent:
                    type: integer
                    format: int64
                    description: >-
                      exponent represents power of 10 exponent that one must

                      raise the base_denom to in order to equal the given
                      DenomUnit's denom

                      1 denom = 1^exponent base_denom

                      (e.g. with a base_denom of uatom, one can create a
                      DenomUnit of 'atom' with

                      exponent = 6, thus: 1 atom = 10^6 uatom).
                  aliases:
                    type: array
                    items:
                      type: string
                    title: aliases is a list of string aliases for the given denom
                description: |-
                  DenomUnit represents a struct that describes a given
                  denomination unit of the basic token.
              title: denom_units represents the list of DenomUnit's for a given coin
            base:
              type: string
              description: >-
                base represents the base denom (should be the DenomUnit with
                exponent = 0).
            display:
              type: string
              description: |-
                display indicates the suggested denom that should be
                displayed in clients.
          description: |-
            Metadata represents a struct that describes
            a basic token.
        description: >-
          metadata provides the client information for all the registered
          tokens.
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: >-
      QueryDenomsMetadataResponse is the response type for the
      Query/DenomsMetadata RPC

      method.
  cosmos.bank.v1beta1.QueryParamsResponse:
    type: object
    properties:
      params:
        type: object
        properties:
          send_enabled:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                enabled:
                  type: boolean
              description: >-
                SendEnabled maps coin denom to a send_enabled status (whether a
                denom is

                sendable).
          default_send_enabled:
            type: boolean
        description: Params defines the parameters for the bank module.
    description: >-
      QueryParamsResponse defines the response type for querying x/bank
      parameters.
  cosmos.bank.v1beta1.QuerySupplyOfResponse:
    type: object
    properties:
      amount:
        description: amount is the supply of the coin.
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
    description: >-
      QuerySupplyOfResponse is the response type for the Query/SupplyOf RPC
      method.
  cosmos.bank.v1beta1.QueryTotalSupplyResponse:
    type: object
    properties:
      supply:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        title: supply is the supply of the coins
    title: >-
      QueryTotalSupplyResponse is the response type for the Query/TotalSupply
      RPC

      method
  cosmos.bank.v1beta1.SendEnabled:
    type: object
    properties:
      denom:
        type: string
      enabled:
        type: boolean
    description: |-
      SendEnabled maps coin denom to a send_enabled status (whether a denom is
      sendable).
  cosmos.base.query.v1beta1.PageRequest:
    type: object
    properties:
      key:
        type: string
        format: byte
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
      offset:
        type: string
        format: uint64
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
      limit:
        type: string
        format: uint64
        description: >-
          limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.
      count_total:
        type: boolean
        description: >-
          count_total is set to true  to indicate that the result set should
          include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when
          key

          is set.
    description: |-
      message SomeRequest {
               Foo some_parameter = 1;
               PageRequest pagination = 2;
       }
    title: |-
      PageRequest is to be embedded in gRPC request messages for efficient
      pagination. Ex:
  cosmos.base.query.v1beta1.PageResponse:
    type: object
    properties:
      next_key:
        type: string
        format: byte
        title: |-
          next_key is the key to be passed to PageRequest.key to
          query the next page most efficiently
      total:
        type: string
        format: uint64
        title: |-
          total is total number of results available if PageRequest.count_total
          was set, its value is undefined otherwise
    description: |-
      PageResponse is to be embedded in gRPC response messages where the
      corresponding request message has used PageRequest.

       message SomeResponse {
               repeated Bar results = 1;
               PageResponse page = 2;
       }
  cosmos.base.v1beta1.DecCoin:
    type: object
    properties:
      denom:
        type: string
      amount:
        type: string
    description: |-
      DecCoin defines a token with a denomination and a decimal amount.

      NOTE: The amount field is an Dec which implements the custom method
      signatures required by gogoproto.
  cosmos.distribution.v1beta1.DelegationDelegatorReward:
    type: object
    properties:
      validator_address:
        type: string
      reward:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            DecCoin defines a token with a denomination and a decimal amount.

            NOTE: The amount field is an Dec which implements the custom method
            signatures required by gogoproto.
    description: |-
      DelegationDelegatorReward represents the properties
      of a delegator's delegation reward.
  cosmos.distribution.v1beta1.Params:
    type: object
    properties:
      community_tax:
        type: string
      base_proposer_reward:
        type: string
      bonus_proposer_reward:
        type: string
      withdraw_addr_enabled:
        type: boolean
    description: Params defines the set of params for the distribution module.
  cosmos.distribution.v1beta1.QueryCommunityPoolResponse:
    type: object
    properties:
      pool:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            DecCoin defines a token with a denomination and a decimal amount.

            NOTE: The amount field is an Dec which implements the custom method
            signatures required by gogoproto.
        description: pool defines community pool's coins.
    description: >-
      QueryCommunityPoolResponse is the response type for the
      Query/CommunityPool

      RPC method.
  cosmos.distribution.v1beta1.QueryDelegationRewardsResponse:
    type: object
    properties:
      rewards:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            DecCoin defines a token with a denomination and a decimal amount.

            NOTE: The amount field is an Dec which implements the custom method
            signatures required by gogoproto.
        description: rewards defines the rewards accrued by a delegation.
    description: |-
      QueryDelegationRewardsResponse is the response type for the
      Query/DelegationRewards RPC method.
  cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse:
    type: object
    properties:
      rewards:
        type: array
        items:
          type: object
          properties:
            validator_address:
              type: string
            reward:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  DecCoin defines a token with a denomination and a decimal
                  amount.


                  NOTE: The amount field is an Dec which implements the custom
                  method

                  signatures required by gogoproto.
          description: |-
            DelegationDelegatorReward represents the properties
            of a delegator's delegation reward.
        description: rewards defines all the rewards accrued by a delegator.
      total:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            DecCoin defines a token with a denomination and a decimal amount.

            NOTE: The amount field is an Dec which implements the custom method
            signatures required by gogoproto.
        description: total defines the sum of all the rewards.
    description: |-
      QueryDelegationTotalRewardsResponse is the response type for the
      Query/DelegationTotalRewards RPC method.
  cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse:
    type: object
    properties:
      validators:
        type: array
        items:
          type: string
        description: validators defines the validators a delegator is delegating for.
    description: |-
      QueryDelegatorValidatorsResponse is the response type for the
      Query/DelegatorValidators RPC method.
  cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse:
    type: object
    properties:
      withdraw_address:
        type: string
        description: withdraw_address defines the delegator address to query for.
    description: |-
      QueryDelegatorWithdrawAddressResponse is the response type for the
      Query/DelegatorWithdrawAddress RPC method.
  cosmos.distribution.v1beta1.QueryParamsResponse:
    type: object
    properties:
      params:
        description: params defines the parameters of the module.
        type: object
        properties:
          community_tax:
            type: string
          base_proposer_reward:
            type: string
          bonus_proposer_reward:
            type: string
          withdraw_addr_enabled:
            type: boolean
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
  cosmos.distribution.v1beta1.QueryValidatorCommissionResponse:
    type: object
    properties:
      commission:
        description: commission defines the commision the validator received.
        type: object
        properties:
          commission:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                DecCoin defines a token with a denomination and a decimal
                amount.


                NOTE: The amount field is an Dec which implements the custom
                method

                signatures required by gogoproto.
    title: |-
      QueryValidatorCommissionResponse is the response type for the
      Query/ValidatorCommission RPC method
  cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse:
    type: object
    properties:
      rewards:
        type: object
        properties:
          rewards:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                DecCoin defines a token with a denomination and a decimal
                amount.


                NOTE: The amount field is an Dec which implements the custom
                method

                signatures required by gogoproto.
        description: >-
          ValidatorOutstandingRewards represents outstanding (un-withdrawn)
          rewards

          for a validator inexpensive to track, allows simple sanity checks.
    description: |-
      QueryValidatorOutstandingRewardsResponse is the response type for the
      Query/ValidatorOutstandingRewards RPC method.
  cosmos.distribution.v1beta1.QueryValidatorSlashesResponse:
    type: object
    properties:
      slashes:
        type: array
        items:
          type: object
          properties:
            validator_period:
              type: string
              format: uint64
            fraction:
              type: string
          description: |-
            ValidatorSlashEvent represents a validator slash event.
            Height is implicit within the store key.
            This is needed to calculate appropriate amount of staking tokens
            for delegations which are withdrawn after a slash has occurred.
        description: slashes defines the slashes the validator received.
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: |-
      QueryValidatorSlashesResponse is the response type for the
      Query/ValidatorSlashes RPC method.
  cosmos.distribution.v1beta1.ValidatorAccumulatedCommission:
    type: object
    properties:
      commission:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            DecCoin defines a token with a denomination and a decimal amount.

            NOTE: The amount field is an Dec which implements the custom method
            signatures required by gogoproto.
    description: |-
      ValidatorAccumulatedCommission represents accumulated commission
      for a validator kept as a running counter, can be withdrawn at any time.
  cosmos.distribution.v1beta1.ValidatorOutstandingRewards:
    type: object
    properties:
      rewards:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            DecCoin defines a token with a denomination and a decimal amount.

            NOTE: The amount field is an Dec which implements the custom method
            signatures required by gogoproto.
    description: |-
      ValidatorOutstandingRewards represents outstanding (un-withdrawn) rewards
      for a validator inexpensive to track, allows simple sanity checks.
  cosmos.distribution.v1beta1.ValidatorSlashEvent:
    type: object
    properties:
      validator_period:
        type: string
        format: uint64
      fraction:
        type: string
    description: |-
      ValidatorSlashEvent represents a validator slash event.
      Height is implicit within the store key.
      This is needed to calculate appropriate amount of staking tokens
      for delegations which are withdrawn after a slash has occurred.
  cosmos.mint.v1beta1.Params:
    type: object
    properties:
      mint_denom:
        type: string
        title: type of coin to mint
      inflation_rate_change:
        type: string
        title: maximum annual change in inflation rate
      inflation_max:
        type: string
        title: maximum inflation rate
      inflation_min:
        type: string
        title: minimum inflation rate
      goal_bonded:
        type: string
        title: goal of percent bonded atoms
      blocks_per_year:
        type: string
        format: uint64
        title: expected blocks per year
    description: Params holds parameters for the mint module.
  cosmos.mint.v1beta1.QueryAnnualProvisionsResponse:
    type: object
    properties:
      annual_provisions:
        type: string
        format: byte
        description: annual_provisions is the current minting annual provisions value.
    description: |-
      QueryAnnualProvisionsResponse is the response type for the
      Query/AnnualProvisions RPC method.
  cosmos.mint.v1beta1.QueryInflationResponse:
    type: object
    properties:
      inflation:
        type: string
        format: byte
        description: inflation is the current minting inflation value.
    description: |-
      QueryInflationResponse is the response type for the Query/Inflation RPC
      method.
  cosmos.mint.v1beta1.QueryParamsResponse:
    type: object
    properties:
      params:
        description: params defines the parameters of the module.
        type: object
        properties:
          mint_denom:
            type: string
            title: type of coin to mint
          inflation_rate_change:
            type: string
            title: maximum annual change in inflation rate
          inflation_max:
            type: string
            title: maximum inflation rate
          inflation_min:
            type: string
            title: minimum inflation rate
          goal_bonded:
            type: string
            title: goal of percent bonded atoms
          blocks_per_year:
            type: string
            format: uint64
            title: expected blocks per year
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
  cosmos.gov.v1beta1.Deposit:
    type: object
    properties:
      proposal_id:
        type: string
        format: uint64
      depositor:
        type: string
      amount:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
    description: |-
      Deposit defines an amount deposited by an account address to an active
      proposal.
  cosmos.gov.v1beta1.DepositParams:
    type: object
    properties:
      min_deposit:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        description: Minimum deposit for a proposal to enter voting period.
      max_deposit_period:
        type: string
        description: >-
          Maximum period for Atom holders to deposit on a proposal. Initial
          value: 2
           months.
    description: DepositParams defines the params for deposits on governance proposals.
  cosmos.gov.v1beta1.Proposal:
    type: object
    properties:
      proposal_id:
        type: string
        format: uint64
      content:
        type: object
        properties:
          type_url:
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
          value:
            type: string
            format: byte
            description: >-
              Must be a valid serialized protocol buffer of the above specified
              type.
        description: >-
          `Any` contains an arbitrary serialized protocol buffer message along
          with a

          URL that describes the type of the serialized message.


          Protobuf library provides support to pack/unpack Any values in the
          form

          of utility functions or additional generated methods of the Any type.


          Example 1: Pack and unpack a message in C++.

              Foo foo = ...;
              Any any;
              any.PackFrom(foo);
              ...
              if (any.UnpackTo(&foo)) {
                ...
              }

          Example 2: Pack and unpack a message in Java.

              Foo foo = ...;
              Any any = Any.pack(foo);
              ...
              if (any.is(Foo.class)) {
                foo = any.unpack(Foo.class);
              }

           Example 3: Pack and unpack a message in Python.

              foo = Foo(...)
              any = Any()
              any.Pack(foo)
              ...
              if any.Is(Foo.DESCRIPTOR):
                any.Unpack(foo)
                ...

           Example 4: Pack and unpack a message in Go

               foo := &pb.Foo{...}
               any, err := ptypes.MarshalAny(foo)
               ...
               foo := &pb.Foo{}
               if err := ptypes.UnmarshalAny(any, foo); err != nil {
                 ...
               }

          The pack methods provided by protobuf library will by default use

          'type.googleapis.com/full.type.name' as the type URL and the unpack

          methods only use the fully qualified type name after the last '/'

          in the type URL, for example "foo.bar.com/modules/y.z" will yield type

          name "y.z".



          JSON

          ====

          The JSON representation of an `Any` value uses the regular

          representation of the deserialized, embedded message, with an

          additional field `@type` which contains the type URL. Example:

              package google.profile;
              message Person {
                string first_name = 1;
                string last_name = 2;
              }

              {
                "@type": "type.googleapis.com/google.profile.Person",
                "firstName": <string>,
                "lastName": <string>
              }

          If the embedded message type is well-known and has a custom JSON

          representation, that representation will be embedded adding a field

          `value` which holds the custom JSON in addition to the `@type`

          field. Example (for message [google.protobuf.Duration][]):

              {
                "@type": "type.googleapis.com/google.protobuf.Duration",
                "value": "1.212s"
              }
      status:
        type: string
        enum:
          - PROPOSAL_STATUS_UNSPECIFIED
          - PROPOSAL_STATUS_DEPOSIT_PERIOD
          - PROPOSAL_STATUS_VOTING_PERIOD
          - PROPOSAL_STATUS_PASSED
          - PROPOSAL_STATUS_REJECTED
          - PROPOSAL_STATUS_FAILED
        default: PROPOSAL_STATUS_UNSPECIFIED
        description: |-
          ProposalStatus enumerates the valid statuses of a proposal.

           - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.
           - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
          period.
           - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
          period.
           - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
          passed.
           - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
          been rejected.
           - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
          failed.
      final_tally_result:
        type: object
        properties:
          'yes':
            type: string
          abstain:
            type: string
          'no':
            type: string
          no_with_veto:
            type: string
        description: TallyResult defines a standard tally for a governance proposal.
      submit_time:
        type: string
        format: date-time
      deposit_end_time:
        type: string
        format: date-time
      total_deposit:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      voting_start_time:
        type: string
        format: date-time
      voting_end_time:
        type: string
        format: date-time
    description: Proposal defines the core field members of a governance proposal.
  cosmos.gov.v1beta1.ProposalStatus:
    type: string
    enum:
      - PROPOSAL_STATUS_UNSPECIFIED
      - PROPOSAL_STATUS_DEPOSIT_PERIOD
      - PROPOSAL_STATUS_VOTING_PERIOD
      - PROPOSAL_STATUS_PASSED
      - PROPOSAL_STATUS_REJECTED
      - PROPOSAL_STATUS_FAILED
    default: PROPOSAL_STATUS_UNSPECIFIED
    description: |-
      ProposalStatus enumerates the valid statuses of a proposal.

       - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.
       - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
      period.
       - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
      period.
       - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
      passed.
       - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
      been rejected.
       - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
      failed.
  cosmos.gov.v1beta1.QueryDepositResponse:
    type: object
    properties:
      deposit:
        description: deposit defines the requested deposit.
        type: object
        properties:
          proposal_id:
            type: string
            format: uint64
          depositor:
            type: string
          amount:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
    description: >-
      QueryDepositResponse is the response type for the Query/Deposit RPC
      method.
  cosmos.gov.v1beta1.QueryDepositsResponse:
    type: object
    properties:
      deposits:
        type: array
        items:
          type: object
          properties:
            proposal_id:
              type: string
              format: uint64
            depositor:
              type: string
            amount:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
          description: >-
            Deposit defines an amount deposited by an account address to an
            active

            proposal.
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: >-
      QueryDepositsResponse is the response type for the Query/Deposits RPC
      method.
  cosmos.gov.v1beta1.QueryParamsResponse:
    type: object
    properties:
      voting_params:
        description: voting_params defines the parameters related to voting.
        type: object
        properties:
          voting_period:
            type: string
            description: Length of the voting period.
      deposit_params:
        description: deposit_params defines the parameters related to deposit.
        type: object
        properties:
          min_deposit:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            description: Minimum deposit for a proposal to enter voting period.
          max_deposit_period:
            type: string
            description: >-
              Maximum period for Atom holders to deposit on a proposal. Initial
              value: 2
               months.
      tally_params:
        description: tally_params defines the parameters related to tally.
        type: object
        properties:
          quorum:
            type: string
            format: byte
            description: >-
              Minimum percentage of total stake needed to vote for a result to
              be
               considered valid.
          threshold:
            type: string
            format: byte
            description: >-
              Minimum proportion of Yes votes for proposal to pass. Default
              value: 0.5.
          veto_threshold:
            type: string
            format: byte
            description: >-
              Minimum value of Veto votes to Total votes ratio for proposal to
              be
               vetoed. Default value: 1/3.
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
  cosmos.gov.v1beta1.QueryProposalResponse:
    type: object
    properties:
      proposal:
        type: object
        properties:
          proposal_id:
            type: string
            format: uint64
          content:
            type: object
            properties:
              type_url:
                type: string
                description: >-
                  A URL/resource name that uniquely identifies the type of the
                  serialized

                  protocol buffer message. This string must contain at least

                  one "/" character. The last segment of the URL's path must
                  represent

                  the fully qualified name of the type (as in

                  `path/google.protobuf.Duration`). The name should be in a
                  canonical form

                  (e.g., leading "." is not accepted).


                  In practice, teams usually precompile into the binary all
                  types that they

                  expect it to use in the context of Any. However, for URLs
                  which use the

                  scheme `http`, `https`, or no scheme, one can optionally set
                  up a type

                  server that maps type URLs to message definitions as follows:


                  * If no scheme is provided, `https` is assumed.

                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on
                  the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the
                  official

                  protobuf release, and it is not used for type URLs beginning
                  with

                  type.googleapis.com.


                  Schemes other than `http`, `https` (or the empty scheme) might
                  be

                  used with implementation specific semantics.
              value:
                type: string
                format: byte
                description: >-
                  Must be a valid serialized protocol buffer of the above
                  specified type.
            description: >-
              `Any` contains an arbitrary serialized protocol buffer message
              along with a

              URL that describes the type of the serialized message.


              Protobuf library provides support to pack/unpack Any values in the
              form

              of utility functions or additional generated methods of the Any
              type.


              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

               Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

               Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := ptypes.MarshalAny(foo)
                   ...
                   foo := &pb.Foo{}
                   if err := ptypes.UnmarshalAny(any, foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use

              'type.googleapis.com/full.type.name' as the type URL and the
              unpack

              methods only use the fully qualified type name after the last '/'

              in the type URL, for example "foo.bar.com/modules/y.z" will yield
              type

              name "y.z".



              JSON

              ====

              The JSON representation of an `Any` value uses the regular

              representation of the deserialized, embedded message, with an

              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON

              representation, that representation will be embedded adding a
              field

              `value` which holds the custom JSON in addition to the `@type`

              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
          status:
            type: string
            enum:
              - PROPOSAL_STATUS_UNSPECIFIED
              - PROPOSAL_STATUS_DEPOSIT_PERIOD
              - PROPOSAL_STATUS_VOTING_PERIOD
              - PROPOSAL_STATUS_PASSED
              - PROPOSAL_STATUS_REJECTED
              - PROPOSAL_STATUS_FAILED
            default: PROPOSAL_STATUS_UNSPECIFIED
            description: |-
              ProposalStatus enumerates the valid statuses of a proposal.

               - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.
               - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
              period.
               - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
              period.
               - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
              passed.
               - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
              been rejected.
               - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
              failed.
          final_tally_result:
            type: object
            properties:
              'yes':
                type: string
              abstain:
                type: string
              'no':
                type: string
              no_with_veto:
                type: string
            description: TallyResult defines a standard tally for a governance proposal.
          submit_time:
            type: string
            format: date-time
          deposit_end_time:
            type: string
            format: date-time
          total_deposit:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
          voting_start_time:
            type: string
            format: date-time
          voting_end_time:
            type: string
            format: date-time
        description: Proposal defines the core field members of a governance proposal.
    description: >-
      QueryProposalResponse is the response type for the Query/Proposal RPC
      method.
  cosmos.gov.v1beta1.QueryProposalsResponse:
    type: object
    properties:
      proposals:
        type: array
        items:
          type: object
          properties:
            proposal_id:
              type: string
              format: uint64
            content:
              type: object
              properties:
                type_url:
                  type: string
                  description: >-
                    A URL/resource name that uniquely identifies the type of the
                    serialized

                    protocol buffer message. This string must contain at least

                    one "/" character. The last segment of the URL's path must
                    represent

                    the fully qualified name of the type (as in

                    `path/google.protobuf.Duration`). The name should be in a
                    canonical form

                    (e.g., leading "." is not accepted).


                    In practice, teams usually precompile into the binary all
                    types that they

                    expect it to use in the context of Any. However, for URLs
                    which use the

                    scheme `http`, `https`, or no scheme, one can optionally set
                    up a type

                    server that maps type URLs to message definitions as
                    follows:


                    * If no scheme is provided, `https` is assumed.

                    * An HTTP GET on the URL must yield a
                    [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on
                    the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the
                    official

                    protobuf release, and it is not used for type URLs beginning
                    with

                    type.googleapis.com.


                    Schemes other than `http`, `https` (or the empty scheme)
                    might be

                    used with implementation specific semantics.
                value:
                  type: string
                  format: byte
                  description: >-
                    Must be a valid serialized protocol buffer of the above
                    specified type.
              description: >-
                `Any` contains an arbitrary serialized protocol buffer message
                along with a

                URL that describes the type of the serialized message.


                Protobuf library provides support to pack/unpack Any values in
                the form

                of utility functions or additional generated methods of the Any
                type.


                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                 Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                 Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := ptypes.MarshalAny(foo)
                     ...
                     foo := &pb.Foo{}
                     if err := ptypes.UnmarshalAny(any, foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default
                use

                'type.googleapis.com/full.type.name' as the type URL and the
                unpack

                methods only use the fully qualified type name after the last
                '/'

                in the type URL, for example "foo.bar.com/modules/y.z" will
                yield type

                name "y.z".



                JSON

                ====

                The JSON representation of an `Any` value uses the regular

                representation of the deserialized, embedded message, with an

                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON

                representation, that representation will be embedded adding a
                field

                `value` which holds the custom JSON in addition to the `@type`

                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
            status:
              type: string
              enum:
                - PROPOSAL_STATUS_UNSPECIFIED
                - PROPOSAL_STATUS_DEPOSIT_PERIOD
                - PROPOSAL_STATUS_VOTING_PERIOD
                - PROPOSAL_STATUS_PASSED
                - PROPOSAL_STATUS_REJECTED
                - PROPOSAL_STATUS_FAILED
              default: PROPOSAL_STATUS_UNSPECIFIED
              description: |-
                ProposalStatus enumerates the valid statuses of a proposal.

                 - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.
                 - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
                period.
                 - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
                period.
                 - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
                passed.
                 - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
                been rejected.
                 - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
                failed.
            final_tally_result:
              type: object
              properties:
                'yes':
                  type: string
                abstain:
                  type: string
                'no':
                  type: string
                no_with_veto:
                  type: string
              description: TallyResult defines a standard tally for a governance proposal.
            submit_time:
              type: string
              format: date-time
            deposit_end_time:
              type: string
              format: date-time
            total_deposit:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
            voting_start_time:
              type: string
              format: date-time
            voting_end_time:
              type: string
              format: date-time
          description: Proposal defines the core field members of a governance proposal.
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: |-
      QueryProposalsResponse is the response type for the Query/Proposals RPC
      method.
  cosmos.gov.v1beta1.QueryTallyResultResponse:
    type: object
    properties:
      tally:
        description: tally defines the requested tally.
        type: object
        properties:
          'yes':
            type: string
          abstain:
            type: string
          'no':
            type: string
          no_with_veto:
            type: string
    description: >-
      QueryTallyResultResponse is the response type for the Query/Tally RPC
      method.
  cosmos.gov.v1beta1.QueryVoteResponse:
    type: object
    properties:
      vote:
        description: vote defined the queried vote.
        type: object
        properties:
          proposal_id:
            type: string
            format: uint64
          voter:
            type: string
          option:
            type: string
            enum:
              - VOTE_OPTION_UNSPECIFIED
              - VOTE_OPTION_YES
              - VOTE_OPTION_ABSTAIN
              - VOTE_OPTION_NO
              - VOTE_OPTION_NO_WITH_VETO
            default: VOTE_OPTION_UNSPECIFIED
            description: >-
              VoteOption enumerates the valid vote options for a given
              governance proposal.

               - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
               - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
               - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
               - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
               - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
    description: QueryVoteResponse is the response type for the Query/Vote RPC method.
  cosmos.gov.v1beta1.QueryVotesResponse:
    type: object
    properties:
      votes:
        type: array
        items:
          type: object
          properties:
            proposal_id:
              type: string
              format: uint64
            voter:
              type: string
            option:
              type: string
              enum:
                - VOTE_OPTION_UNSPECIFIED
                - VOTE_OPTION_YES
                - VOTE_OPTION_ABSTAIN
                - VOTE_OPTION_NO
                - VOTE_OPTION_NO_WITH_VETO
              default: VOTE_OPTION_UNSPECIFIED
              description: >-
                VoteOption enumerates the valid vote options for a given
                governance proposal.

                 - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
                 - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
                 - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
                 - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
                 - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
          description: |-
            Vote defines a vote on a governance proposal.
            A Vote consists of a proposal ID, the voter, and the vote option.
        description: votes defined the queried votes.
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: QueryVotesResponse is the response type for the Query/Votes RPC method.
  cosmos.gov.v1beta1.TallyParams:
    type: object
    properties:
      quorum:
        type: string
        format: byte
        description: |-
          Minimum percentage of total stake needed to vote for a result to be
           considered valid.
      threshold:
        type: string
        format: byte
        description: >-
          Minimum proportion of Yes votes for proposal to pass. Default value:
          0.5.
      veto_threshold:
        type: string
        format: byte
        description: |-
          Minimum value of Veto votes to Total votes ratio for proposal to be
           vetoed. Default value: 1/3.
    description: TallyParams defines the params for tallying votes on governance proposals.
  cosmos.gov.v1beta1.TallyResult:
    type: object
    properties:
      'yes':
        type: string
      abstain:
        type: string
      'no':
        type: string
      no_with_veto:
        type: string
    description: TallyResult defines a standard tally for a governance proposal.
  cosmos.gov.v1beta1.Vote:
    type: object
    properties:
      proposal_id:
        type: string
        format: uint64
      voter:
        type: string
      option:
        type: string
        enum:
          - VOTE_OPTION_UNSPECIFIED
          - VOTE_OPTION_YES
          - VOTE_OPTION_ABSTAIN
          - VOTE_OPTION_NO
          - VOTE_OPTION_NO_WITH_VETO
        default: VOTE_OPTION_UNSPECIFIED
        description: >-
          VoteOption enumerates the valid vote options for a given governance
          proposal.

           - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
           - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
           - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
           - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
           - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
    description: |-
      Vote defines a vote on a governance proposal.
      A Vote consists of a proposal ID, the voter, and the vote option.
  cosmos.gov.v1beta1.VoteOption:
    type: string
    enum:
      - VOTE_OPTION_UNSPECIFIED
      - VOTE_OPTION_YES
      - VOTE_OPTION_ABSTAIN
      - VOTE_OPTION_NO
      - VOTE_OPTION_NO_WITH_VETO
    default: VOTE_OPTION_UNSPECIFIED
    description: >-
      VoteOption enumerates the valid vote options for a given governance
      proposal.

       - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
       - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.
       - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.
       - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.
       - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
  cosmos.gov.v1beta1.VotingParams:
    type: object
    properties:
      voting_period:
        type: string
        description: Length of the voting period.
    description: VotingParams defines the params for voting on governance proposals.
  cosmos.staking.v1beta1.BondStatus:
    type: string
    enum:
      - BOND_STATUS_UNSPECIFIED
      - BOND_STATUS_UNBONDED
      - BOND_STATUS_UNBONDING
      - BOND_STATUS_BONDED
    default: BOND_STATUS_UNSPECIFIED
    description: |-
      BondStatus is the status of a validator.

       - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.
       - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.
       - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.
       - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.
  cosmos.staking.v1beta1.Commission:
    type: object
    properties:
      commission_rates:
        type: object
        properties:
          rate:
            type: string
          max_rate:
            type: string
          max_change_rate:
            type: string
        description: >-
          CommissionRates defines the initial commission rates to be used for
          creating

          a validator.
      update_time:
        type: string
        format: date-time
    description: Commission defines commission parameters for a given validator.
  cosmos.staking.v1beta1.CommissionRates:
    type: object
    properties:
      rate:
        type: string
      max_rate:
        type: string
      max_change_rate:
        type: string
    description: >-
      CommissionRates defines the initial commission rates to be used for
      creating

      a validator.
  cosmos.staking.v1beta1.Delegation:
    type: object
    properties:
      delegator_address:
        type: string
      validator_address:
        type: string
      shares:
        type: string
    description: |-
      Delegation represents the bond with tokens held by an account. It is
      owned by one delegator, and is associated with the voting power of one
      validator.
  cosmos.staking.v1beta1.DelegationResponse:
    type: object
    properties:
      delegation:
        type: object
        properties:
          delegator_address:
            type: string
          validator_address:
            type: string
          shares:
            type: string
        description: |-
          Delegation represents the bond with tokens held by an account. It is
          owned by one delegator, and is associated with the voting power of one
          validator.
      balance:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
    description: |-
      DelegationResponse is equivalent to Delegation except that it contains a
      balance in addition to shares which is more suitable for client responses.
  cosmos.staking.v1beta1.Description:
    type: object
    properties:
      moniker:
        type: string
      identity:
        type: string
      website:
        type: string
      security_contact:
        type: string
      details:
        type: string
    description: Description defines a validator description.
  cosmos.staking.v1beta1.HistoricalInfo:
    type: object
    properties:
      header:
        type: object
        properties:
          version:
            title: basic block info
            type: object
            properties:
              block:
                type: string
                format: uint64
              app:
                type: string
                format: uint64
            description: >-
              Consensus captures the consensus rules for processing a block in
              the blockchain,

              including all blockchain data structures and the rules of the
              application's

              state transition machine.
          chain_id:
            type: string
          height:
            type: string
            format: int64
          time:
            type: string
            format: date-time
          last_block_id:
            title: prev block info
            type: object
            properties:
              hash:
                type: string
                format: byte
              part_set_header:
                type: object
                properties:
                  total:
                    type: integer
                    format: int64
                  hash:
                    type: string
                    format: byte
                title: PartsetHeader
          last_commit_hash:
            type: string
            format: byte
            title: hashes of block data
          data_hash:
            type: string
            format: byte
          validators_hash:
            type: string
            format: byte
            title: hashes from the app output from the prev block
          next_validators_hash:
            type: string
            format: byte
          consensus_hash:
            type: string
            format: byte
          app_hash:
            type: string
            format: byte
          last_results_hash:
            type: string
            format: byte
          evidence_hash:
            type: string
            format: byte
            title: consensus info
          proposer_address:
            type: string
            format: byte
        description: Header defines the structure of a Tendermint block header.
      valset:
        type: array
        items:
          type: object
          properties:
            operator_address:
              type: string
            consensus_pubkey:
              type: object
              properties:
                type_url:
                  type: string
                  description: >-
                    A URL/resource name that uniquely identifies the type of the
                    serialized

                    protocol buffer message. This string must contain at least

                    one "/" character. The last segment of the URL's path must
                    represent

                    the fully qualified name of the type (as in

                    `path/google.protobuf.Duration`). The name should be in a
                    canonical form

                    (e.g., leading "." is not accepted).


                    In practice, teams usually precompile into the binary all
                    types that they

                    expect it to use in the context of Any. However, for URLs
                    which use the

                    scheme `http`, `https`, or no scheme, one can optionally set
                    up a type

                    server that maps type URLs to message definitions as
                    follows:


                    * If no scheme is provided, `https` is assumed.

                    * An HTTP GET on the URL must yield a
                    [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on
                    the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the
                    official

                    protobuf release, and it is not used for type URLs beginning
                    with

                    type.googleapis.com.


                    Schemes other than `http`, `https` (or the empty scheme)
                    might be

                    used with implementation specific semantics.
                value:
                  type: string
                  format: byte
                  description: >-
                    Must be a valid serialized protocol buffer of the above
                    specified type.
              description: >-
                `Any` contains an arbitrary serialized protocol buffer message
                along with a

                URL that describes the type of the serialized message.


                Protobuf library provides support to pack/unpack Any values in
                the form

                of utility functions or additional generated methods of the Any
                type.


                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                 Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                 Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := ptypes.MarshalAny(foo)
                     ...
                     foo := &pb.Foo{}
                     if err := ptypes.UnmarshalAny(any, foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default
                use

                'type.googleapis.com/full.type.name' as the type URL and the
                unpack

                methods only use the fully qualified type name after the last
                '/'

                in the type URL, for example "foo.bar.com/modules/y.z" will
                yield type

                name "y.z".



                JSON

                ====

                The JSON representation of an `Any` value uses the regular

                representation of the deserialized, embedded message, with an

                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON

                representation, that representation will be embedded adding a
                field

                `value` which holds the custom JSON in addition to the `@type`

                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
            jailed:
              type: boolean
            status:
              type: string
              enum:
                - BOND_STATUS_UNSPECIFIED
                - BOND_STATUS_UNBONDED
                - BOND_STATUS_UNBONDING
                - BOND_STATUS_BONDED
              default: BOND_STATUS_UNSPECIFIED
              description: |-
                BondStatus is the status of a validator.

                 - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.
                 - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.
                 - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.
                 - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.
            tokens:
              type: string
            delegator_shares:
              type: string
            description:
              type: object
              properties:
                moniker:
                  type: string
                identity:
                  type: string
                website:
                  type: string
                security_contact:
                  type: string
                details:
                  type: string
              description: Description defines a validator description.
            unbonding_height:
              type: string
              format: int64
            unbonding_time:
              type: string
              format: date-time
            commission:
              type: object
              properties:
                commission_rates:
                  type: object
                  properties:
                    rate:
                      type: string
                    max_rate:
                      type: string
                    max_change_rate:
                      type: string
                  description: >-
                    CommissionRates defines the initial commission rates to be
                    used for creating

                    a validator.
                update_time:
                  type: string
                  format: date-time
              description: Commission defines commission parameters for a given validator.
            min_self_delegation:
              type: string
          description: >-
            Validator defines a validator, together with the total amount of the

            Validator's bond shares and their exchange rate to coins. Slashing
            results in

            a decrease in the exchange rate, allowing correct calculation of
            future

            undelegations without iterating over delegators. When coins are
            delegated to

            this validator, the validator is credited with a delegation whose
            number of

            bond shares is based on the amount of coins delegated divided by the
            current

            exchange rate. Voting power can be calculated as total bonded shares

            multiplied by exchange rate.
    description: >-
      HistoricalInfo contains header and validator information for a given
      block.

      It is stored as part of staking module's state, which persists the `n`
      most

      recent HistoricalInfo

      (`n` is set by the staking module's `historical_entries` parameter).
  cosmos.staking.v1beta1.Params:
    type: object
    properties:
      unbonding_time:
        type: string
      max_validators:
        type: integer
        format: int64
      max_entries:
        type: integer
        format: int64
      historical_entries:
        type: integer
        format: int64
      bond_denom:
        type: string
    description: Params defines the parameters for the staking module.
  cosmos.staking.v1beta1.Pool:
    type: object
    properties:
      not_bonded_tokens:
        type: string
      bonded_tokens:
        type: string
    description: |-
      Pool is used for tracking bonded and not-bonded token supply of the bond
      denomination.
  cosmos.staking.v1beta1.QueryDelegationResponse:
    type: object
    properties:
      delegation_response:
        description: delegation_responses defines the delegation info of a delegation.
        type: object
        properties:
          delegation:
            type: object
            properties:
              delegator_address:
                type: string
              validator_address:
                type: string
              shares:
                type: string
            description: >-
              Delegation represents the bond with tokens held by an account. It
              is

              owned by one delegator, and is associated with the voting power of
              one

              validator.
          balance:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
    description: >-
      QueryDelegationResponse is response type for the Query/Delegation RPC
      method.
  cosmos.staking.v1beta1.QueryDelegatorDelegationsResponse:
    type: object
    properties:
      delegation_responses:
        type: array
        items:
          type: object
          properties:
            delegation:
              type: object
              properties:
                delegator_address:
                  type: string
                validator_address:
                  type: string
                shares:
                  type: string
              description: >-
                Delegation represents the bond with tokens held by an account.
                It is

                owned by one delegator, and is associated with the voting power
                of one

                validator.
            balance:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
          description: >-
            DelegationResponse is equivalent to Delegation except that it
            contains a

            balance in addition to shares which is more suitable for client
            responses.
        description: delegation_responses defines all the delegations' info of a delegator.
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: |-
      QueryDelegatorDelegationsResponse is response type for the
      Query/DelegatorDelegations RPC method.
  cosmos.staking.v1beta1.QueryDelegatorUnbondingDelegationsResponse:
    type: object
    properties:
      unbonding_responses:
        type: array
        items:
          type: object
          properties:
            delegator_address:
              type: string
            validator_address:
              type: string
            entries:
              type: array
              items:
                type: object
                properties:
                  creation_height:
                    type: string
                    format: int64
                  completion_time:
                    type: string
                    format: date-time
                  initial_balance:
                    type: string
                  balance:
                    type: string
                description: >-
                  UnbondingDelegationEntry defines an unbonding object with
                  relevant metadata.
          description: >-
            UnbondingDelegation stores all of a single delegator's unbonding
            bonds

            for a single validator in an time-ordered list.
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: |-
      QueryUnbondingDelegatorDelegationsResponse is response type for the
      Query/UnbondingDelegatorDelegations RPC method.
  cosmos.staking.v1beta1.QueryDelegatorValidatorResponse:
    type: object
    properties:
      validator:
        description: validator defines the the validator info.
        type: object
        properties:
          operator_address:
            type: string
          consensus_pubkey:
            type: object
            properties:
              type_url:
                type: string
                description: >-
                  A URL/resource name that uniquely identifies the type of the
                  serialized

                  protocol buffer message. This string must contain at least

                  one "/" character. The last segment of the URL's path must
                  represent

                  the fully qualified name of the type (as in

                  `path/google.protobuf.Duration`). The name should be in a
                  canonical form

                  (e.g., leading "." is not accepted).


                  In practice, teams usually precompile into the binary all
                  types that they

                  expect it to use in the context of Any. However, for URLs
                  which use the

                  scheme `http`, `https`, or no scheme, one can optionally set
                  up a type

                  server that maps type URLs to message definitions as follows:


                  * If no scheme is provided, `https` is assumed.

                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on
                  the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the
                  official

                  protobuf release, and it is not used for type URLs beginning
                  with

                  type.googleapis.com.


                  Schemes other than `http`, `https` (or the empty scheme) might
                  be

                  used with implementation specific semantics.
              value:
                type: string
                format: byte
                description: >-
                  Must be a valid serialized protocol buffer of the above
                  specified type.
            description: >-
              `Any` contains an arbitrary serialized protocol buffer message
              along with a

              URL that describes the type of the serialized message.


              Protobuf library provides support to pack/unpack Any values in the
              form

              of utility functions or additional generated methods of the Any
              type.


              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

               Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

               Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := ptypes.MarshalAny(foo)
                   ...
                   foo := &pb.Foo{}
                   if err := ptypes.UnmarshalAny(any, foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use

              'type.googleapis.com/full.type.name' as the type URL and the
              unpack

              methods only use the fully qualified type name after the last '/'

              in the type URL, for example "foo.bar.com/modules/y.z" will yield
              type

              name "y.z".



              JSON

              ====

              The JSON representation of an `Any` value uses the regular

              representation of the deserialized, embedded message, with an

              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON

              representation, that representation will be embedded adding a
              field

              `value` which holds the custom JSON in addition to the `@type`

              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
          jailed:
            type: boolean
          status:
            type: string
            enum:
              - BOND_STATUS_UNSPECIFIED
              - BOND_STATUS_UNBONDED
              - BOND_STATUS_UNBONDING
              - BOND_STATUS_BONDED
            default: BOND_STATUS_UNSPECIFIED
            description: |-
              BondStatus is the status of a validator.

               - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.
               - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.
               - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.
               - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.
          tokens:
            type: string
          delegator_shares:
            type: string
          description:
            type: object
            properties:
              moniker:
                type: string
              identity:
                type: string
              website:
                type: string
              security_contact:
                type: string
              details:
                type: string
            description: Description defines a validator description.
          unbonding_height:
            type: string
            format: int64
          unbonding_time:
            type: string
            format: date-time
          commission:
            type: object
            properties:
              commission_rates:
                type: object
                properties:
                  rate:
                    type: string
                  max_rate:
                    type: string
                  max_change_rate:
                    type: string
                description: >-
                  CommissionRates defines the initial commission rates to be
                  used for creating

                  a validator.
              update_time:
                type: string
                format: date-time
            description: Commission defines commission parameters for a given validator.
          min_self_delegation:
            type: string
    description: |-
      QueryDelegatorValidatorResponse response type for the
      Query/DelegatorValidator RPC method.
  cosmos.staking.v1beta1.QueryDelegatorValidatorsResponse:
    type: object
    properties:
      validators:
        type: array
        items:
          type: object
          properties:
            operator_address:
              type: string
            consensus_pubkey:
              type: object
              properties:
                type_url:
                  type: string
                  description: >-
                    A URL/resource name that uniquely identifies the type of the
                    serialized

                    protocol buffer message. This string must contain at least

                    one "/" character. The last segment of the URL's path must
                    represent

                    the fully qualified name of the type (as in

                    `path/google.protobuf.Duration`). The name should be in a
                    canonical form

                    (e.g., leading "." is not accepted).


                    In practice, teams usually precompile into the binary all
                    types that they

                    expect it to use in the context of Any. However, for URLs
                    which use the

                    scheme `http`, `https`, or no scheme, one can optionally set
                    up a type

                    server that maps type URLs to message definitions as
                    follows:


                    * If no scheme is provided, `https` is assumed.

                    * An HTTP GET on the URL must yield a
                    [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on
                    the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the
                    official

                    protobuf release, and it is not used for type URLs beginning
                    with

                    type.googleapis.com.


                    Schemes other than `http`, `https` (or the empty scheme)
                    might be

                    used with implementation specific semantics.
                value:
                  type: string
                  format: byte
                  description: >-
                    Must be a valid serialized protocol buffer of the above
                    specified type.
              description: >-
                `Any` contains an arbitrary serialized protocol buffer message
                along with a

                URL that describes the type of the serialized message.


                Protobuf library provides support to pack/unpack Any values in
                the form

                of utility functions or additional generated methods of the Any
                type.


                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                 Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                 Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := ptypes.MarshalAny(foo)
                     ...
                     foo := &pb.Foo{}
                     if err := ptypes.UnmarshalAny(any, foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default
                use

                'type.googleapis.com/full.type.name' as the type URL and the
                unpack

                methods only use the fully qualified type name after the last
                '/'

                in the type URL, for example "foo.bar.com/modules/y.z" will
                yield type

                name "y.z".



                JSON

                ====

                The JSON representation of an `Any` value uses the regular

                representation of the deserialized, embedded message, with an

                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON

                representation, that representation will be embedded adding a
                field

                `value` which holds the custom JSON in addition to the `@type`

                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
            jailed:
              type: boolean
            status:
              type: string
              enum:
                - BOND_STATUS_UNSPECIFIED
                - BOND_STATUS_UNBONDED
                - BOND_STATUS_UNBONDING
                - BOND_STATUS_BONDED
              default: BOND_STATUS_UNSPECIFIED
              description: |-
                BondStatus is the status of a validator.

                 - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.
                 - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.
                 - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.
                 - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.
            tokens:
              type: string
            delegator_shares:
              type: string
            description:
              type: object
              properties:
                moniker:
                  type: string
                identity:
                  type: string
                website:
                  type: string
                security_contact:
                  type: string
                details:
                  type: string
              description: Description defines a validator description.
            unbonding_height:
              type: string
              format: int64
            unbonding_time:
              type: string
              format: date-time
            commission:
              type: object
              properties:
                commission_rates:
                  type: object
                  properties:
                    rate:
                      type: string
                    max_rate:
                      type: string
                    max_change_rate:
                      type: string
                  description: >-
                    CommissionRates defines the initial commission rates to be
                    used for creating

                    a validator.
                update_time:
                  type: string
                  format: date-time
              description: Commission defines commission parameters for a given validator.
            min_self_delegation:
              type: string
          description: >-
            Validator defines a validator, together with the total amount of the

            Validator's bond shares and their exchange rate to coins. Slashing
            results in

            a decrease in the exchange rate, allowing correct calculation of
            future

            undelegations without iterating over delegators. When coins are
            delegated to

            this validator, the validator is credited with a delegation whose
            number of

            bond shares is based on the amount of coins delegated divided by the
            current

            exchange rate. Voting power can be calculated as total bonded shares

            multiplied by exchange rate.
        description: validators defines the the validators' info of a delegator.
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: |-
      QueryDelegatorValidatorsResponse is response type for the
      Query/DelegatorValidators RPC method.
  cosmos.staking.v1beta1.QueryHistoricalInfoResponse:
    type: object
    properties:
      hist:
        description: hist defines the historical info at the given height.
        type: object
        properties:
          header:
            type: object
            properties:
              version:
                title: basic block info
                type: object
                properties:
                  block:
                    type: string
                    format: uint64
                  app:
                    type: string
                    format: uint64
                description: >-
                  Consensus captures the consensus rules for processing a block
                  in the blockchain,

                  including all blockchain data structures and the rules of the
                  application's

                  state transition machine.
              chain_id:
                type: string
              height:
                type: string
                format: int64
              time:
                type: string
                format: date-time
              last_block_id:
                title: prev block info
                type: object
                properties:
                  hash:
                    type: string
                    format: byte
                  part_set_header:
                    type: object
                    properties:
                      total:
                        type: integer
                        format: int64
                      hash:
                        type: string
                        format: byte
                    title: PartsetHeader
              last_commit_hash:
                type: string
                format: byte
                title: hashes of block data
              data_hash:
                type: string
                format: byte
              validators_hash:
                type: string
                format: byte
                title: hashes from the app output from the prev block
              next_validators_hash:
                type: string
                format: byte
              consensus_hash:
                type: string
                format: byte
              app_hash:
                type: string
                format: byte
              last_results_hash:
                type: string
                format: byte
              evidence_hash:
                type: string
                format: byte
                title: consensus info
              proposer_address:
                type: string
                format: byte
            description: Header defines the structure of a Tendermint block header.
          valset:
            type: array
            items:
              type: object
              properties:
                operator_address:
                  type: string
                consensus_pubkey:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/modules/y.z" will
                    yield type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
                jailed:
                  type: boolean
                status:
                  type: string
                  enum:
                    - BOND_STATUS_UNSPECIFIED
                    - BOND_STATUS_UNBONDED
                    - BOND_STATUS_UNBONDING
                    - BOND_STATUS_BONDED
                  default: BOND_STATUS_UNSPECIFIED
                  description: |-
                    BondStatus is the status of a validator.

                     - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.
                     - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.
                     - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.
                     - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.
                tokens:
                  type: string
                delegator_shares:
                  type: string
                description:
                  type: object
                  properties:
                    moniker:
                      type: string
                    identity:
                      type: string
                    website:
                      type: string
                    security_contact:
                      type: string
                    details:
                      type: string
                  description: Description defines a validator description.
                unbonding_height:
                  type: string
                  format: int64
                unbonding_time:
                  type: string
                  format: date-time
                commission:
                  type: object
                  properties:
                    commission_rates:
                      type: object
                      properties:
                        rate:
                          type: string
                        max_rate:
                          type: string
                        max_change_rate:
                          type: string
                      description: >-
                        CommissionRates defines the initial commission rates to
                        be used for creating

                        a validator.
                    update_time:
                      type: string
                      format: date-time
                  description: >-
                    Commission defines commission parameters for a given
                    validator.
                min_self_delegation:
                  type: string
              description: >-
                Validator defines a validator, together with the total amount of
                the

                Validator's bond shares and their exchange rate to coins.
                Slashing results in

                a decrease in the exchange rate, allowing correct calculation of
                future

                undelegations without iterating over delegators. When coins are
                delegated to

                this validator, the validator is credited with a delegation
                whose number of

                bond shares is based on the amount of coins delegated divided by
                the current

                exchange rate. Voting power can be calculated as total bonded
                shares

                multiplied by exchange rate.
    description: >-
      QueryHistoricalInfoResponse is response type for the Query/HistoricalInfo
      RPC

      method.
  cosmos.staking.v1beta1.QueryParamsResponse:
    type: object
    properties:
      params:
        description: params holds all the parameters of this module.
        type: object
        properties:
          unbonding_time:
            type: string
          max_validators:
            type: integer
            format: int64
          max_entries:
            type: integer
            format: int64
          historical_entries:
            type: integer
            format: int64
          bond_denom:
            type: string
    description: QueryParamsResponse is response type for the Query/Params RPC method.
  cosmos.staking.v1beta1.QueryPoolResponse:
    type: object
    properties:
      pool:
        description: pool defines the pool info.
        type: object
        properties:
          not_bonded_tokens:
            type: string
          bonded_tokens:
            type: string
    description: QueryPoolResponse is response type for the Query/Pool RPC method.
  cosmos.staking.v1beta1.QueryRedelegationsResponse:
    type: object
    properties:
      redelegation_responses:
        type: array
        items:
          type: object
          properties:
            redelegation:
              type: object
              properties:
                delegator_address:
                  type: string
                validator_src_address:
                  type: string
                validator_dst_address:
                  type: string
                entries:
                  type: array
                  items:
                    type: object
                    properties:
                      creation_height:
                        type: string
                        format: int64
                      completion_time:
                        type: string
                        format: date-time
                      initial_balance:
                        type: string
                      shares_dst:
                        type: string
                    description: >-
                      RedelegationEntry defines a redelegation object with
                      relevant metadata.
              description: >-
                Redelegation contains the list of a particular delegator's
                redelegating bonds

                from a particular source validator to a particular destination
                validator.
            entries:
              type: array
              items:
                type: object
                properties:
                  redelegation_entry:
                    type: object
                    properties:
                      creation_height:
                        type: string
                        format: int64
                      completion_time:
                        type: string
                        format: date-time
                      initial_balance:
                        type: string
                      shares_dst:
                        type: string
                    description: >-
                      RedelegationEntry defines a redelegation object with
                      relevant metadata.
                  balance:
                    type: string
                description: >-
                  RedelegationEntryResponse is equivalent to a RedelegationEntry
                  except that it

                  contains a balance in addition to shares which is more
                  suitable for client

                  responses.
          description: >-
            RedelegationResponse is equivalent to a Redelegation except that its
            entries

            contain a balance in addition to shares which is more suitable for
            client

            responses.
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: >-
      QueryRedelegationsResponse is response type for the Query/Redelegations
      RPC

      method.
  cosmos.staking.v1beta1.QueryUnbondingDelegationResponse:
    type: object
    properties:
      unbond:
        description: unbond defines the unbonding information of a delegation.
        type: object
        properties:
          delegator_address:
            type: string
          validator_address:
            type: string
          entries:
            type: array
            items:
              type: object
              properties:
                creation_height:
                  type: string
                  format: int64
                completion_time:
                  type: string
                  format: date-time
                initial_balance:
                  type: string
                balance:
                  type: string
              description: >-
                UnbondingDelegationEntry defines an unbonding object with
                relevant metadata.
    description: |-
      QueryDelegationResponse is response type for the Query/UnbondingDelegation
      RPC method.
  cosmos.staking.v1beta1.QueryValidatorDelegationsResponse:
    type: object
    properties:
      delegation_responses:
        type: array
        items:
          type: object
          properties:
            delegation:
              type: object
              properties:
                delegator_address:
                  type: string
                validator_address:
                  type: string
                shares:
                  type: string
              description: >-
                Delegation represents the bond with tokens held by an account.
                It is

                owned by one delegator, and is associated with the voting power
                of one

                validator.
            balance:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
          description: >-
            DelegationResponse is equivalent to Delegation except that it
            contains a

            balance in addition to shares which is more suitable for client
            responses.
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    title: |-
      QueryValidatorDelegationsResponse is response type for the
      Query/ValidatorDelegations RPC method
  cosmos.staking.v1beta1.QueryValidatorResponse:
    type: object
    properties:
      validator:
        description: validator defines the the validator info.
        type: object
        properties:
          operator_address:
            type: string
          consensus_pubkey:
            type: object
            properties:
              type_url:
                type: string
                description: >-
                  A URL/resource name that uniquely identifies the type of the
                  serialized

                  protocol buffer message. This string must contain at least

                  one "/" character. The last segment of the URL's path must
                  represent

                  the fully qualified name of the type (as in

                  `path/google.protobuf.Duration`). The name should be in a
                  canonical form

                  (e.g., leading "." is not accepted).


                  In practice, teams usually precompile into the binary all
                  types that they

                  expect it to use in the context of Any. However, for URLs
                  which use the

                  scheme `http`, `https`, or no scheme, one can optionally set
                  up a type

                  server that maps type URLs to message definitions as follows:


                  * If no scheme is provided, `https` is assumed.

                  * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                    value in binary format, or produce an error.
                  * Applications are allowed to cache lookup results based on
                  the
                    URL, or have them precompiled into a binary to avoid any
                    lookup. Therefore, binary compatibility needs to be preserved
                    on changes to types. (Use versioned type names to manage
                    breaking changes.)

                  Note: this functionality is not currently available in the
                  official

                  protobuf release, and it is not used for type URLs beginning
                  with

                  type.googleapis.com.


                  Schemes other than `http`, `https` (or the empty scheme) might
                  be

                  used with implementation specific semantics.
              value:
                type: string
                format: byte
                description: >-
                  Must be a valid serialized protocol buffer of the above
                  specified type.
            description: >-
              `Any` contains an arbitrary serialized protocol buffer message
              along with a

              URL that describes the type of the serialized message.


              Protobuf library provides support to pack/unpack Any values in the
              form

              of utility functions or additional generated methods of the Any
              type.


              Example 1: Pack and unpack a message in C++.

                  Foo foo = ...;
                  Any any;
                  any.PackFrom(foo);
                  ...
                  if (any.UnpackTo(&foo)) {
                    ...
                  }

              Example 2: Pack and unpack a message in Java.

                  Foo foo = ...;
                  Any any = Any.pack(foo);
                  ...
                  if (any.is(Foo.class)) {
                    foo = any.unpack(Foo.class);
                  }

               Example 3: Pack and unpack a message in Python.

                  foo = Foo(...)
                  any = Any()
                  any.Pack(foo)
                  ...
                  if any.Is(Foo.DESCRIPTOR):
                    any.Unpack(foo)
                    ...

               Example 4: Pack and unpack a message in Go

                   foo := &pb.Foo{...}
                   any, err := ptypes.MarshalAny(foo)
                   ...
                   foo := &pb.Foo{}
                   if err := ptypes.UnmarshalAny(any, foo); err != nil {
                     ...
                   }

              The pack methods provided by protobuf library will by default use

              'type.googleapis.com/full.type.name' as the type URL and the
              unpack

              methods only use the fully qualified type name after the last '/'

              in the type URL, for example "foo.bar.com/modules/y.z" will yield
              type

              name "y.z".



              JSON

              ====

              The JSON representation of an `Any` value uses the regular

              representation of the deserialized, embedded message, with an

              additional field `@type` which contains the type URL. Example:

                  package google.profile;
                  message Person {
                    string first_name = 1;
                    string last_name = 2;
                  }

                  {
                    "@type": "type.googleapis.com/google.profile.Person",
                    "firstName": <string>,
                    "lastName": <string>
                  }

              If the embedded message type is well-known and has a custom JSON

              representation, that representation will be embedded adding a
              field

              `value` which holds the custom JSON in addition to the `@type`

              field. Example (for message [google.protobuf.Duration][]):

                  {
                    "@type": "type.googleapis.com/google.protobuf.Duration",
                    "value": "1.212s"
                  }
          jailed:
            type: boolean
          status:
            type: string
            enum:
              - BOND_STATUS_UNSPECIFIED
              - BOND_STATUS_UNBONDED
              - BOND_STATUS_UNBONDING
              - BOND_STATUS_BONDED
            default: BOND_STATUS_UNSPECIFIED
            description: |-
              BondStatus is the status of a validator.

               - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.
               - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.
               - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.
               - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.
          tokens:
            type: string
          delegator_shares:
            type: string
          description:
            type: object
            properties:
              moniker:
                type: string
              identity:
                type: string
              website:
                type: string
              security_contact:
                type: string
              details:
                type: string
            description: Description defines a validator description.
          unbonding_height:
            type: string
            format: int64
          unbonding_time:
            type: string
            format: date-time
          commission:
            type: object
            properties:
              commission_rates:
                type: object
                properties:
                  rate:
                    type: string
                  max_rate:
                    type: string
                  max_change_rate:
                    type: string
                description: >-
                  CommissionRates defines the initial commission rates to be
                  used for creating

                  a validator.
              update_time:
                type: string
                format: date-time
            description: Commission defines commission parameters for a given validator.
          min_self_delegation:
            type: string
    title: QueryValidatorResponse is response type for the Query/Validator RPC method
  cosmos.staking.v1beta1.QueryValidatorUnbondingDelegationsResponse:
    type: object
    properties:
      unbonding_responses:
        type: array
        items:
          type: object
          properties:
            delegator_address:
              type: string
            validator_address:
              type: string
            entries:
              type: array
              items:
                type: object
                properties:
                  creation_height:
                    type: string
                    format: int64
                  completion_time:
                    type: string
                    format: date-time
                  initial_balance:
                    type: string
                  balance:
                    type: string
                description: >-
                  UnbondingDelegationEntry defines an unbonding object with
                  relevant metadata.
          description: >-
            UnbondingDelegation stores all of a single delegator's unbonding
            bonds

            for a single validator in an time-ordered list.
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: |-
      QueryValidatorUnbondingDelegationsResponse is response type for the
      Query/ValidatorUnbondingDelegations RPC method.
  cosmos.staking.v1beta1.QueryValidatorsResponse:
    type: object
    properties:
      validators:
        type: array
        items:
          type: object
          properties:
            operator_address:
              type: string
            consensus_pubkey:
              type: object
              properties:
                type_url:
                  type: string
                  description: >-
                    A URL/resource name that uniquely identifies the type of the
                    serialized

                    protocol buffer message. This string must contain at least

                    one "/" character. The last segment of the URL's path must
                    represent

                    the fully qualified name of the type (as in

                    `path/google.protobuf.Duration`). The name should be in a
                    canonical form

                    (e.g., leading "." is not accepted).


                    In practice, teams usually precompile into the binary all
                    types that they

                    expect it to use in the context of Any. However, for URLs
                    which use the

                    scheme `http`, `https`, or no scheme, one can optionally set
                    up a type

                    server that maps type URLs to message definitions as
                    follows:


                    * If no scheme is provided, `https` is assumed.

                    * An HTTP GET on the URL must yield a
                    [google.protobuf.Type][]
                      value in binary format, or produce an error.
                    * Applications are allowed to cache lookup results based on
                    the
                      URL, or have them precompiled into a binary to avoid any
                      lookup. Therefore, binary compatibility needs to be preserved
                      on changes to types. (Use versioned type names to manage
                      breaking changes.)

                    Note: this functionality is not currently available in the
                    official

                    protobuf release, and it is not used for type URLs beginning
                    with

                    type.googleapis.com.


                    Schemes other than `http`, `https` (or the empty scheme)
                    might be

                    used with implementation specific semantics.
                value:
                  type: string
                  format: byte
                  description: >-
                    Must be a valid serialized protocol buffer of the above
                    specified type.
              description: >-
                `Any` contains an arbitrary serialized protocol buffer message
                along with a

                URL that describes the type of the serialized message.


                Protobuf library provides support to pack/unpack Any values in
                the form

                of utility functions or additional generated methods of the Any
                type.


                Example 1: Pack and unpack a message in C++.

                    Foo foo = ...;
                    Any any;
                    any.PackFrom(foo);
                    ...
                    if (any.UnpackTo(&foo)) {
                      ...
                    }

                Example 2: Pack and unpack a message in Java.

                    Foo foo = ...;
                    Any any = Any.pack(foo);
                    ...
                    if (any.is(Foo.class)) {
                      foo = any.unpack(Foo.class);
                    }

                 Example 3: Pack and unpack a message in Python.

                    foo = Foo(...)
                    any = Any()
                    any.Pack(foo)
                    ...
                    if any.Is(Foo.DESCRIPTOR):
                      any.Unpack(foo)
                      ...

                 Example 4: Pack and unpack a message in Go

                     foo := &pb.Foo{...}
                     any, err := ptypes.MarshalAny(foo)
                     ...
                     foo := &pb.Foo{}
                     if err := ptypes.UnmarshalAny(any, foo); err != nil {
                       ...
                     }

                The pack methods provided by protobuf library will by default
                use

                'type.googleapis.com/full.type.name' as the type URL and the
                unpack

                methods only use the fully qualified type name after the last
                '/'

                in the type URL, for example "foo.bar.com/modules/y.z" will
                yield type

                name "y.z".



                JSON

                ====

                The JSON representation of an `Any` value uses the regular

                representation of the deserialized, embedded message, with an

                additional field `@type` which contains the type URL. Example:

                    package google.profile;
                    message Person {
                      string first_name = 1;
                      string last_name = 2;
                    }

                    {
                      "@type": "type.googleapis.com/google.profile.Person",
                      "firstName": <string>,
                      "lastName": <string>
                    }

                If the embedded message type is well-known and has a custom JSON

                representation, that representation will be embedded adding a
                field

                `value` which holds the custom JSON in addition to the `@type`

                field. Example (for message [google.protobuf.Duration][]):

                    {
                      "@type": "type.googleapis.com/google.protobuf.Duration",
                      "value": "1.212s"
                    }
            jailed:
              type: boolean
            status:
              type: string
              enum:
                - BOND_STATUS_UNSPECIFIED
                - BOND_STATUS_UNBONDED
                - BOND_STATUS_UNBONDING
                - BOND_STATUS_BONDED
              default: BOND_STATUS_UNSPECIFIED
              description: |-
                BondStatus is the status of a validator.

                 - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.
                 - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.
                 - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.
                 - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.
            tokens:
              type: string
            delegator_shares:
              type: string
            description:
              type: object
              properties:
                moniker:
                  type: string
                identity:
                  type: string
                website:
                  type: string
                security_contact:
                  type: string
                details:
                  type: string
              description: Description defines a validator description.
            unbonding_height:
              type: string
              format: int64
            unbonding_time:
              type: string
              format: date-time
            commission:
              type: object
              properties:
                commission_rates:
                  type: object
                  properties:
                    rate:
                      type: string
                    max_rate:
                      type: string
                    max_change_rate:
                      type: string
                  description: >-
                    CommissionRates defines the initial commission rates to be
                    used for creating

                    a validator.
                update_time:
                  type: string
                  format: date-time
              description: Commission defines commission parameters for a given validator.
            min_self_delegation:
              type: string
          description: >-
            Validator defines a validator, together with the total amount of the

            Validator's bond shares and their exchange rate to coins. Slashing
            results in

            a decrease in the exchange rate, allowing correct calculation of
            future

            undelegations without iterating over delegators. When coins are
            delegated to

            this validator, the validator is credited with a delegation whose
            number of

            bond shares is based on the amount of coins delegated divided by the
            current

            exchange rate. Voting power can be calculated as total bonded shares

            multiplied by exchange rate.
        description: validators contains all the queried validators.
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    title: >-
      QueryValidatorsResponse is response type for the Query/Validators RPC
      method
  cosmos.staking.v1beta1.Redelegation:
    type: object
    properties:
      delegator_address:
        type: string
      validator_src_address:
        type: string
      validator_dst_address:
        type: string
      entries:
        type: array
        items:
          type: object
          properties:
            creation_height:
              type: string
              format: int64
            completion_time:
              type: string
              format: date-time
            initial_balance:
              type: string
            shares_dst:
              type: string
          description: >-
            RedelegationEntry defines a redelegation object with relevant
            metadata.
    description: >-
      Redelegation contains the list of a particular delegator's redelegating
      bonds

      from a particular source validator to a particular destination validator.
  cosmos.staking.v1beta1.RedelegationEntry:
    type: object
    properties:
      creation_height:
        type: string
        format: int64
      completion_time:
        type: string
        format: date-time
      initial_balance:
        type: string
      shares_dst:
        type: string
    description: RedelegationEntry defines a redelegation object with relevant metadata.
  cosmos.staking.v1beta1.RedelegationEntryResponse:
    type: object
    properties:
      redelegation_entry:
        type: object
        properties:
          creation_height:
            type: string
            format: int64
          completion_time:
            type: string
            format: date-time
          initial_balance:
            type: string
          shares_dst:
            type: string
        description: >-
          RedelegationEntry defines a redelegation object with relevant
          metadata.
      balance:
        type: string
    description: >-
      RedelegationEntryResponse is equivalent to a RedelegationEntry except that
      it

      contains a balance in addition to shares which is more suitable for client

      responses.
  cosmos.staking.v1beta1.RedelegationResponse:
    type: object
    properties:
      redelegation:
        type: object
        properties:
          delegator_address:
            type: string
          validator_src_address:
            type: string
          validator_dst_address:
            type: string
          entries:
            type: array
            items:
              type: object
              properties:
                creation_height:
                  type: string
                  format: int64
                completion_time:
                  type: string
                  format: date-time
                initial_balance:
                  type: string
                shares_dst:
                  type: string
              description: >-
                RedelegationEntry defines a redelegation object with relevant
                metadata.
        description: >-
          Redelegation contains the list of a particular delegator's
          redelegating bonds

          from a particular source validator to a particular destination
          validator.
      entries:
        type: array
        items:
          type: object
          properties:
            redelegation_entry:
              type: object
              properties:
                creation_height:
                  type: string
                  format: int64
                completion_time:
                  type: string
                  format: date-time
                initial_balance:
                  type: string
                shares_dst:
                  type: string
              description: >-
                RedelegationEntry defines a redelegation object with relevant
                metadata.
            balance:
              type: string
          description: >-
            RedelegationEntryResponse is equivalent to a RedelegationEntry
            except that it

            contains a balance in addition to shares which is more suitable for
            client

            responses.
    description: >-
      RedelegationResponse is equivalent to a Redelegation except that its
      entries

      contain a balance in addition to shares which is more suitable for client

      responses.
  cosmos.staking.v1beta1.UnbondingDelegation:
    type: object
    properties:
      delegator_address:
        type: string
      validator_address:
        type: string
      entries:
        type: array
        items:
          type: object
          properties:
            creation_height:
              type: string
              format: int64
            completion_time:
              type: string
              format: date-time
            initial_balance:
              type: string
            balance:
              type: string
          description: >-
            UnbondingDelegationEntry defines an unbonding object with relevant
            metadata.
    description: |-
      UnbondingDelegation stores all of a single delegator's unbonding bonds
      for a single validator in an time-ordered list.
  cosmos.staking.v1beta1.UnbondingDelegationEntry:
    type: object
    properties:
      creation_height:
        type: string
        format: int64
      completion_time:
        type: string
        format: date-time
      initial_balance:
        type: string
      balance:
        type: string
    description: >-
      UnbondingDelegationEntry defines an unbonding object with relevant
      metadata.
  cosmos.staking.v1beta1.Validator:
    type: object
    properties:
      operator_address:
        type: string
      consensus_pubkey:
        type: object
        properties:
          type_url:
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
          value:
            type: string
            format: byte
            description: >-
              Must be a valid serialized protocol buffer of the above specified
              type.
        description: >-
          `Any` contains an arbitrary serialized protocol buffer message along
          with a

          URL that describes the type of the serialized message.


          Protobuf library provides support to pack/unpack Any values in the
          form

          of utility functions or additional generated methods of the Any type.


          Example 1: Pack and unpack a message in C++.

              Foo foo = ...;
              Any any;
              any.PackFrom(foo);
              ...
              if (any.UnpackTo(&foo)) {
                ...
              }

          Example 2: Pack and unpack a message in Java.

              Foo foo = ...;
              Any any = Any.pack(foo);
              ...
              if (any.is(Foo.class)) {
                foo = any.unpack(Foo.class);
              }

           Example 3: Pack and unpack a message in Python.

              foo = Foo(...)
              any = Any()
              any.Pack(foo)
              ...
              if any.Is(Foo.DESCRIPTOR):
                any.Unpack(foo)
                ...

           Example 4: Pack and unpack a message in Go

               foo := &pb.Foo{...}
               any, err := ptypes.MarshalAny(foo)
               ...
               foo := &pb.Foo{}
               if err := ptypes.UnmarshalAny(any, foo); err != nil {
                 ...
               }

          The pack methods provided by protobuf library will by default use

          'type.googleapis.com/full.type.name' as the type URL and the unpack

          methods only use the fully qualified type name after the last '/'

          in the type URL, for example "foo.bar.com/modules/y.z" will yield type

          name "y.z".



          JSON

          ====

          The JSON representation of an `Any` value uses the regular

          representation of the deserialized, embedded message, with an

          additional field `@type` which contains the type URL. Example:

              package google.profile;
              message Person {
                string first_name = 1;
                string last_name = 2;
              }

              {
                "@type": "type.googleapis.com/google.profile.Person",
                "firstName": <string>,
                "lastName": <string>
              }

          If the embedded message type is well-known and has a custom JSON

          representation, that representation will be embedded adding a field

          `value` which holds the custom JSON in addition to the `@type`

          field. Example (for message [google.protobuf.Duration][]):

              {
                "@type": "type.googleapis.com/google.protobuf.Duration",
                "value": "1.212s"
              }
      jailed:
        type: boolean
      status:
        type: string
        enum:
          - BOND_STATUS_UNSPECIFIED
          - BOND_STATUS_UNBONDED
          - BOND_STATUS_UNBONDING
          - BOND_STATUS_BONDED
        default: BOND_STATUS_UNSPECIFIED
        description: |-
          BondStatus is the status of a validator.

           - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.
           - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.
           - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.
           - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.
      tokens:
        type: string
      delegator_shares:
        type: string
      description:
        type: object
        properties:
          moniker:
            type: string
          identity:
            type: string
          website:
            type: string
          security_contact:
            type: string
          details:
            type: string
        description: Description defines a validator description.
      unbonding_height:
        type: string
        format: int64
      unbonding_time:
        type: string
        format: date-time
      commission:
        type: object
        properties:
          commission_rates:
            type: object
            properties:
              rate:
                type: string
              max_rate:
                type: string
              max_change_rate:
                type: string
            description: >-
              CommissionRates defines the initial commission rates to be used
              for creating

              a validator.
          update_time:
            type: string
            format: date-time
        description: Commission defines commission parameters for a given validator.
      min_self_delegation:
        type: string
    description: >-
      Validator defines a validator, together with the total amount of the

      Validator's bond shares and their exchange rate to coins. Slashing results
      in

      a decrease in the exchange rate, allowing correct calculation of future

      undelegations without iterating over delegators. When coins are delegated
      to

      this validator, the validator is credited with a delegation whose number
      of

      bond shares is based on the amount of coins delegated divided by the
      current

      exchange rate. Voting power can be calculated as total bonded shares

      multiplied by exchange rate.
  tendermint.types.BlockID:
    type: object
    properties:
      hash:
        type: string
        format: byte
      part_set_header:
        type: object
        properties:
          total:
            type: integer
            format: int64
          hash:
            type: string
            format: byte
        title: PartsetHeader
    title: BlockID
  tendermint.types.Header:
    type: object
    properties:
      version:
        title: basic block info
        type: object
        properties:
          block:
            type: string
            format: uint64
          app:
            type: string
            format: uint64
        description: >-
          Consensus captures the consensus rules for processing a block in the
          blockchain,

          including all blockchain data structures and the rules of the
          application's

          state transition machine.
      chain_id:
        type: string
      height:
        type: string
        format: int64
      time:
        type: string
        format: date-time
      last_block_id:
        title: prev block info
        type: object
        properties:
          hash:
            type: string
            format: byte
          part_set_header:
            type: object
            properties:
              total:
                type: integer
                format: int64
              hash:
                type: string
                format: byte
            title: PartsetHeader
      last_commit_hash:
        type: string
        format: byte
        title: hashes of block data
      data_hash:
        type: string
        format: byte
      validators_hash:
        type: string
        format: byte
        title: hashes from the app output from the prev block
      next_validators_hash:
        type: string
        format: byte
      consensus_hash:
        type: string
        format: byte
      app_hash:
        type: string
        format: byte
      last_results_hash:
        type: string
        format: byte
      evidence_hash:
        type: string
        format: byte
        title: consensus info
      proposer_address:
        type: string
        format: byte
    description: Header defines the structure of a Tendermint block header.
  tendermint.types.PartSetHeader:
    type: object
    properties:
      total:
        type: integer
        format: int64
      hash:
        type: string
        format: byte
    title: PartsetHeader
  tendermint.version.Consensus:
    type: object
    properties:
      block:
        type: string
        format: uint64
      app:
        type: string
        format: uint64
    description: >-
      Consensus captures the consensus rules for processing a block in the
      blockchain,

      including all blockchain data structures and the rules of the
      application's

      state transition machine.
